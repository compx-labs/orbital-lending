{
    "name": "oracle",
    "structs": {
        "OracleKey": [
            {
                "name": "assetId",
                "type": "uint64"
            }
        ],
        "TokenPrice": [
            {
                "name": "assetId",
                "type": "uint64"
            },
            {
                "name": "price",
                "type": "uint64"
            },
            {
                "name": "lastUpdated",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "createApplication",
            "args": [
                {
                    "type": "account",
                    "name": "admin"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "addTokenListing",
            "args": [
                {
                    "type": "uint64",
                    "name": "assetId"
                },
                {
                    "type": "uint64",
                    "name": "initialPrice"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "updateTokenPrice",
            "args": [
                {
                    "type": "uint64",
                    "name": "assetId"
                },
                {
                    "type": "uint64",
                    "name": "newPrice"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getTokenPrice",
            "args": [
                {
                    "type": "uint64",
                    "name": "assetId"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,uint64)",
                "struct": "TokenPrice"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "removeTokenListing",
            "args": [
                {
                    "type": "uint64",
                    "name": "assetId"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "admin_account": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRtaW5fYWNjb3VudA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "token_prices": {
                    "keyType": "OracleKey",
                    "valueType": "TokenPrice",
                    "prefix": "cHJpY2Vz"
                }
            }
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        252
                    ],
                    "errorMessage": "Box must have value"
                },
                {
                    "pc": [
                        80,
                        95,
                        119,
                        137,
                        155
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        159
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        83,
                        98,
                        122,
                        140
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        187,
                        215,
                        262
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyACAQAmAg1hZG1pbl9hY2NvdW50BnByaWNlczEbQQAqggUE2lP+/gQ7r4jRBIKCnF0ErBPgBAQjq5tqNhoAjgUATQA7ACkAEQACI0MxGRREMRhENhoBiACkIkMxGRREMRhENhoBiACGgAQVH3x1TFCwIkMxGRREMRhENhoBNhoCiABLIkMxGRREMRhENhoBNhoCiAAdIkMxGRREMRgURDYaARfAHIgAAiJDigEAKIv/Z4mKAgAxACMoZUQSRDIHFov+i/9QTFApi/5QTL+JigIAMQAjKGVEEkQpi/5QSb1FAUQyBxaL/ov/UExQv4mKAQEpi/9QSb1FAUS+RImKAQAxACMoZUQSRCmL/1BJvUUBRLxIiQ==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}