{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/orbital-lending/smart-contracts/projects/smart-contracts/smart_contracts/orbital_lending/OrbitalLending.algo.ts"
  ],
  "mappingsk3BG;;AAAA;AAAA;AAAA;;AAAA;AAl3BH;;;AAAA;AAAA;;AAk3BG;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA/DA;;AAAA;AAAA;AAAA;;AAAA;AAnzBH;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmzBG;;;AAAA;;AApEA;;AAAA;AAAA;AAAA;;AAAA;AA/uBH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+uBG;;;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAltBH;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAktBG;;;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AAhpBH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAgpBG;;;AAAA;;AAJD;;AAAA;AAAA;AAAA;;AAAA;AA5oBF;;;AAAA;AAAA;;AA4oBE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAxoBF;;;AAAA;AAAA;;AAwoBE;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7EC;;AAAA;AAAA;AAAA;;AAAA;AA3jBH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AA2jBG;;;AAAA;;AA3LA;;AAAA;AAAA;AAAA;;AAAA;AAhYH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAgYG;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAvWH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAuWG;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAxUH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAwUG;;;AAAA;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AA1RH;;;AAAA;;;AA0RG;;;AAAA;;AAhDD;;AAAA;AAAA;AAAA;;AAAA;AA1OF;;;AAAA;AA0OE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAtMF;;;AAAA;AAAA;;;AAAA;AAsME;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA1KF;;;AAAA;;;AA0KE;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA/IF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA+IE;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AA5HF;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4HE;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAlGF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkGE;;;AAAA;;AA3CC;;AAAA;AAAA;AAAA;;AAAA;AAvDH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAuDG;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjDH;;;AAAA;AAAA;;AAAA;;;AAAA;AAiDG;;;AAAA;;AAAD;;;AAlCA;AAoCE;;AAAA;AAC2B;;AAAA;AAjD7B;AAiDE;AAAA;;AAGF;;;AASgB;;AAjDhB;AAAA;AAAA;AAAA;AAiDS;AAAP;AAEA;;AAAA;;AAnDF;AAAA;AAAA;AAAA;AAmDE;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AAhDF;;AAqDE;;AAAA;AAlDF;;AAmDE;;AAAA;AAhDF;;AAiDE;;AAAA;AA9CF;;AA+CE;;AAAA;AAhCF;;AAiCkC;AAAhC;AA9BF;;AA+B0C;AAAxC;AA7BF;;AA8BwB;AAAtB;AApEF;;AAqE+B;AAA7B;AAlEF;;AAmE8B;AAA5B;AAxCF;;AAyCmC;AAAjC;AAnDF;;AAoDE;;AAAA;AA9EF;AAAA;AAAA;AAAA;AAgF+B;AAA7B;;;AACE;AAE0B;;AAnF9B;AAAA;AAAA;AAAA;AAoF4C;AACvB;;;;;;;AAJjB;;;AAKS;;;;AALT;;;;;;AAcJ;;;AACgB;;AApFhB;AAAA;AAAA;AAAA;AAoFS;AAAP;AACA;;AAAA;;AArFF;AAAA;AAAA;AAAA;AAqFE;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AAjGF;AAAA;AAAA;AAAA;AAwGmD;AAClC;AAEI;;AACE;;AAAA;;AAAA;AACG;;AAAA;;AAAA;AAEJ;;AACiB;;AAAA;;AAAA;AAAvB;;;AAAA;AAAA;AAhHhB;AAAA;AAAA;AAAA;AAiHiB;;;AAAA;AAAA;;;;;;;AAHI;;;;;;;;;AALJ;;;;AASN;;;;AATM;;;AAYW;AAlH5B;;AAkHE;AAAA;;;;;;AAIF;;;AACgB;;AA9GhB;AAAA;AAAA;AAAA;AA8GS;AAAP;AACA;;AAAA;;AA/GF;AAAA;AAAA;AAAA;AA+GE;AAAA;;;AAAA;;AAAA;;AAEU;;;AAFV;AAAA;;;;AAAA;AAI0B;;AAAA;AA5H5B;;AA4HE;AAAA;AAGA;AAE0B;;AAET;;;;;;;;;AAJjB;;;AAKS;;;;AALT;;;;;;AAUF;;;AACgB;;AAjIhB;AAAA;AAAA;AAAA;AAiIS;AAAP;AA1IF;AAAA;;AAAA;AAAA;AA2IiC;AAAoB;;AAAA;;AAA5C;AAAP;AAEA;;AAAA;;AApIF;AAAA;AAAA;AAAA;AAoIE;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;;AAAA;AA1IF;;AA8IE;;AAAA;;;;;;AA9IF;AAAA;;AAAA;AAAA;AAkJE;AA/IF;AAAA;;AAAA;AAAA;AAmJE;AArHF;AAAA;;AAAA;AAAA;AAyHE;AAtHF;AAAA;;AAAA;AAAA;AA0HE;AAGF;;;AACgB;;AA5JhB;AAAA;AAAA;AAAA;AA4JS;AAAP;AAGgB;;AAAA;AAFoD;;AAAA;;AAG5D;;AAH4D;AAAA;AAAA;AAKA;;AAAA;;AAG5D;;AAH4D;AAAA;AAAA;AAKO;;AAAA;AAGnE;;AAHmE;AAAA;AAQ9C;;AAAA;AACA;;AAAA;AACG;;AAAA;AALN;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjJ5B;AAAA;;AAAA;AAAA;AAwJoE;AAAhC;AAAjB;AAlKgC;;AAAA;AAAA;AAkKjD;AAAA;AAxJF;AAAA;;AAAA;AAAA;AAyJkE;AAAhC;AAzJlC;;AAyJE;AAAA;;AAGF;;;AACkC;;AAAA;AAvKiB;;AAAA;AAAA;AAuKc;AAAA;AAAA;AAAA;;AAAA;AACzD;AAAiB;;;AAAjB;AAAA;;AACuB;;AAEsB;AAA7C;AAAA;;AAE+B;AAAgE;;;;;;;;;;;;AAAhE;AAAA;AAAA;;AAI7B;;AAH4D;AAAA;AAAA;;AAMhE;;AAAA;AAAJ;;;AAC+B;;AAAA;AAGrB;;AAHqB;AAAA;AAczB;;AAAA;AAA2B;;AAA6B;AACxD;;AAAA;AAAoB;AACwD;AAA1B;;AAA0B;AAA5E;;AAAA;AAAqB;AACrB;AAA8B;AACpC;;AAAA;AAX+B;;AAAA;AAGrB;;AAHqB;AAAA;;;;AAcjC;;;AAhMA;AAAA;;AAAA;AAAA;AAkM2B;AACJ;AAAG;;AAAA;;AAAA;AAAxB;;;AACkC;;AAAA;AAAA;AA9Me;;AAAA;AAAA;AA8MM;AAAA;;AAAA;AAG/C;;AAAA;;AAAQ;;;AACd;;AAAA;AAAA;;AALuC;AAAA;AAAA;;;;;AAOpB;;AAAc;AAAd;AAAd;;AAAA;AAAA;AAAP;;AAAA;AAGF;;;AACuB;AA3MvB;AAAA;;AAAA;AAAA;AA2M0B;;AAAA;AAAxB;;;AAC+C;;AAAA;AAtNuB;;AAAA;AAAA;AAsNF;AAAA;AACnD;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACS;AAAP;AAAA;AAH+D;;AAAA;AAAA;AAAA;;;;;AAM5D;AAAP;AAAA;AAGF;;;;AACuB;AArNvB;AAAA;;AAAA;AAAA;AAqN0B;;AAAA;AAAA;;AAAA;AAAxB;AAC+C;AAhOuB;;AAAA;AAAA;AAgOF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACE;AAH+D;;AAAA;AAAA;AAAA;;;;;AAQrE;;;;AACuB;;AA9NvB;AAAA;;AAAA;AAAA;AA8N0B;;AAAA;AAAA;;AAAA;AAAxB;AAC+C;AAzOuB;;AAAA;AAAA;AAAA;AAAA;;AAyOF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAA;;;AAAA;;AAAA;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACsD;;AAAA;AAAhB;;AAAgB;AAA9C;;AAAmB;AAGC;AAAA;;;AACP;AAAA;AAHoC;;AAAA;;AAAA;AAAA;AAAA;AAAvD;;AAAA;AAAA;AAKA;AAT+D;;AAAA;AAAA;AAAA;;;;;AAerE;;;AAvRA;AAAA;AAAA;AAAA;AAyRmD;AACnC;;AA9QhB;AAAA;AAAA;AAAA;AA8QS;AAAP;AACyB;;AAAA;AAAlB;AAAA;;AAAA;AAAP;AACmB;;AAAA;AAAZ;;AAAA;AAAP;AACQ;;AAAA;;;AAAD;AAAP;AAEkD;;AAAA;;AAAA;AAG/B;;;;;;;;;;AAH+B;AArPpD;AAAA;;AAAA;AAAA;AA0PqF;AAAxC;AAAjB;AApQ4C;;AAAA;AAAA;AAoQtE;AAAA;AA1PF;AAAA;;AAAA;AAAA;AA4PkF;AAAxC;AA5P1C;;AA4PE;AAAA;AACA;AAEmB;;AACO;AAET;;;;;;;;;;;AALjB;;;AAAA;;;AAAA;;AA8BF;;;AArUA;AAAA;AAAA;AAAA;AAuUmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAQS;;AAhVX;AAAA;AAAA;AAAA;AAiV6B;AAFJ;;AAAjB;AAIN;;;;;AAKA;AAE0B;;AAvV5B;AAAA;;AAAA;AAAA;AAwVyC;;;;;;;;;AAHvC;;;AAAA;;;AAAA;AAlVF;AAAA;;AAAA;AAAA;AA0VE;AA1VF;;AA0VE;AAAA;AAvVF;AAAA;;AAAA;AAAA;AAwVE;;AAAA;AAxVF;;AAwVE;AAAA;;AA3VF;AAAA;;AAAA;AAAA;AA4SiE;AAAjC;AAzShC;AAAA;;AAAA;AAAA;AA2SmB;AAEa;;AAAA;AACG;AAA1B;;;;;;;;AA6CT;;;AApWA;AAAA;AAAA;AAAA;AAsWmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AA1C+B;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACD;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAGb;;AAAA;AACV;;AAAA;AA8CoC;;AAhX7C;AAAA;AAAA;AAAA;AAgXiG;AAAxF;;AAAA;AAAA;;AAAA;AAAP;AACA;AAE0B;;AAnX5B;AAAA;AAAA;AAAA;AAoX0C;;;;;;;;;AAHxC;;;AAAA;;;AAAA;AA3WF;AAAA;;AAAA;AAAA;AAmXE;;AAAA;AAnXF;;AAmXE;AAAA;AAhXF;AAAA;;AAAA;AAAA;AAiXE;AAAA;AAjXF;;AAiXE;AAAA;;;;;;AAGF;;;AA3VuD;AAoWb;;AApWa;AAoWL;AAAA;;AAGhD;;AAAA;;AACwB;;AADxB;AAAA;AAIO;;AAAA;;;AAAP;AACM;;AAAqC;;AAArC;AAAA;;AAGA;;AAAqB;;;AACI;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACD;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAGb;;AAAA;AACX;;AAA+B;AAGgD;AAAZ;;AAAY;AAAzD;;;AACX;AAC0B;AAAb;AA7YhC;AAAA;;AAAA;AAAA;AA+YgC;AAAsC;AAAvC;AAAvB;AAtYR;AAAA;;AAAA;AAAA;AAyYuB;;AAAA;AAAwD;AAAzD;AACd;;AAAA;;AAAuB;AAAvB;AAAA;;AAAA;;AAtXR;AAAA;;AAAA;AAAA;AAuXE;AAvXF;;AAuXE;AAAA;AAnaF;AAAA;AAAA;AAAA;AAsasF;AAAtD;;AAAA;AACH;;AAArB;AAAqB;AACV;AACa;;AACN;AADM;;AAEH;AAArB;;AAGN;;;AAEsC;;AAA1B;;;AACJ;;;AAAA;AA/Y6C;AAgZ3B;;AAhZ2B;AAgZnD;;AAAA;AAE0D;AAAvB;;AAAuB;AAApD;AAAA;;AAAyB;AACxB;;AAAA;AAAP;AAGqD;;AAAjB;;AAAiB;AAA/C;;AAAA;AAAA;;AAA0B;AAE1B;AAAA;;AAAA;AAAA;;AAAkB;AACsB;;AAAb;;AAAa;AAAxC;;AAAuB;AAMvB;;AAAA;;;AACG;;AAGH;;AAAA;;;AAAgB;;AAAhB;;AAAgB;AAPtB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAWuB;;AAAA;;;AAEH;;AAAA;AACJ;;AAAA;AACU;;AAAA;AACH;;AAAA;;;AAEoB;;AAAnB;AARgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAtaW;AAsa3B;;AAta2B;AAsanD;AAAA;AApaJ;AAAA;;AAAA;AAAA;AA8asE;AAAjC;AA9arC;;AA8aI;AAAA;AACA;;AAAA;AAAA;;;AAeF;AAE0B;;AApe5B;AAAA;AAAA;AAAA;AAqe0C;;;;;;;;;AAHxC;;;AAAA;;;AAAA;;AAZS;;AAAA;AAAP;AAKS;;AAwDG;AAEC;;;AAAA;;AAAA;AAAA;AAAwC;;;AAAxC;AArhBjB;AAAA;AAAA;AAAA;AAqhBiB;AAET;;AACA;;AADA;AAAA;;AAAA;AAGA;;AAHA;AAIO;;AAAA;AAJP;AAAA;;AAAA;AAKA;;AALA;AAM0B;;AAAnB;AANP;AAOc;;AAGD;AAjiBrB;AAAA;AAAA;AAAA;AAkiBgB;;AAAA;AAAA;AAEK;;AACE;AACF;;;;;;;;;;;;;;;;;;;;AAPL;;;;;;;;;;;;;AAZA;;;;AAAA;;;AAAA;;;AA0BM;;AAAA;AACJ;;AAAA;AA9iBlB;AAAA;AAAA;AAAA;AAijBqB;;AAAA;AACwB;;AAAnB;AARO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxgBsB;AAAA;;AAAA;AAkhBrD;AAAA;AAhhBF;AAAA;;AAAA;AAAA;AAihBoE;AAAjC;AAjhBnC;;AAihBE;AAAA;;;;AA1EF;;;AASgB;AAEM;;AACD;;;;;;;;;;;;;AAHL;;;;AAAA;;;AAAA;;;AAYM;;AAAA;AACJ;;AAAA;AACU;;AAAA;AAlgB5B;AAAA;AAAA;AAAA;AAogBqB;;AAAA;AACwB;;AAAnB;AARO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3dsB;AAAA;;AAAA;AAqerD;AAAA;AAneF;AAAA;;AAAA;AAAA;AAoeoE;AAAjC;AApenC;;AAoeE;AAAA;;AAgDF;;;AAthBuD;AAAA;;AAAA;AAwhBrB;AAAA;AAAA;;AAAhC;AAC2B;;AAAP;;AAAA;;AAAA;;AACpB;AAC4C;AAAA;;AAAA;AAC5C;AAIiB;;;;;;;;;;;AAJjB;;;AAAA;;;AAAA;AASA;AAE0B;;;;;;AAET;;;;;;;;;AAJjB;;;AAAA;;;AAAA;;AAUF;;;AACqB;;AAAb;AACA;;AAAc;;AAAqB;AAAnC;AAAA;;AAEF;AAAJ;;;AAAiB;;AAAA;AAAA;;AAAA;;AAAA;AAEX;;AAAA;AAAA;;AAAiB;AACjB;;AAA2B;;AAAuB;AAnkB1D;AAAA;;AAAA;AAAA;AAukBqB;;AAAA;AAEuB;AAAf;AAER;;AAAA;AAvmBU;;;;;AAymBJ;AAxkB3B;AAAA;;AAAA;AAAA;AA2kB+B;AAAvB;AAAuB;AAGN;;AAAA;AAC8B;AAAnB;AAG5B;AAA2B;AAnmBnC;AAAA;;AAAA;AAAA;AAumBE;;AAAA;AAvmBF;;AAumBE;AAAA;AApkBF;AAAA;;AAAA;AAAA;AAskBE;AAtkBF;;AAskBE;AAAA;AAI6B;AAIH;;AAAA;;;AACE;;AAAA;;;AACD;;AAAA;;;AACJ;;AAAA;;;AACG;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;;AACF;;AAAA;AARjB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAAA;;AAAA;;AAAA;AAYF;;;AAnmBuD;AAAA;;AAAA;AAomBZ;AAAA;AAAzC;AAGF;;;AAvmBuD;AAAA;;AAAA;AAwmBZ;AAAA;AAAM;;AAAgB;AAA/D;AAGF;;;;;;AA7oBA;AAAA;AAAA;AAAA;AA+oBmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAM2C;;AAA1B;;;AACJ;;;AAAA;AAAA;AAAA;;AArnBwC;AAsnB7B;;AAtnB6B;AAsnBrD;;AAAA;AAEuD;;AAA/B;;;AAAlB;AAEkC;;AACX;AAAtB;;AAAA;;AAAA;AAAP;AACM;;AAAwB;AAAxB;AAAA;;AAEN;;;AACE;AAGmB;;;;;;AAHnB;;;;AAAA;;;AAAA;AA/nBmD;AAwoB3B;;AAxoB2B;AAwoBnB;;AAtoBpC;AAAA;;AAAA;AAAA;AAuoBsE;AAAjC;AAvoBrC;;AAuoBI;AAAA;AAEA;AAE0B;;AACkB;;AAAA;AAAlB;;AAAkB;AACC;AAAjB;;AAAiB;;;;;;;AAJ7C;;;AAAA;;;AAAA;;AAW0B;;AAAA;AAAb;;AAAa;AACb;;AAAA;;;AACJ;;AACqB;;AAAjB;;AAAiB;AAL9B;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;AAcY;;AAxrBhB;AAAA;AAAA;AAAA;AAwrBS;AAAP;AACA;AAzrBF;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAwsB0C;AA5pB1C;AAAA;;AAAA;AAAA;;;;;;;AAypBE;;;AAAA;;;AAAA;AAzpBF;;AAgqBwB;AAAtB;;AAGF;;;AA7qBuD;AAAA;;AAAA;AA+qBrB;AAAA;AAAA;;AAAhC;AACmD;AAAA;AAAA;AAEnD;;;AAAA;;AAGA;AAEmD;AAAhB;;AAAgB;AAChC;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAS2C;;AAAvB;;AAAuB;AACV;;AAAb;;AAAa;AACb;;AAAA;;;AAEiB;;AAAjB;;AAAiB;AALrC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAUA;;AAGF;;;;;AA1sBuD;AAAA;;AAAA;AAAA;;AA4sBrB;AAAA;;AAAhC;AACmD;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAA;;AAAA;AAEM;AAAqC;;AAAiB;AAAtD;AAAA;;AACA;AAA+B;;AAAuB;AAAtD;AAAA;;AAAA;;AAC2D;;AAAkB;AAAhD;AAAA;AAAA;;AACR;;;AAEe;AAAhB;;AAAgB;AAAA;AAAA;;AAAnC;;AAAA;AAAP;AAGyE;;AAAY;AAAzD;;;AACX;AAC0B;AAAb;AACxB;AAAA;;AAAa;AA3uBrB;AAAA;;AAAA;AAAA;AA4uBS;;AAAA;AAAP;AAEkC;AAAL;AA9uB/B;AAAA;;AAAA;AAAA;AA8uB8B;AAA8C;AAA9C;AACmC;AAAd;AAAJ;AAAA;AAAjB;AAE5B;;AAAA;;AAnwBF;AAAA;AAAA;AAAA;AAowB8C;AAD5C;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAS2B;;AAA4E;;AAAhB;;AAAgB;AAAA;AAAA;;AAAnF;;AAAA;;AAChB;;;AACF;AAE0B;;;;;;;;;;;;;;;;AAF1B;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AA5vB3B;AAAA;;AAAA;AAAA;AA6vBoE;AAAjC;AA7vBnC;;AA6vBE;AAAA;AAGA;AAGiC;;AAAA;AAAA;;;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAQM;;AAAA;AAAmB;AACzB;;;;;;;;AAGF;;;;;AA9wBuD;AAAA;;AAAA;AAAA;;AAgxBrB;AAAA;;AAAhC;AAEwC;AAAA;AAAA;AAAA;;AAAA;AAClC;AAA0B;;AAAiB;AAA3C;AAAA;;AACA;AAAoB;;AAAuB;AAA3C;AAAA;;AAAA;;AAC2B;;;AAA3B;AAAA;;AACqB;;;AAArB;AAAA;;AAE2D;;AAAY;AAAzD;;;AACL;AACkB;AAAX;AAEhB;AAAa;AA5yBrB;AAAA;;AAAA;AAAA;AA6yBS;AAAP;AAGA;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAl0BF;AAAA;AAAA;AAAA;AAo0B8C;AAF5C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAOM;;AAAyB;;AAAgB;AAAzC;AAAA;;AACqB;;AAAP;AAAA;;AAAA;;AAChB;;;AACF;AAE0B;;AAGT;;;;;;;;;;;;;AALjB;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AA1zB3B;AAAA;;AAAA;AAAA;AA2zBoE;AAAjC;AA3zBnC;;AA2zBE;AAAA;AAGA;AAE0B;;AACO;;AA9CA;;AA8CA;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAS4D;;AAAhB;;AAAgB;AAAtD;AAAmB;AACzB;;AAAA;AAAA;;;;;;;;AAGF;;;AA70BuD;AAAA;;AAAA;AAu1BnB;AAAA;AAAA;;AAAlC;AACwC;AAAA;AAC/B;;;AAAA;AAEH;AAAsB;;AAAuB;AAC7C;;AAAkC;;AAAiB;AA52B3D;AAAA;;AAAA;AAAA;AA+2BuD;;AAAA;;;AAA1B;;;AACsC;;AAAY;AAAzD;;;AACH;;AAAA;AACuB;AAAb;AAEP;AAAqB;AAArB;AAAd;;AAAa;AACb;AAAA;;AAAyB;AACzB;;AAAA;;AAAoB;AAE1B;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4 10000 1000 4294967296"
    },
    "15": {
      "op": "bytecblock \"base_token_id\" \"loan_record\" 0x151f7c75 \"admin_account\" \"active_loan_records\" \"total_deposits\" \"accepted_collaterals_count\" \"circulating_lst\" \"fee_pool\" \"oracle_pools_count\" \"liq_threshold_bps\" \"lst_token_id\" \"accepted_collaterals\" 0x09ef525f 0xae859f3b \"oracle_pool\" \":\" \"ltv_bps\" \"interest_bps\" \"origination_fee_bps\" \"protocol_interest_fee_bps\" \"asset_1_cumulative_price\" \"asset_2_cumulative_price\" \"cumulative_price_update_timestamp\""
    },
    "395": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "397": {
      "op": "bz main_after_if_else@31",
      "stack_out": []
    },
    "400": {
      "op": "pushbytess 0x3b01665e 0x494bc3f7 0x17c33662 0x5efce39a 0x5cac25a9 // method \"createApplication(account,uint64)void\", method \"initApplication(pay,uint64,uint64,uint64,uint64,uint64)void\", method \"generateLSTToken(pay)void\", method \"optInToLST(uint64,pay)void\", method \"configureLSTToken(axfer,uint64)void\"",
      "defined_out": [
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(optInToLST(uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)"
      ]
    },
    "427": {
      "op": "bytec 13 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(optInToLST(uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "429": {
      "op": "bytec 14 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(optInToLST(uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "431": {
      "op": "pushbytess 0x8925c50f 0x6c6337c0 0x31274359 0x8bbde2aa 0xd4bfb233 0xb014f687 0x3acbfb6f 0x50c57985 0xad8d1580 0x6177ca28 0xf676074f 0xabaf9805 0xb278e573 0x96da416e 0xf0de9dc0 0x554adf13 0xc9db0463 0xdaa7f7f2 // method \"getOraclePoolsCount()uint64\", method \"getAcceptedCollateralsCount()uint64\", method \"addOraclePool(address,uint64)void\", method \"getOraclePrice(uint64,uint64)uint64\", method \"getPricesFromOracles(uint64)uint64\", method \"addNewCollateralType(uint64,uint64)void\", method \"depositASA(axfer,uint64)void\", method \"withdrawDeposit(axfer,uint64,uint64)void\", method \"borrow(axfer,uint64,uint64,uint64,byte[])void\", method \"claimLoanRecordASA(account,asset)void\", method \"getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"getLoanRecordASAId(account)uint64\", method \"repayLoan(axfer,uint64,byte[])void\", method \"withdrawFees()void\", method \"accrueLoanInterest(account,byte[])void\", method \"buyout(account,account,axfer)void\", method \"liquidate(account,axfer)void\", method \"getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool)\"",
      "defined_out": [
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[])void)",
        "Method(buyout(account,account,axfer)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getCirculatingLST()uint64)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(liquidate(account,axfer)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(repayLoan(axfer,uint64,byte[])void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(withdrawFees()void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[])void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(repayLoan(axfer,uint64,byte[])void)",
        "Method(withdrawFees()void)",
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(buyout(account,account,axfer)void)",
        "Method(liquidate(account,axfer)void)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))"
      ]
    },
    "523": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[])void)",
        "Method(buyout(account,account,axfer)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getCirculatingLST()uint64)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(liquidate(account,axfer)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(repayLoan(axfer,uint64,byte[])void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(withdrawFees()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[])void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(repayLoan(axfer,uint64,byte[])void)",
        "Method(withdrawFees()void)",
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(buyout(account,account,axfer)void)",
        "Method(liquidate(account,axfer)void)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))",
        "tmp%2#0"
      ]
    },
    "526": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_generateLSTToken_route@5 main_optInToLST_route@6 main_configureLSTToken_route@7 main_getCirculatingLST_route@8 main_getTotalDeposits_route@9 main_getOraclePoolsCount_route@10 main_getAcceptedCollateralsCount_route@11 main_addOraclePool_route@12 main_getOraclePrice_route@13 main_getPricesFromOracles_route@14 main_addNewCollateralType_route@15 main_depositASA_route@16 main_withdrawDeposit_route@17 main_borrow_route@18 main_claimLoanRecordASA_route@19 main_getLoanRecord_route@20 main_getLoanRecordASAId_route@21 main_repayLoan_route@22 main_withdrawFees_route@23 main_accrueLoanInterest_route@24 main_buyout_route@25 main_liquidate_route@26 main_getLoanStatus_route@27",
      "stack_out": []
    },
    "578": {
      "block": "main_after_if_else@31",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "579": {
      "op": "return",
      "stack_out": []
    },
    "580": {
      "block": "main_getLoanStatus_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "582": {
      "op": "!",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "583": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "584": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%161#0"
      ]
    },
    "586": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "587": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "590": {
      "op": "btoi",
      "defined_out": [
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%163#0"
      ]
    },
    "591": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0"
      ]
    },
    "593": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanStatus",
      "op": "callsub getLoanStatus",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0"
      ]
    },
    "596": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%0#0"
      ]
    },
    "598": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "599": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "elements_to_encode%1#0"
      ]
    },
    "601": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "602": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "elements_to_encode%2#0"
      ]
    },
    "604": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "605": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "elements_to_encode%3#0"
      ]
    },
    "607": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%10#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "608": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "elements_to_encode%4#0"
      ]
    },
    "610": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "611": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0x00"
      ]
    },
    "614": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0x00",
        "0"
      ]
    },
    "615": {
      "op": "uncover 8",
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0x00",
        "0",
        "elements_to_encode%5#0"
      ]
    },
    "617": {
      "op": "setbit",
      "defined_out": [
        "elements_to_encode%6#0",
        "encoded_bool%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0"
      ]
    },
    "618": {
      "op": "pushbytes 0x00",
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "621": {
      "op": "intc_0 // 0",
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "622": {
      "op": "uncover 8",
      "stack_out": [
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "elements_to_encode%6#0"
      ]
    },
    "624": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "625": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%7#0"
      ]
    },
    "627": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "629": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "630": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%9#0"
      ]
    },
    "632": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "633": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%10#0"
      ]
    },
    "635": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "val_as_bytes%11#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "636": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%11#0"
      ]
    },
    "638": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "639": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_bool%0#0"
      ]
    },
    "641": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "642": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_bool%1#0"
      ]
    },
    "643": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "644": {
      "op": "getbit",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "is_true%0#0"
      ]
    },
    "645": {
      "op": "pushint 321 // 321"
    },
    "648": {
      "op": "swap",
      "defined_out": [
        "321",
        "encoded_tuple_buffer%6#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "321",
        "is_true%0#0"
      ]
    },
    "649": {
      "op": "setbit",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "650": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "0x151f7c75"
      ]
    },
    "651": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "652": {
      "op": "concat",
      "defined_out": [
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%165#0"
      ]
    },
    "653": {
      "op": "log",
      "stack_out": []
    },
    "654": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "655": {
      "op": "return",
      "stack_out": []
    },
    "656": {
      "block": "main_liquidate_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "658": {
      "op": "!",
      "defined_out": [
        "tmp%153#0"
      ],
      "stack_out": [
        "tmp%153#0"
      ]
    },
    "659": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "660": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "662": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "663": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "666": {
      "op": "btoi",
      "defined_out": [
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%156#0"
      ]
    },
    "667": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0"
      ]
    },
    "669": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%157#0",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "tmp%158#0"
      ]
    },
    "671": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%157#0",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "tmp%158#0",
        "1"
      ]
    },
    "672": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%9#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "gtxn_idx%9#0"
      ]
    },
    "673": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%9#0 (copy)",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "gtxn_idx%9#0",
        "gtxn_idx%9#0 (copy)"
      ]
    },
    "674": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%9#0",
        "gtxn_type%9#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "gtxn_idx%9#0",
        "gtxn_type%9#0"
      ]
    },
    "676": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%9#0",
        "gtxn_type%9#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "gtxn_idx%9#0",
        "gtxn_type%9#0",
        "axfer"
      ]
    },
    "677": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%9#0",
        "gtxn_type_matches%9#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0",
        "gtxn_idx%9#0",
        "gtxn_type_matches%9#0"
      ]
    },
    "678": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%157#0",
        "gtxn_idx%9#0"
      ]
    },
    "679": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.liquidate",
      "op": "callsub liquidate",
      "stack_out": []
    },
    "682": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "683": {
      "op": "return",
      "stack_out": []
    },
    "684": {
      "block": "main_buyout_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "686": {
      "op": "!",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "687": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "688": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "690": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "691": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "694": {
      "op": "btoi",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "695": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "697": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%7#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "700": {
      "op": "btoi",
      "defined_out": [
        "tmp%148#0",
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%149#0"
      ]
    },
    "701": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%148#0",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0"
      ]
    },
    "703": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%148#0",
        "tmp%150#0",
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "tmp%151#0"
      ]
    },
    "705": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%148#0",
        "tmp%150#0",
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "tmp%151#0",
        "1"
      ]
    },
    "706": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%8#0",
        "tmp%148#0",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "gtxn_idx%8#0"
      ]
    },
    "707": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)",
        "tmp%148#0",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)"
      ]
    },
    "708": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "tmp%148#0",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0"
      ]
    },
    "710": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "tmp%148#0",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "axfer"
      ]
    },
    "711": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0",
        "tmp%148#0",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0"
      ]
    },
    "712": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%148#0",
        "tmp%150#0",
        "gtxn_idx%8#0"
      ]
    },
    "713": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.buyout",
      "op": "callsub buyout",
      "stack_out": []
    },
    "716": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "717": {
      "op": "return",
      "stack_out": []
    },
    "718": {
      "block": "main_accrueLoanInterest_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "720": {
      "op": "!",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "721": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "722": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "724": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "725": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "728": {
      "op": "btoi",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "729": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "731": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%140#0",
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%140#0",
        "tmp%141#0"
      ]
    },
    "734": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%140#0",
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%140#0",
        "tmp%142#0"
      ]
    },
    "737": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueLoanInterest",
      "op": "callsub accrueLoanInterest",
      "stack_out": []
    },
    "740": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "741": {
      "op": "return",
      "stack_out": []
    },
    "742": {
      "block": "main_withdrawFees_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "744": {
      "op": "!",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "745": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "746": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "748": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "749": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawFees",
      "op": "callsub withdrawFees"
    },
    "752": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "753": {
      "op": "return",
      "stack_out": []
    },
    "754": {
      "block": "main_repayLoan_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "756": {
      "op": "!",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "757": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "758": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "760": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "761": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "763": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0",
        "1"
      ]
    },
    "764": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0"
      ]
    },
    "765": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "766": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "768": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "axfer"
      ]
    },
    "769": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "770": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%7#0"
      ]
    },
    "771": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%7#0",
        "reinterpret_bytes[8]%20#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "reinterpret_bytes[8]%20#0"
      ]
    },
    "774": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%128#0"
      ]
    },
    "775": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%128#0",
        "tmp%129#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%128#0",
        "tmp%129#0"
      ]
    },
    "778": {
      "op": "extract 2 0",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%128#0",
        "tmp%130#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%128#0",
        "tmp%130#0"
      ]
    },
    "781": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.repayLoan",
      "op": "callsub repayLoan",
      "stack_out": []
    },
    "784": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "785": {
      "op": "return",
      "stack_out": []
    },
    "786": {
      "block": "main_getLoanRecordASAId_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "788": {
      "op": "!",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "789": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "790": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "792": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "793": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "796": {
      "op": "btoi",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "797": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "799": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0"
      ]
    },
    "802": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0"
      ]
    },
    "803": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0",
        "0x151f7c75"
      ]
    },
    "804": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%6#0"
      ]
    },
    "805": {
      "op": "concat",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "806": {
      "op": "log",
      "stack_out": []
    },
    "807": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "808": {
      "op": "return",
      "stack_out": []
    },
    "809": {
      "block": "main_getLoanRecord_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "811": {
      "op": "!",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "812": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "813": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "815": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "816": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "819": {
      "op": "btoi",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "820": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "822": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "825": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "0x151f7c75"
      ]
    },
    "826": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%114#0"
      ]
    },
    "827": {
      "op": "concat",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "828": {
      "op": "log",
      "stack_out": []
    },
    "829": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "830": {
      "op": "return",
      "stack_out": []
    },
    "831": {
      "block": "main_claimLoanRecordASA_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "833": {
      "op": "!",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "834": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "835": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "837": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "838": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "841": {
      "op": "btoi",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "842": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "844": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "847": {
      "op": "btoi",
      "defined_out": [
        "tmp%105#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "tmp%106#0"
      ]
    },
    "848": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%105#0",
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "tmp%107#0"
      ]
    },
    "850": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.claimLoanRecordASA",
      "op": "callsub claimLoanRecordASA",
      "stack_out": []
    },
    "853": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "854": {
      "op": "return",
      "stack_out": []
    },
    "855": {
      "block": "main_borrow_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "857": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "858": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "859": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "861": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "862": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "864": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0",
        "1"
      ]
    },
    "865": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "866": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "867": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "869": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "axfer"
      ]
    },
    "870": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "871": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "872": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%6#0",
        "reinterpret_bytes[8]%17#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "875": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%96#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%96#0"
      ]
    },
    "876": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%6#0",
        "reinterpret_bytes[8]%18#0",
        "tmp%96#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%96#0",
        "reinterpret_bytes[8]%18#0"
      ]
    },
    "879": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%96#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%96#0",
        "tmp%97#0"
      ]
    },
    "880": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%6#0",
        "reinterpret_bytes[8]%19#0",
        "tmp%96#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%96#0",
        "tmp%97#0",
        "reinterpret_bytes[8]%19#0"
      ]
    },
    "883": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%6#0",
        "reinterpret_bytes[8]%19#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%98#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%96#0",
        "tmp%97#0",
        "reinterpret_bytes[8]%19#0",
        "tmp%98#0"
      ]
    },
    "886": {
      "op": "extract 2 0",
      "defined_out": [
        "gtxn_idx%6#0",
        "reinterpret_bytes[8]%19#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%99#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%96#0",
        "tmp%97#0",
        "reinterpret_bytes[8]%19#0",
        "tmp%99#0"
      ]
    },
    "889": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.borrow",
      "op": "callsub borrow",
      "stack_out": []
    },
    "892": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "893": {
      "op": "return",
      "stack_out": []
    },
    "894": {
      "block": "main_withdrawDeposit_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "896": {
      "op": "!",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "897": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "898": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "900": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "901": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "903": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0",
        "1"
      ]
    },
    "904": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "905": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "906": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "908": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "axfer"
      ]
    },
    "909": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "910": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "911": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_bytes[8]%15#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "914": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%89#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%89#0"
      ]
    },
    "915": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_bytes[8]%16#0",
        "tmp%89#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%89#0",
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "918": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%89#0",
        "tmp%90#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%89#0",
        "tmp%90#0"
      ]
    },
    "919": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawDeposit",
      "op": "callsub withdrawDeposit",
      "stack_out": []
    },
    "922": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "923": {
      "op": "return",
      "stack_out": []
    },
    "924": {
      "block": "main_depositASA_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "926": {
      "op": "!",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "927": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "928": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "930": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "931": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "933": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0",
        "1"
      ]
    },
    "934": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "935": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "936": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "938": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "axfer"
      ]
    },
    "939": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "940": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "941": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "944": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "tmp%83#0"
      ]
    },
    "945": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.depositASA",
      "op": "callsub depositASA",
      "stack_out": []
    },
    "948": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "949": {
      "op": "return",
      "stack_out": []
    },
    "950": {
      "block": "main_addNewCollateralType_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "952": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "953": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "954": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "956": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "957": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "960": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%12#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "963": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.addNewCollateralType",
      "op": "callsub addNewCollateralType",
      "stack_out": []
    },
    "966": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "967": {
      "op": "return",
      "stack_out": []
    },
    "968": {
      "block": "main_getPricesFromOracles_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "970": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "971": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "972": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "974": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "975": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "978": {
      "op": "btoi",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "979": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "982": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0"
      ]
    },
    "983": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "0x151f7c75"
      ]
    },
    "984": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ]
    },
    "985": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "986": {
      "op": "log",
      "stack_out": []
    },
    "987": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "988": {
      "op": "return",
      "stack_out": []
    },
    "989": {
      "block": "main_getOraclePrice_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "991": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "992": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "993": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "995": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "996": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "999": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "1000": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%10#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "1003": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "1004": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "1007": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "1008": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "1009": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "1010": {
      "op": "concat",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "1011": {
      "op": "log",
      "stack_out": []
    },
    "1012": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1013": {
      "op": "return",
      "stack_out": []
    },
    "1014": {
      "block": "main_addOraclePool_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1016": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1017": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1018": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1020": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1021": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1024": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "1027": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.addOraclePool",
      "op": "callsub addOraclePool",
      "stack_out": []
    },
    "1030": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1031": {
      "op": "return",
      "stack_out": []
    },
    "1032": {
      "block": "main_getAcceptedCollateralsCount_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1034": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1035": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1036": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "1038": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1039": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getAcceptedCollateralsCount",
      "op": "callsub getAcceptedCollateralsCount",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "1042": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0"
      ]
    },
    "1043": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "1044": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "1045": {
      "op": "concat",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "1046": {
      "op": "log",
      "stack_out": []
    },
    "1047": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1048": {
      "op": "return",
      "stack_out": []
    },
    "1049": {
      "block": "main_getOraclePoolsCount_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "1051": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1052": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1053": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1055": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1056": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePoolsCount",
      "op": "callsub getOraclePoolsCount",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "1059": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "1060": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "1061": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "1062": {
      "op": "concat",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1063": {
      "op": "log",
      "stack_out": []
    },
    "1064": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1065": {
      "op": "return",
      "stack_out": []
    },
    "1066": {
      "block": "main_getTotalDeposits_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1068": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1069": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1070": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1072": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1073": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getTotalDeposits",
      "op": "callsub getTotalDeposits",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "1076": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "1077": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "1078": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "1079": {
      "op": "concat",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1080": {
      "op": "log",
      "stack_out": []
    },
    "1081": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1082": {
      "op": "return",
      "stack_out": []
    },
    "1083": {
      "block": "main_getCirculatingLST_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1085": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1086": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1087": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1089": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1090": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCirculatingLST",
      "op": "callsub getCirculatingLST",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1093": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1094": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1095": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1096": {
      "op": "concat",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1097": {
      "op": "log",
      "stack_out": []
    },
    "1098": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1099": {
      "op": "return",
      "stack_out": []
    },
    "1100": {
      "block": "main_configureLSTToken_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1102": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1103": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1104": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1106": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1107": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1109": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "1"
      ]
    },
    "1110": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1111": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "1112": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "1114": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "1115": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "1116": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1117": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "1120": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%36#0"
      ]
    },
    "1121": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.configureLSTToken",
      "op": "callsub configureLSTToken",
      "stack_out": []
    },
    "1124": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1125": {
      "op": "return",
      "stack_out": []
    },
    "1126": {
      "block": "main_optInToLST_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1128": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1129": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1130": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1132": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1133": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "1136": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1137": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1139": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "1"
      ]
    },
    "1140": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "gtxn_idx%2#0"
      ]
    },
    "1141": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "1142": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "1144": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "1145": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "1146": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%29#0",
        "gtxn_idx%2#0"
      ]
    },
    "1147": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.optInToLST",
      "op": "callsub optInToLST",
      "stack_out": []
    },
    "1150": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1151": {
      "op": "return",
      "stack_out": []
    },
    "1152": {
      "block": "main_generateLSTToken_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1154": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1155": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1156": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1158": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1159": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1161": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "1"
      ]
    },
    "1162": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "1163": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "1164": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "1166": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "1167": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "1168": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "1169": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.generateLSTToken",
      "op": "callsub generateLSTToken",
      "stack_out": []
    },
    "1172": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1173": {
      "op": "return",
      "stack_out": []
    },
    "1174": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1176": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1177": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1178": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1180": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1181": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1183": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "1184": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "1185": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "1186": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "1188": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1189": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1190": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "1191": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "1194": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ]
    },
    "1195": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "1198": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1199": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "1202": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1203": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "1206": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1207": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "1210": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1211": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "1214": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1215": {
      "op": "return",
      "stack_out": []
    },
    "1216": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1218": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1219": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1220": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1222": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1223": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1224": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "1227": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1228": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1230": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1233": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1234": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "1237": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1238": {
      "op": "return",
      "stack_out": []
    },
    "1239": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.createApplication",
      "params": {
        "admin#0": "bytes",
        "baseTokenId#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1242": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\""
      ],
      "stack_out": [
        "\"admin_account\""
      ]
    },
    "1243": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ]
    },
    "1245": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1246": {
      "op": "frame_dig -1",
      "defined_out": [
        "baseTokenId#0 (copy)"
      ],
      "stack_out": [
        "baseTokenId#0 (copy)"
      ]
    },
    "1248": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1249": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"base_token_id\""
      ]
    },
    "1250": {
      "op": "swap",
      "stack_out": [
        "\"base_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1251": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1252": {
      "retsub": true,
      "op": "retsub"
    },
    "1253": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.initApplication",
      "params": {
        "mbrTxn#0": "uint64",
        "ltv_bps#0": "uint64",
        "liq_threshold_bps#0": "uint64",
        "interest_bps#0": "uint64",
        "origination_fee_bps#0": "uint64",
        "protocol_interest_fee_bps#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "1256": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1258": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1259": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1260": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1261": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1262": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1263": {
      "op": "assert",
      "stack_out": []
    },
    "1264": {
      "op": "frame_dig -6",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1266": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1269": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1270": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1271": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1272": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1273": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "1276": {
      "op": "frame_dig -6",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1278": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1280": {
      "op": "pushint 400000 // 400000",
      "defined_out": [
        "400000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "400000"
      ]
    },
    "1284": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1285": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "1288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1289": {
      "block": "initApplication_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1290": {
      "op": "bytec 17 // \"ltv_bps\"",
      "defined_out": [
        "\"ltv_bps\""
      ],
      "stack_out": [
        "\"ltv_bps\""
      ]
    },
    "1292": {
      "op": "frame_dig -5",
      "defined_out": [
        "\"ltv_bps\"",
        "ltv_bps#0 (copy)"
      ],
      "stack_out": [
        "\"ltv_bps\"",
        "ltv_bps#0 (copy)"
      ]
    },
    "1294": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1295": {
      "op": "bytec 10 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\""
      ],
      "stack_out": [
        "\"liq_threshold_bps\""
      ]
    },
    "1297": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "liq_threshold_bps#0 (copy)"
      ],
      "stack_out": [
        "\"liq_threshold_bps\"",
        "liq_threshold_bps#0 (copy)"
      ]
    },
    "1299": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1300": {
      "op": "bytec 18 // \"interest_bps\"",
      "defined_out": [
        "\"interest_bps\""
      ],
      "stack_out": [
        "\"interest_bps\""
      ]
    },
    "1302": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"interest_bps\"",
        "interest_bps#0 (copy)"
      ],
      "stack_out": [
        "\"interest_bps\"",
        "interest_bps#0 (copy)"
      ]
    },
    "1304": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1305": {
      "op": "bytec 19 // \"origination_fee_bps\"",
      "defined_out": [
        "\"origination_fee_bps\""
      ],
      "stack_out": [
        "\"origination_fee_bps\""
      ]
    },
    "1307": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"origination_fee_bps\"",
        "origination_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"origination_fee_bps\"",
        "origination_fee_bps#0 (copy)"
      ]
    },
    "1309": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1310": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\""
      ],
      "stack_out": [
        "\"oracle_pools_count\""
      ]
    },
    "1312": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0"
      ],
      "stack_out": [
        "\"oracle_pools_count\"",
        "0"
      ]
    },
    "1313": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1314": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\""
      ],
      "stack_out": [
        "\"accepted_collaterals_count\""
      ]
    },
    "1316": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ]
    },
    "1317": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1318": {
      "op": "bytec 8 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\""
      ],
      "stack_out": [
        "\"fee_pool\""
      ]
    },
    "1320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"fee_pool\"",
        "0"
      ]
    },
    "1321": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1322": {
      "op": "bytec 7 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\""
      ],
      "stack_out": [
        "\"circulating_lst\""
      ]
    },
    "1324": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"circulating_lst\"",
        "0"
      ]
    },
    "1325": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1326": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\""
      ],
      "stack_out": [
        "\"total_deposits\""
      ]
    },
    "1328": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_deposits\"",
        "0"
      ]
    },
    "1329": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1330": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\""
      ],
      "stack_out": [
        "\"active_loan_records\""
      ]
    },
    "1332": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"active_loan_records\"",
        "0"
      ]
    },
    "1333": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1334": {
      "op": "bytec 20 // \"protocol_interest_fee_bps\"",
      "defined_out": [
        "\"protocol_interest_fee_bps\""
      ],
      "stack_out": [
        "\"protocol_interest_fee_bps\""
      ]
    },
    "1336": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"protocol_interest_fee_bps\"",
        "protocol_interest_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"protocol_interest_fee_bps\"",
        "protocol_interest_fee_bps#0 (copy)"
      ]
    },
    "1338": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1339": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1340": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1341": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1342": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1343": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1344": {
      "op": "bz initApplication_after_if_else@7",
      "stack_out": []
    },
    "1347": {
      "op": "itxn_begin"
    },
    "1348": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1350": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1351": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1352": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1353": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "1354": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1355": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "1356": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1358": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1360": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "1362": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1363": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1365": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1367": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1369": {
      "op": "itxn_submit"
    },
    "1370": {
      "block": "initApplication_after_if_else@7",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1371": {
      "block": "initApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1372": {
      "op": "b initApplication_bool_merge@4"
    },
    "1375": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.generateLSTToken",
      "params": {
        "mbrTxn#0": "uint64"
      },
      "block": "generateLSTToken",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1378": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1380": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1381": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1382": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1383": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1384": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1385": {
      "op": "assert",
      "stack_out": []
    },
    "1386": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1388": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1390": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1391": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1392": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1393": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1394": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1395": {
      "op": "bz generateLSTToken_bool_false@3",
      "stack_out": []
    },
    "1398": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1400": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1402": {
      "op": "pushint 102000 // 102000",
      "defined_out": [
        "102000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "102000"
      ]
    },
    "1406": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1407": {
      "op": "bz generateLSTToken_bool_false@3",
      "stack_out": []
    },
    "1410": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1411": {
      "block": "generateLSTToken_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1412": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1413": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1414": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1415": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1416": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1417": {
      "op": "itxn_begin"
    },
    "1418": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1420": {
      "op": "dig 1",
      "defined_out": [
        "baseToken#0",
        "baseToken#0 (copy)",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "baseToken#0 (copy)"
      ]
    },
    "1422": {
      "op": "asset_params_get AssetTotal",
      "defined_out": [
        "baseToken#0",
        "check%0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "1424": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0"
      ]
    },
    "1425": {
      "op": "dig 2",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "baseToken#0 (copy)"
      ]
    },
    "1427": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "baseToken#0",
        "check%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "1429": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1430": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1432": {
      "op": "uncover 4",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "baseToken#0"
      ]
    },
    "1434": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "1436": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "value%2#0"
      ]
    },
    "1437": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "value%2#0",
        "\"c\""
      ]
    },
    "1440": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "\"c\"",
        "value%2#0"
      ]
    },
    "1441": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "1442": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "0"
      ]
    },
    "1443": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1444": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1445": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "1446": {
      "op": "pushbytes \"c\"",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%3#0",
        "\"c\""
      ]
    },
    "1449": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "\"c\"",
        "maybe_value%3#0"
      ]
    },
    "1450": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "1451": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "1453": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1455": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1457": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "0"
      ]
    },
    "1458": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1460": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0"
      ]
    },
    "1462": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1464": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "1466": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "1468": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1470": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1472": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1474": {
      "op": "itxn_submit"
    },
    "1475": {
      "op": "itxn ConfigAsset",
      "defined_out": [
        "result.ConfigAsset#0"
      ],
      "stack_out": [
        "result.ConfigAsset#0"
      ]
    },
    "1477": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1478": {
      "op": "bytec 11 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"lst_token_id\""
      ]
    },
    "1480": {
      "op": "swap",
      "stack_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1481": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1482": {
      "retsub": true,
      "op": "retsub"
    },
    "1483": {
      "block": "generateLSTToken_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1484": {
      "op": "b generateLSTToken_bool_merge@4"
    },
    "1487": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.optInToLST",
      "params": {
        "lstAssetId#0": "uint64",
        "mbrTxn#0": "uint64"
      },
      "block": "optInToLST",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1490": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1492": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1493": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1494": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1495": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1496": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1497": {
      "op": "assert",
      "stack_out": []
    },
    "1498": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1500": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1502": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1503": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1504": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1505": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1506": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1507": {
      "op": "bz optInToLST_bool_false@3",
      "stack_out": []
    },
    "1510": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1512": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1514": {
      "op": "pushint 2000 // 2000",
      "defined_out": [
        "2000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "2000"
      ]
    },
    "1517": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1518": {
      "op": "bz optInToLST_bool_false@3",
      "stack_out": []
    },
    "1521": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1522": {
      "block": "optInToLST_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1523": {
      "op": "frame_dig -2",
      "defined_out": [
        "lstAssetId#0 (copy)"
      ],
      "stack_out": [
        "lstAssetId#0 (copy)"
      ]
    },
    "1525": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1526": {
      "op": "bytec 11 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"lst_token_id\""
      ]
    },
    "1528": {
      "op": "swap",
      "stack_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1529": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1530": {
      "op": "itxn_begin"
    },
    "1531": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1533": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1534": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1536": {
      "op": "frame_dig -2",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "lstAssetId#0 (copy)"
      ]
    },
    "1538": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1540": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "1542": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1543": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1545": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1547": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1549": {
      "op": "itxn_submit"
    },
    "1550": {
      "retsub": true,
      "op": "retsub"
    },
    "1551": {
      "block": "optInToLST_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1552": {
      "op": "b optInToLST_bool_merge@4"
    },
    "1555": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.configureLSTToken",
      "params": {
        "axferTxn#0": "uint64",
        "circulating_lst#0": "uint64"
      },
      "block": "configureLSTToken",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1558": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1560": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1561": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1562": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1563": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1564": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1565": {
      "op": "assert",
      "stack_out": []
    },
    "1566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1567": {
      "op": "bytec 11 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"lst_token_id\""
      ]
    },
    "1569": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1570": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1571": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1572": {
      "op": "frame_dig -2",
      "defined_out": [
        "axferTxn#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "axferTxn#0 (copy)"
      ]
    },
    "1574": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1576": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1577": {
      "error": "LST token not set",
      "op": "assert // LST token not set",
      "stack_out": []
    },
    "1578": {
      "op": "frame_dig -2",
      "stack_out": [
        "axferTxn#0 (copy)"
      ]
    },
    "1580": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1582": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1583": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%5#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1584": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1585": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0"
      ]
    },
    "1586": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1587": {
      "op": "bz configureLSTToken_bool_false@3",
      "stack_out": []
    },
    "1590": {
      "op": "frame_dig -2",
      "stack_out": [
        "axferTxn#0 (copy)"
      ]
    },
    "1592": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1594": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1596": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1597": {
      "op": "bz configureLSTToken_bool_false@3",
      "stack_out": []
    },
    "1600": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1601": {
      "block": "configureLSTToken_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1602": {
      "op": "bytec 7 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\""
      ],
      "stack_out": [
        "\"circulating_lst\""
      ]
    },
    "1604": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"circulating_lst\"",
        "circulating_lst#0 (copy)"
      ],
      "stack_out": [
        "\"circulating_lst\"",
        "circulating_lst#0 (copy)"
      ]
    },
    "1606": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1607": {
      "retsub": true,
      "op": "retsub"
    },
    "1608": {
      "block": "configureLSTToken_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1609": {
      "op": "b configureLSTToken_bool_merge@4"
    },
    "1612": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCirculatingLST",
      "params": {},
      "block": "getCirculatingLST",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1613": {
      "op": "bytec 7 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"circulating_lst\""
      ]
    },
    "1615": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1616": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1617": {
      "retsub": true,
      "op": "retsub"
    },
    "1618": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getTotalDeposits",
      "params": {},
      "block": "getTotalDeposits",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1619": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_deposits\""
      ]
    },
    "1621": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1622": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1623": {
      "retsub": true,
      "op": "retsub"
    },
    "1624": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePoolsCount",
      "params": {},
      "block": "getOraclePoolsCount",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1625": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1627": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1628": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1629": {
      "retsub": true,
      "op": "retsub"
    },
    "1630": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getAcceptedCollateralsCount",
      "params": {},
      "block": "getAcceptedCollateralsCount",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1631": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1633": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1634": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1635": {
      "retsub": true,
      "op": "retsub"
    },
    "1636": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.addOraclePool",
      "params": {
        "poolAddress#0": "bytes",
        "contractAppId#0": "bytes"
      },
      "block": "addOraclePool",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1639": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1641": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1642": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1643": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1644": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1645": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1646": {
      "op": "assert",
      "stack_out": []
    },
    "1647": {
      "op": "frame_dig -1",
      "defined_out": [
        "contractAppId#0 (copy)"
      ],
      "stack_out": [
        "contractAppId#0 (copy)"
      ]
    },
    "1649": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1650": {
      "op": "frame_dig -2",
      "defined_out": [
        "poolAddress#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1652": {
      "op": "dig 1",
      "defined_out": [
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "1654": {
      "op": "bytec 21 // \"asset_1_cumulative_price\"",
      "defined_out": [
        "\"asset_1_cumulative_price\"",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)",
        "\"asset_1_cumulative_price\""
      ]
    },
    "1656": {
      "op": "app_local_get_ex",
      "defined_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_1_cumulative_price_exists#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_1_cumulative_price_exists#0"
      ]
    },
    "1657": {
      "op": "pop",
      "stack_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0"
      ]
    },
    "1658": {
      "op": "swap",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0"
      ]
    },
    "1659": {
      "op": "frame_dig -2",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1661": {
      "op": "dig 1",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "1663": {
      "op": "bytec 22 // \"asset_2_cumulative_price\"",
      "defined_out": [
        "\"asset_2_cumulative_price\"",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "token_1_cumulative_price#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)",
        "\"asset_2_cumulative_price\""
      ]
    },
    "1665": {
      "op": "app_local_get_ex",
      "defined_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "token_2_cumulative_price_exists#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "token_2_cumulative_price#0",
        "token_2_cumulative_price_exists#0"
      ]
    },
    "1666": {
      "op": "pop",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "token_2_cumulative_price#0"
      ]
    },
    "1667": {
      "op": "swap",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "tmp%2#0"
      ]
    },
    "1668": {
      "op": "frame_dig -2",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1670": {
      "op": "swap",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "poolAddress#0 (copy)",
        "tmp%2#0"
      ]
    },
    "1671": {
      "op": "bytec 23 // \"cumulative_price_update_timestamp\"",
      "defined_out": [
        "\"cumulative_price_update_timestamp\"",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "\"cumulative_price_update_timestamp\""
      ]
    },
    "1673": {
      "op": "app_local_get_ex",
      "defined_out": [
        "cumulativePriceLastTimestamp#0",
        "cumulativePriceLastTimestampExists#0",
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0",
        "cumulativePriceLastTimestampExists#0"
      ]
    },
    "1674": {
      "op": "pop",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0"
      ]
    },
    "1675": {
      "op": "uncover 2",
      "stack_out": [
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0",
        "token_1_cumulative_price#0"
      ]
    },
    "1677": {
      "op": "itob",
      "defined_out": [
        "cumulativePriceLastTimestamp#0",
        "token_2_cumulative_price#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0"
      ]
    },
    "1678": {
      "op": "uncover 2",
      "stack_out": [
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0",
        "token_2_cumulative_price#0"
      ]
    },
    "1680": {
      "op": "itob",
      "defined_out": [
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1681": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "cumulativePriceLastTimestamp#0"
      ]
    },
    "1683": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "1684": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1686": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "poolAddress#0 (copy)",
        "contractAppId#0 (copy)"
      ]
    },
    "1688": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1689": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1691": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1692": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "1694": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1695": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "1696": {
      "op": "concat",
      "defined_out": [
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0"
      ]
    },
    "1697": {
      "op": "intc_0 // 0",
      "stack_out": [
        "newOracle#0",
        "0"
      ]
    },
    "1698": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0",
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0",
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1700": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1701": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "newOracle#0",
        "maybe_value%1#0"
      ]
    },
    "1702": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "1703": {
      "op": "+",
      "defined_out": [
        "newOracle#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "newOracle#0",
        "to_encode%0#0"
      ]
    },
    "1704": {
      "op": "itob",
      "defined_out": [
        "newOracle#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "newOracle#0",
        "val_as_bytes%3#0"
      ]
    },
    "1705": {
      "op": "bytec 15 // \"oracle_pool\"",
      "defined_out": [
        "\"oracle_pool\"",
        "newOracle#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "newOracle#0",
        "val_as_bytes%3#0",
        "\"oracle_pool\""
      ]
    },
    "1707": {
      "op": "swap",
      "stack_out": [
        "newOracle#0",
        "\"oracle_pool\"",
        "val_as_bytes%3#0"
      ]
    },
    "1708": {
      "op": "concat",
      "defined_out": [
        "newOracle#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "newOracle#0",
        "tmp%5#0"
      ]
    },
    "1709": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "newOracle#0"
      ]
    },
    "1710": {
      "op": "box_put",
      "stack_out": []
    },
    "1711": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1712": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "stack_out": [
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1714": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1715": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1716": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "1717": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1718": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"oracle_pools_count\""
      ]
    },
    "1720": {
      "op": "swap",
      "stack_out": [
        "\"oracle_pools_count\"",
        "new_state_value%0#0"
      ]
    },
    "1721": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1722": {
      "retsub": true,
      "op": "retsub"
    },
    "1723": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "params": {
        "tokenId#0": "uint64",
        "oracleIndex#0": "uint64"
      },
      "block": "getOraclePrice",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1726": {
      "op": "frame_dig -1",
      "defined_out": [
        "oracleIndex#0 (copy)"
      ],
      "stack_out": [
        "oracleIndex#0 (copy)"
      ]
    },
    "1728": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1729": {
      "op": "bytec 15 // \"oracle_pool\"",
      "defined_out": [
        "\"oracle_pool\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"oracle_pool\""
      ]
    },
    "1731": {
      "op": "swap",
      "stack_out": [
        "\"oracle_pool\"",
        "val_as_bytes%0#0"
      ]
    },
    "1732": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1733": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "maybe_exists%0#0"
      ]
    },
    "1734": {
      "op": "swap",
      "stack_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ]
    },
    "1735": {
      "op": "dup",
      "stack_out": [
        "maybe_exists%0#0",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1736": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "maybe_exists%0#0"
      ]
    },
    "1738": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "oracle#0",
        "oracle#0"
      ]
    },
    "1739": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1740": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "address#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "address#0"
      ]
    },
    "1743": {
      "op": "dup",
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "address#0",
        "address#0 (copy)"
      ]
    },
    "1744": {
      "op": "uncover 2",
      "defined_out": [
        "address#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "oracle#0"
      ]
    },
    "1746": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "address#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "oracle#0",
        "32"
      ]
    },
    "1748": {
      "op": "extract_uint64",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1749": {
      "op": "dup",
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "contractAppIdObj#0",
        "contractAppIdObj#0"
      ]
    },
    "1750": {
      "op": "cover 2",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1752": {
      "op": "dup2",
      "defined_out": [
        "address#0",
        "address#0 (copy)",
        "contractAppIdObj#0",
        "contractAppIdObj#0 (copy)",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0 (copy)",
        "contractAppIdObj#0 (copy)"
      ]
    },
    "1753": {
      "op": "pushbytes \"asset_1_id\"",
      "defined_out": [
        "\"asset_1_id\"",
        "address#0",
        "address#0 (copy)",
        "contractAppIdObj#0",
        "contractAppIdObj#0 (copy)",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0 (copy)",
        "contractAppIdObj#0 (copy)",
        "\"asset_1_id\""
      ]
    },
    "1765": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "oracle#0",
        "token_1_exists#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "token_1_exists#0"
      ]
    },
    "1766": {
      "op": "pop",
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0"
      ]
    },
    "1767": {
      "op": "cover 2",
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1769": {
      "op": "bytec 23 // \"cumulative_price_update_timestamp\"",
      "defined_out": [
        "\"cumulative_price_update_timestamp\"",
        "address#0",
        "contractAppIdObj#0",
        "oracle#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "address#0",
        "contractAppIdObj#0",
        "\"cumulative_price_update_timestamp\""
      ]
    },
    "1771": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "new_cumulative_timestamp_exists#0",
        "oracle#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "new_cumulative_timestamp#0",
        "new_cumulative_timestamp_exists#0"
      ]
    },
    "1772": {
      "op": "pop",
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "new_cumulative_timestamp#0"
      ]
    },
    "1773": {
      "op": "cover 2",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "token_1_id#0"
      ]
    },
    "1775": {
      "op": "frame_dig -2",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tokenId#0 (copy)",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "tokenId#0 (copy)"
      ]
    },
    "1777": {
      "op": "==",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "tmp%1#0"
      ]
    },
    "1778": {
      "op": "bz getOraclePrice_else_body@2",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0"
      ]
    },
    "1781": {
      "op": "frame_dig 1",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "address#0"
      ]
    },
    "1783": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1784": {
      "op": "bytec 21 // \"asset_1_cumulative_price\"",
      "defined_out": [
        "\"asset_1_cumulative_price\"",
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0",
        "\"asset_1_cumulative_price\""
      ]
    },
    "1786": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "price#0",
        "priceExists#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "price#0",
        "priceExists#0"
      ]
    },
    "1787": {
      "op": "pop",
      "defined_out": [
        "address#0",
        "newCummulativePrice#3",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3"
      ]
    },
    "1788": {
      "block": "getOraclePrice_after_if_else@3",
      "stack_in": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0"
      ]
    },
    "1790": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1791": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "oracle#0 (copy)",
        "56"
      ]
    },
    "1793": {
      "op": "extract_uint64",
      "defined_out": [
        "oracle#0",
        "previousTimestamp#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "previousTimestamp#0"
      ]
    },
    "1794": {
      "op": "frame_dig 2",
      "defined_out": [
        "new_cumulative_timestamp#0",
        "oracle#0",
        "previousTimestamp#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "previousTimestamp#0",
        "new_cumulative_timestamp#0"
      ]
    },
    "1796": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "new_cumulative_timestamp#0",
        "previousTimestamp#0"
      ]
    },
    "1797": {
      "op": "-",
      "defined_out": [
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "deltaTime#0"
      ]
    },
    "1798": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "deltaTime#0",
        "oracle#0"
      ]
    },
    "1799": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "deltaTime#0",
        "oracle#0",
        "40"
      ]
    },
    "1801": {
      "op": "extract_uint64",
      "defined_out": [
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "deltaTime#0",
        "tmp%4#0"
      ]
    },
    "1802": {
      "op": "uncover 2",
      "defined_out": [
        "deltaTime#0",
        "newCummulativePrice#3",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaTime#0",
        "tmp%4#0",
        "newCummulativePrice#3"
      ]
    },
    "1804": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaTime#0",
        "newCummulativePrice#3",
        "tmp%4#0"
      ]
    },
    "1805": {
      "op": "-",
      "defined_out": [
        "deltaPrice#0",
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaTime#0",
        "deltaPrice#0"
      ]
    },
    "1806": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaPrice#0",
        "deltaTime#0"
      ]
    },
    "1807": {
      "op": "/",
      "defined_out": [
        "instantaneous_price#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "instantaneous_price#0"
      ]
    },
    "1808": {
      "op": "frame_bury 0"
    },
    "1810": {
      "retsub": true,
      "op": "retsub"
    },
    "1811": {
      "block": "getOraclePrice_else_body@2",
      "stack_in": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "address#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "address#0"
      ]
    },
    "1813": {
      "op": "swap",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1814": {
      "op": "bytec 22 // \"asset_2_cumulative_price\"",
      "defined_out": [
        "\"asset_2_cumulative_price\"",
        "address#0",
        "contractAppIdObj#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0",
        "\"asset_2_cumulative_price\""
      ]
    },
    "1816": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "priceExists\u2081#0",
        "price\u2081#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "price\u2081#0",
        "priceExists\u2081#0"
      ]
    },
    "1817": {
      "op": "pop",
      "defined_out": [
        "address#0",
        "newCummulativePrice#3"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3"
      ]
    },
    "1818": {
      "op": "b getOraclePrice_after_if_else@3"
    },
    "1821": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getPricesFromOracles",
      "params": {
        "tokenId#0": "uint64"
      },
      "block": "getPricesFromOracles",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1824": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1825": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1827": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "maybe_exists%0#0"
      ]
    },
    "1828": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "oracleIndex#0"
      ]
    },
    "1829": {
      "op": "intc_0 // 0"
    },
    "1830": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ]
    },
    "1831": {
      "block": "getPricesFromOracles_while_top@1",
      "stack_in": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1833": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "oracleIndex#0"
      ]
    },
    "1835": {
      "op": "<",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1836": {
      "op": "bz getPricesFromOracles_after_while@3",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ]
    },
    "1839": {
      "op": "frame_dig 2",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1841": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1842": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1843": {
      "op": "bytec 15 // \"oracle_pool\"",
      "defined_out": [
        "\"oracle_pool\"",
        "i#0",
        "oracleIndex#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"oracle_pool\""
      ]
    },
    "1845": {
      "op": "swap",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "\"oracle_pool\"",
        "val_as_bytes%0#0"
      ]
    },
    "1846": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1847": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "oracle#0",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "oracle#0",
        "maybe_exists%1#0"
      ]
    },
    "1848": {
      "op": "bury 1",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "maybe_exists%1#0"
      ]
    },
    "1850": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1851": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "tokenId#0 (copy)"
      ]
    },
    "1853": {
      "op": "dig 1",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "tokenId#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "1855": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "price#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "price#0"
      ]
    },
    "1858": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "price#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "price#0",
        "totalPrice#0"
      ]
    },
    "1860": {
      "op": "+",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "totalPrice#0"
      ]
    },
    "1861": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1863": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "oracleIndex#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1864": {
      "op": "+",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1865": {
      "op": "frame_bury 2",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ]
    },
    "1867": {
      "op": "b getPricesFromOracles_while_top@1"
    },
    "1870": {
      "block": "getPricesFromOracles_after_while@3",
      "stack_in": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "oracleIndex#0"
      ]
    },
    "1872": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "oracleIndex#0",
        "1"
      ]
    },
    "1873": {
      "op": "+",
      "defined_out": [
        "oracleIndex#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1874": {
      "op": "frame_dig 1",
      "defined_out": [
        "oracleIndex#0",
        "tmp%2#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%2#0",
        "totalPrice#0"
      ]
    },
    "1876": {
      "op": "swap",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "totalPrice#0",
        "tmp%2#0"
      ]
    },
    "1877": {
      "op": "/",
      "defined_out": [
        "oracleIndex#0",
        "tmp%3#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1878": {
      "op": "frame_bury 0"
    },
    "1880": {
      "retsub": true,
      "op": "retsub"
    },
    "1881": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.collateralExists",
      "params": {
        "collateralTokenId#0": "bytes"
      },
      "block": "collateralExists",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1884": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1885": {
      "block": "collateralExists_while_top@1",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "0"
      ]
    },
    "1886": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "i#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1888": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1889": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1890": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "1892": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0"
      ]
    },
    "1893": {
      "op": "bz collateralExists_after_while@5",
      "stack_out": [
        "i#0"
      ]
    },
    "1896": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1898": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1899": {
      "op": "bytec 12 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1901": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "1902": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%1#0"
      ]
    },
    "1903": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1904": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "i#0",
        "collateral#0"
      ]
    },
    "1905": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "collateral#0",
        "0"
      ]
    },
    "1906": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%3#0"
      ]
    },
    "1907": {
      "op": "frame_dig -1",
      "defined_out": [
        "collateralTokenId#0 (copy)",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1909": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1910": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%5#0"
      ]
    },
    "1911": {
      "op": "bz collateralExists_after_if_else@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1914": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "1"
      ]
    },
    "1915": {
      "op": "swap"
    },
    "1916": {
      "retsub": true,
      "op": "retsub"
    },
    "1917": {
      "block": "collateralExists_after_if_else@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1919": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1920": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1921": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1923": {
      "op": "b collateralExists_while_top@1"
    },
    "1926": {
      "block": "collateralExists_after_while@5",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "0"
      ]
    },
    "1927": {
      "op": "swap"
    },
    "1928": {
      "retsub": true,
      "op": "retsub"
    },
    "1929": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCollateral",
      "params": {
        "collateralTokenId#0": "bytes"
      },
      "block": "getCollateral",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1932": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0"
      ]
    },
    "1933": {
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0"
      ]
    },
    "1934": {
      "block": "getCollateral_while_top@1",
      "stack_in": [
        "collateral#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "0"
      ]
    },
    "1935": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1937": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1938": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1939": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "1941": {
      "op": "dup"
    },
    "1942": {
      "op": "uncover 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1944": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1945": {
      "error": "Collateral not found",
      "op": "assert // Collateral not found",
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0"
      ]
    },
    "1946": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1947": {
      "op": "bytec 12 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1949": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "i#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "1950": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1951": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1952": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "1953": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1954": {
      "op": "cover 2",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "1956": {
      "op": "frame_bury 0",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1958": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1959": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "0"
      ]
    },
    "1960": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1961": {
      "op": "frame_dig -1",
      "defined_out": [
        "collateral#0",
        "collateralTokenId#0 (copy)",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1963": {
      "op": "btoi",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1964": {
      "op": "==",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1965": {
      "op": "bz getCollateral_after_if_else@4",
      "stack_out": [
        "collateral#0",
        "i#0"
      ]
    },
    "1968": {
      "retsub": true,
      "op": "retsub",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1969": {
      "block": "getCollateral_after_if_else@4",
      "stack_in": [
        "collateral#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0"
      ]
    },
    "1971": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1972": {
      "op": "+",
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0"
      ]
    },
    "1973": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0"
      ]
    },
    "1975": {
      "op": "b getCollateral_while_top@1"
    },
    "1978": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "params": {
        "collateralTokenId#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "updateCollateralTotal",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1981": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0"
      ]
    },
    "1982": {
      "op": "dupn 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1984": {
      "block": "updateCollateralTotal_while_top@1",
      "stack_in": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "0"
      ]
    },
    "1985": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1987": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1988": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1989": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "1991": {
      "op": "dup"
    },
    "1992": {
      "op": "uncover 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1994": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1995": {
      "error": "Collateral not found",
      "op": "assert // Collateral not found",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1996": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1997": {
      "op": "bytec 12 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1999": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "2000": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2001": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2002": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2004": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "2005": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "2006": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "2007": {
      "op": "cover 2",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "2009": {
      "op": "frame_bury 0",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "2011": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0"
      ]
    },
    "2012": {
      "op": "dup",
      "defined_out": [
        "collateral#0",
        "collateral#0 (copy)",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "2013": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "tmp%2#0"
      ]
    },
    "2016": {
      "op": "frame_bury 2",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0"
      ]
    },
    "2018": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "0"
      ]
    },
    "2019": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2020": {
      "op": "frame_dig -2",
      "defined_out": [
        "collateral#0",
        "collateralTokenId#0 (copy)",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2022": {
      "op": "btoi",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2023": {
      "op": "==",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2024": {
      "op": "bz updateCollateralTotal_after_if_else@4",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2027": {
      "op": "frame_dig 0",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0"
      ]
    },
    "2029": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "2030": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "collateral#0",
        "collateral#0 (copy)",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "collateral#0 (copy)",
        "16"
      ]
    },
    "2032": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "tmp%7#0"
      ]
    },
    "2033": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "tmp%7#0",
        "amount#0 (copy)"
      ]
    },
    "2035": {
      "op": "+",
      "defined_out": [
        "collateral#0",
        "i#0",
        "newTotal#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "newTotal#0"
      ]
    },
    "2036": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "newTotal#0",
        "collateral#0"
      ]
    },
    "2037": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateral#0",
        "i#0",
        "newTotal#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "newTotal#0",
        "tmp%9#0"
      ]
    },
    "2040": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%9#0",
        "newTotal#0"
      ]
    },
    "2041": {
      "op": "itob",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%9#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%9#0",
        "val_as_bytes%1#0"
      ]
    },
    "2042": {
      "op": "frame_dig 2",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%9#0",
        "val_as_bytes%1#0",
        "tmp%2#0"
      ]
    },
    "2044": {
      "op": "uncover 2",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "2046": {
      "op": "concat",
      "defined_out": [
        "collateral#0",
        "encoded_tuple_buffer%2#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2047": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "2048": {
      "op": "concat",
      "defined_out": [
        "collateral#0",
        "encoded_tuple_buffer%3#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2049": {
      "op": "frame_dig 1",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0"
      ]
    },
    "2051": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2052": {
      "op": "box_put",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2053": {
      "retsub": true,
      "op": "retsub"
    },
    "2054": {
      "block": "updateCollateralTotal_after_if_else@4",
      "stack_in": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "2056": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2057": {
      "op": "+",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "2058": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2060": {
      "op": "b updateCollateralTotal_while_top@1"
    },
    "2063": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.addNewCollateralType",
      "params": {
        "collateralTokenId#0": "bytes",
        "baseTokenId#0": "bytes"
      },
      "block": "addNewCollateralType",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2066": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2067": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "2068": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2069": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2070": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2071": {
      "op": "txn Sender",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "2073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2074": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "2075": {
      "op": "app_global_get_ex",
      "defined_out": [
        "baseToken#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2076": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "2077": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%1#0"
      ]
    },
    "2078": {
      "op": "assert",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2079": {
      "op": "frame_dig -2",
      "defined_out": [
        "baseToken#0",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2081": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "2082": {
      "op": "dup",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2083": {
      "op": "dig 2",
      "defined_out": [
        "baseToken#0",
        "baseToken#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "baseToken#0 (copy)"
      ]
    },
    "2085": {
      "op": "!=",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2086": {
      "op": "assert",
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "2087": {
      "op": "frame_dig -1",
      "defined_out": [
        "baseToken#0",
        "baseTokenId#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "baseTokenId#0 (copy)"
      ]
    },
    "2089": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "2090": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "baseToken#0"
      ]
    },
    "2092": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "2093": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2094": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2096": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.collateralExists",
      "op": "callsub collateralExists",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "2099": {
      "op": "!",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "2100": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2101": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2103": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "collateralTokenId#0 (copy)",
        "baseTokenId#0 (copy)"
      ]
    },
    "2105": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2106": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "2116": {
      "op": "concat",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0"
      ]
    },
    "2117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "0"
      ]
    },
    "2118": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0",
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "2120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2121": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "maybe_value%2#0"
      ]
    },
    "2122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "2123": {
      "op": "+",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "to_encode%0#0"
      ]
    },
    "2124": {
      "op": "itob",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "val_as_bytes%0#0"
      ]
    },
    "2125": {
      "op": "bytec 12 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "2127": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "2128": {
      "op": "concat",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "tmp%8#0"
      ]
    },
    "2129": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%8#0",
        "newAcceptedCollateral#0"
      ]
    },
    "2130": {
      "op": "box_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "2132": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "2134": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2135": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%3#0"
      ]
    },
    "2136": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2137": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_state_value%0#0"
      ]
    },
    "2138": {
      "op": "bytec 6 // \"accepted_collaterals_count\"",
      "stack_out": [
        "tmp%2#0",
        "new_state_value%0#0",
        "\"accepted_collaterals_count\""
      ]
    },
    "2140": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "\"accepted_collaterals_count\"",
        "new_state_value%0#0"
      ]
    },
    "2141": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2142": {
      "op": "itxn_begin"
    },
    "2143": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2145": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2146": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2147": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2149": {
      "op": "uncover 2",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%2#0"
      ]
    },
    "2151": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2153": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2155": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "2157": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "2158": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2161": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2163": {
      "op": "itxn_submit"
    },
    "2164": {
      "retsub": true,
      "op": "retsub"
    },
    "2165": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.depositASA",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64"
      },
      "block": "depositASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2168": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2169": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "2170": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2171": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2172": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2173": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2175": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "2177": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2179": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "2180": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2183": {
      "op": "frame_dig -2",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2185": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "2187": {
      "op": "frame_dig 0",
      "stack_out": [
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "2189": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "2190": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2193": {
      "op": "frame_dig -2",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2195": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "2197": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "2199": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "2200": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2203": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2204": {
      "block": "depositASA_bool_merge@5",
      "stack_in": [
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2205": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0"
      ]
    },
    "2207": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "0"
      ]
    },
    "2208": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2209": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2210": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "maybe_value%1#0"
      ]
    },
    "2211": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2212": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "depositBalance.0#0",
        "depositBalance.1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "depositBalance.0#0",
        "depositBalance.1#0"
      ]
    },
    "2214": {
      "op": "pop",
      "stack_out": [
        "baseToken#0",
        "depositBalance.0#0"
      ]
    },
    "2215": {
      "op": "bnz depositASA_else_body@7",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2218": {
      "op": "frame_dig -1",
      "defined_out": [
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "2220": {
      "block": "depositASA_after_if_else@8",
      "stack_in": [
        "baseToken#0",
        "lstDue#2"
      ],
      "op": "itxn_begin"
    },
    "2221": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2223": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2224": {
      "op": "bytec 11 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"lst_token_id\""
      ]
    },
    "2226": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2227": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "2228": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2229": {
      "op": "dig 2",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lstDue#2",
        "lstDue#2 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lstDue#2 (copy)"
      ]
    },
    "2231": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2233": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2235": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "2237": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "4"
      ]
    },
    "2238": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "2240": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0"
      ]
    },
    "2241": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "2243": {
      "op": "itxn_submit"
    },
    "2244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0"
      ]
    },
    "2245": {
      "op": "bytec 7 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2247": {
      "op": "app_global_get_ex",
      "defined_out": [
        "lstDue#2",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2248": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "maybe_value%3#0"
      ]
    },
    "2249": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%0#0"
      ]
    },
    "2250": {
      "op": "bytec 7 // \"circulating_lst\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%0#0",
        "\"circulating_lst\""
      ]
    },
    "2252": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"circulating_lst\"",
        "new_state_value%0#0"
      ]
    },
    "2253": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2254": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "2255": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2257": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2258": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0"
      ]
    },
    "2259": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0",
        "amount#0 (copy)"
      ]
    },
    "2261": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0"
      ]
    },
    "2262": {
      "op": "bytec 5 // \"total_deposits\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0",
        "\"total_deposits\""
      ]
    },
    "2264": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"total_deposits\"",
        "new_state_value%1#0"
      ]
    },
    "2265": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2266": {
      "retsub": true,
      "op": "retsub"
    },
    "2267": {
      "block": "depositASA_else_body@7",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "2268": {
      "op": "bytec 7 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2270": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2271": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1"
      ]
    },
    "2272": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1",
        "10000"
      ]
    },
    "2273": {
      "op": "mulw",
      "defined_out": [
        "highBits1#0",
        "lowBits1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0"
      ]
    },
    "2274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "0"
      ]
    },
    "2275": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "highBits1#0",
        "lowBits1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2277": {
      "op": "app_global_get_ex",
      "defined_out": [
        "highBits1#0",
        "lowBits1#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2278": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "maybe_value%1#1"
      ]
    },
    "2279": {
      "op": "divw",
      "defined_out": [
        "lstRatio#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstRatio#0"
      ]
    },
    "2280": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "lstRatio#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstRatio#0",
        "amount#0 (copy)"
      ]
    },
    "2282": {
      "op": "mulw",
      "defined_out": [
        "highBits2#0",
        "lowBits2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits2#0",
        "lowBits2#0"
      ]
    },
    "2283": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "baseToken#0",
        "highBits2#0",
        "lowBits2#0",
        "10000"
      ]
    },
    "2284": {
      "op": "divw",
      "defined_out": [
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "2285": {
      "op": "b depositASA_after_if_else@8"
    },
    "2288": {
      "block": "depositASA_bool_false@4",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2289": {
      "op": "b depositASA_bool_merge@5"
    },
    "2292": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawDeposit",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64",
        "lstAppId#0": "uint64"
      },
      "block": "withdrawDeposit",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2295": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2296": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "2297": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2298": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2299": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2300": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2302": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "2304": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2306": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "2307": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2310": {
      "op": "frame_dig -3",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2312": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "2314": {
      "op": "frame_dig 0",
      "stack_out": [
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "2316": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "2317": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2320": {
      "op": "frame_dig -3",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2322": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "2324": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "2326": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "2327": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2330": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2331": {
      "block": "withdrawDeposit_bool_merge@5",
      "stack_in": [
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2332": {
      "op": "itxn_begin"
    },
    "2333": {
      "op": "bytec 13 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(getCirculatingLST()uint64)"
      ],
      "stack_out": [
        "baseToken#0",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "2335": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2337": {
      "op": "frame_dig -1",
      "defined_out": [
        "lstAppId#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "lstAppId#0 (copy)"
      ]
    },
    "2339": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2341": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "baseToken#0",
        "appl"
      ]
    },
    "2343": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2345": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "2346": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2348": {
      "op": "itxn_submit"
    },
    "2349": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "awst_tmp%0#0"
      ]
    },
    "2351": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2352": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "awst_tmp%0#0",
        "tmp%0#1"
      ]
    },
    "2355": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2356": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "2359": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2360": {
      "op": "==",
      "defined_out": [
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "tmp%2#0"
      ]
    },
    "2361": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "baseToken#0",
        "tmp%0#1"
      ]
    },
    "2362": {
      "op": "btoi",
      "defined_out": [
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "2363": {
      "op": "itxn_begin"
    },
    "2364": {
      "op": "bytec 14 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(getTotalDeposits()uint64)",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "2366": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "2368": {
      "op": "frame_dig -1",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "lstAppId#0 (copy)"
      ]
    },
    "2370": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "2372": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "appl"
      ]
    },
    "2374": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "2376": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "0"
      ]
    },
    "2377": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "2379": {
      "op": "itxn_submit"
    },
    "2380": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0"
      ]
    },
    "2382": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2383": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "tmp%4#1"
      ]
    },
    "2386": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "awst_tmp%1#0"
      ]
    },
    "2387": {
      "op": "extract 0 4",
      "defined_out": [
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "2390": {
      "op": "bytec_2 // 0x151f7c75",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "2391": {
      "op": "==",
      "defined_out": [
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%6#0"
      ]
    },
    "2392": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1"
      ]
    },
    "2393": {
      "op": "btoi",
      "defined_out": [
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "2394": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "amount#0 (copy)"
      ]
    },
    "2396": {
      "op": "mulw",
      "defined_out": [
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ]
    },
    "2397": {
      "op": "uncover 2",
      "stack_out": [
        "baseToken#0",
        "hi#0",
        "lo#0",
        "circulatingExternalLST#0"
      ]
    },
    "2399": {
      "op": "divw",
      "defined_out": [
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2400": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asaDue#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0"
      ]
    },
    "2402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "0"
      ]
    },
    "2403": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "asaDue#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2404": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2405": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "maybe_value%1#0"
      ]
    },
    "2406": {
      "op": "btoi",
      "defined_out": [
        "asaDue#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2407": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "asaDue#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "2409": {
      "op": "pop",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%9#0"
      ]
    },
    "2410": {
      "op": "dig 1",
      "defined_out": [
        "asaDue#0",
        "asaDue#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%9#0",
        "asaDue#0 (copy)"
      ]
    },
    "2412": {
      "op": ">=",
      "defined_out": [
        "asaDue#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%11#0"
      ]
    },
    "2413": {
      "op": "assert",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2414": {
      "op": "itxn_begin"
    },
    "2415": {
      "op": "txn Sender",
      "defined_out": [
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2418": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2420": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "2421": {
      "op": "btoi",
      "defined_out": [
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2422": {
      "op": "dig 2",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "asaDue#0 (copy)"
      ]
    },
    "2424": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2426": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2428": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2430": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "4"
      ]
    },
    "2431": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2433": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0"
      ]
    },
    "2434": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2436": {
      "op": "itxn_submit"
    },
    "2437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0"
      ]
    },
    "2438": {
      "op": "bytec 7 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0",
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2440": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2441": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%3#0"
      ]
    },
    "2442": {
      "op": "frame_dig -2",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%3#0",
        "amount#0 (copy)"
      ]
    },
    "2444": {
      "op": "-",
      "defined_out": [
        "asaDue#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "new_state_value%0#0"
      ]
    },
    "2445": {
      "op": "bytec 7 // \"circulating_lst\"",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "new_state_value%0#0",
        "\"circulating_lst\""
      ]
    },
    "2447": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "\"circulating_lst\"",
        "new_state_value%0#0"
      ]
    },
    "2448": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0"
      ]
    },
    "2450": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2452": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2453": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%4#0"
      ]
    },
    "2454": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0",
        "asaDue#0"
      ]
    },
    "2455": {
      "op": "-",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0"
      ]
    },
    "2456": {
      "op": "bytec 5 // \"total_deposits\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0",
        "\"total_deposits\""
      ]
    },
    "2458": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"total_deposits\"",
        "new_state_value%1#0"
      ]
    },
    "2459": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2460": {
      "retsub": true,
      "op": "retsub"
    },
    "2461": {
      "block": "withdrawDeposit_bool_false@4",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2462": {
      "op": "b withdrawDeposit_bool_merge@5"
    },
    "2465": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.borrow",
      "params": {
        "assetTransferTxn#0": "uint64",
        "requestedLoanAmount#0": "uint64",
        "lstApp#0": "uint64",
        "collateralTokenId#0": "bytes",
        "arc19MetadataStr#0": "bytes"
      },
      "block": "borrow",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "2468": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2469": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"loan_record\"",
        "tmp%0#0"
      ]
    },
    "2471": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2472": {
      "op": "box_len",
      "defined_out": [
        "hasLoan#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "hasLoan#0"
      ]
    },
    "2473": {
      "op": "bury 1",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2475": {
      "op": "frame_dig -5",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2477": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "hasLoan#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%2#0"
      ]
    },
    "2479": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "hasLoan#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2481": {
      "op": "==",
      "defined_out": [
        "hasLoan#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%4#0"
      ]
    },
    "2482": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2483": {
      "op": "frame_dig -2",
      "defined_out": [
        "collateralTokenId#0 (copy)",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2485": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.collateralExists",
      "op": "callsub collateralExists",
      "defined_out": [
        "hasLoan#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%5#0"
      ]
    },
    "2488": {
      "error": "unsupported collateral",
      "op": "assert // unsupported collateral",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2489": {
      "op": "frame_dig -5",
      "stack_out": [
        "hasLoan#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2491": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "collateralDeposit#0"
      ]
    },
    "2493": {
      "op": "dup",
      "stack_out": [
        "hasLoan#0",
        "collateralDeposit#0",
        "collateralDeposit#0"
      ]
    },
    "2494": {
      "op": "cover 2",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0"
      ]
    },
    "2496": {
      "op": "frame_dig -2",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2498": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCollateral",
      "op": "callsub getCollateral",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2501": {
      "op": "itxn_begin"
    },
    "2502": {
      "op": "bytec 13 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(getCirculatingLST()uint64)",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "2504": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2506": {
      "op": "frame_dig -3",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "lstApp#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "lstApp#0 (copy)"
      ]
    },
    "2508": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2510": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "acceptedCollateral#0",
        "appl",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "appl"
      ]
    },
    "2512": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2514": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "2515": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2517": {
      "op": "itxn_submit"
    },
    "2518": {
      "op": "itxn LastLog",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0"
      ]
    },
    "2520": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2521": {
      "op": "extract 4 0",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "tmp%6#0"
      ]
    },
    "2524": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "awst_tmp%0#0"
      ]
    },
    "2525": {
      "op": "extract 0 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2528": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "2529": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2530": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0"
      ]
    },
    "2531": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2532": {
      "op": "itxn_begin"
    },
    "2533": {
      "op": "bytec 14 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(getTotalDeposits()uint64)",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "2535": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2537": {
      "op": "frame_dig -3",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "lstApp#0 (copy)"
      ]
    },
    "2539": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2541": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "appl"
      ]
    },
    "2543": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2545": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "0"
      ]
    },
    "2546": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2548": {
      "op": "itxn_submit"
    },
    "2549": {
      "op": "itxn LastLog",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0"
      ]
    },
    "2551": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2552": {
      "op": "extract 4 0",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "2555": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "awst_tmp%1#0"
      ]
    },
    "2556": {
      "op": "extract 0 4",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2559": {
      "op": "bytec_2 // 0x151f7c75",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "2560": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2561": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0"
      ]
    },
    "2562": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "2563": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "collateralDeposit#0"
      ]
    },
    "2565": {
      "op": "mulw",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hC#0",
        "hasLoan#0",
        "lC#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "hC#0",
        "lC#0"
      ]
    },
    "2566": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "hC#0",
        "lC#0",
        "circulatingExternalLST#0"
      ]
    },
    "2568": {
      "op": "divw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "underlyingCollateral#0"
      ]
    },
    "2569": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "acceptedCollateral#0"
      ]
    },
    "2570": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "2572": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%15#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "tmp%15#0"
      ]
    },
    "2573": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "oraclePrice#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "oraclePrice#0"
      ]
    },
    "2576": {
      "op": "mulw",
      "defined_out": [
        "collateralDeposit#0",
        "hU#0",
        "hasLoan#0",
        "lU#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "hU#0",
        "lU#0"
      ]
    },
    "2577": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralDeposit#0",
        "hU#0",
        "hasLoan#0",
        "lU#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "2578": {
      "op": "divw",
      "defined_out": [
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0"
      ]
    },
    "2579": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "0"
      ]
    },
    "2580": {
      "op": "bytec 17 // \"ltv_bps\"",
      "defined_out": [
        "\"ltv_bps\"",
        "0",
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "0",
        "\"ltv_bps\""
      ]
    },
    "2582": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2583": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "maybe_value%1#0"
      ]
    },
    "2584": {
      "op": "*",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0"
      ]
    },
    "2585": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0",
        "10000"
      ]
    },
    "2586": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ]
    },
    "2587": {
      "op": "swap",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0"
      ]
    },
    "2588": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "0"
      ]
    },
    "2589": {
      "op": "bytec 19 // \"origination_fee_bps\"",
      "defined_out": [
        "\"origination_fee_bps\"",
        "0",
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "0",
        "\"origination_fee_bps\""
      ]
    },
    "2591": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2592": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0"
      ]
    },
    "2593": {
      "op": "frame_dig -4",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_value%2#0",
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2595": {
      "op": "*",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "tmp%17#0"
      ]
    },
    "2596": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "tmp%17#0",
        "10000"
      ]
    },
    "2597": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0"
      ]
    },
    "2598": {
      "op": "frame_dig -4",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2600": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "fee#0",
        "fee#0 (copy)",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "requestedLoanAmount#0 (copy)",
        "fee#0 (copy)"
      ]
    },
    "2602": {
      "op": "-",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "disbursement#0"
      ]
    },
    "2603": {
      "op": "dup",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "disbursement#0",
        "disbursement#0 (copy)"
      ]
    },
    "2604": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "disbursement#0"
      ]
    },
    "2606": {
      "op": "cover 4",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0"
      ]
    },
    "2608": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "0"
      ]
    },
    "2609": {
      "op": "bytec 8 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "2611": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2612": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "maybe_value%3#0"
      ]
    },
    "2613": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "new_state_value%0#0"
      ]
    },
    "2614": {
      "op": "bytec 8 // \"fee_pool\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "new_state_value%0#0",
        "\"fee_pool\""
      ]
    },
    "2616": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "\"fee_pool\"",
        "new_state_value%0#0"
      ]
    },
    "2617": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0"
      ]
    },
    "2618": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "0"
      ]
    },
    "2619": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2620": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2621": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "maybe_value%4#0"
      ]
    },
    "2622": {
      "op": "btoi",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "tmp%18#0"
      ]
    },
    "2623": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "collateralDeposit#0",
        "decExists#0",
        "decimals#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0",
        "decExists#0"
      ]
    },
    "2625": {
      "op": "pop",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0"
      ]
    },
    "2626": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "collateralDeposit#0",
        "decimals#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0",
        "10"
      ]
    },
    "2628": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "10",
        "decimals#0"
      ]
    },
    "2629": {
      "op": "exp",
      "defined_out": [
        "assetScale#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "assetScale#0"
      ]
    },
    "2630": {
      "op": "mulw",
      "defined_out": [
        "aH#0",
        "aL#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "aH#0",
        "aL#0"
      ]
    },
    "2631": {
      "op": "intc 5 // 4294967296",
      "defined_out": [
        "4294967296",
        "aH#0",
        "aL#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "aH#0",
        "aL#0",
        "4294967296"
      ]
    },
    "2633": {
      "op": "divw",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "interim#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "interim#0"
      ]
    },
    "2634": {
      "op": "intc 5 // 4294967296",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "interim#0",
        "4294967296"
      ]
    },
    "2636": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "scaledDown#0"
      ]
    },
    "2637": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "hasLoan#0"
      ]
    },
    "2639": {
      "op": "bz borrow_else_body@4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0"
      ]
    },
    "2642": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "scaledDown#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "tmp%19#0"
      ]
    },
    "2644": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2647": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#1",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#1"
      ]
    },
    "2650": {
      "op": "pop",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2651": {
      "op": "bytec_1 // \"loan_record\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "\"loan_record\""
      ]
    },
    "2652": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "\"loan_record\"",
        "tmp%20#0"
      ]
    },
    "2654": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "tmp%21#0"
      ]
    },
    "2655": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "tmp%21#0",
        "old#0 (copy)"
      ]
    },
    "2657": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2658": {
      "op": "dup",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)"
      ]
    },
    "2659": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "56"
      ]
    },
    "2661": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2662": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)"
      ]
    },
    "2663": {
      "op": "frame_dig -4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2665": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalRequested#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "totalRequested#0"
      ]
    },
    "2666": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "totalRequested#0",
        "maxBorrowUSD#0"
      ]
    },
    "2668": {
      "op": "<=",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%24#0"
      ]
    },
    "2669": {
      "error": "exceeds LTV limit with existing debt",
      "op": "assert // exceeds LTV limit with existing debt",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2670": {
      "op": "dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)"
      ]
    },
    "2672": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "old#0 (copy)",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)",
        "40"
      ]
    },
    "2674": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%26#0"
      ]
    },
    "2675": {
      "op": "frame_dig 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%26#0",
        "collateralDeposit#0"
      ]
    },
    "2677": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "collateralDeposit#0 (copy)",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%26#0",
        "collateralDeposit#0 (copy)",
        "collateralDeposit#0 (copy)"
      ]
    },
    "2678": {
      "op": "cover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "oldDebt#0",
        "tmp%26#0",
        "collateralDeposit#0 (copy)"
      ]
    },
    "2680": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "oldDebt#0",
        "totalCollateral#0"
      ]
    },
    "2681": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0"
      ]
    },
    "2682": {
      "op": "frame_dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0",
        "disbursement#0"
      ]
    },
    "2684": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "disbursement#0 (copy)",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0",
        "disbursement#0 (copy)",
        "disbursement#0 (copy)"
      ]
    },
    "2685": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "oldDebt#0",
        "disbursement#0 (copy)"
      ]
    },
    "2687": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0"
      ]
    },
    "2688": {
      "op": "dig 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "old#0 (copy)"
      ]
    },
    "2690": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "old#0 (copy)",
        "48"
      ]
    },
    "2692": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%29#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "tmp%29#0"
      ]
    },
    "2693": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%29#0",
        "disbursement#0"
      ]
    },
    "2695": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0"
      ]
    },
    "2696": {
      "op": "dig 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0 (copy)"
      ]
    },
    "2698": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0"
      ]
    },
    "2701": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "2703": {
      "op": "dig 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "old#0 (copy)"
      ]
    },
    "2705": {
      "error": "Index access is out of bounds",
      "op": "extract 72 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "2708": {
      "op": "dig 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "old#0 (copy)"
      ]
    },
    "2710": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "old#0 (copy)",
        "72"
      ]
    },
    "2712": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "2713": {
      "op": "dig 5",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "newDebt#0 (copy)"
      ]
    },
    "2715": {
      "op": "dig 5",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)"
      ]
    },
    "2717": {
      "op": "dig 5",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%30#0 (copy)"
      ]
    },
    "2719": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%33#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%30#0 (copy)",
        "tmp%31#0"
      ]
    },
    "2721": {
      "op": "dig 9",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0",
        "totalCollateral#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%33#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%30#0 (copy)",
        "tmp%31#0",
        "totalCollateral#0 (copy)"
      ]
    },
    "2723": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetadataStr#0 (copy)",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0",
        "totalCollateral#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%33#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%30#0 (copy)",
        "tmp%31#0",
        "totalCollateral#0 (copy)",
        "arc19MetadataStr#0 (copy)"
      ]
    },
    "2725": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%30#0 (copy)",
        "tmp%31#0",
        "totalCollateral#0 (copy)",
        "arc19MetadataStr#0 (copy)",
        "tmp%33#0"
      ]
    },
    "2727": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0"
      ]
    },
    "2730": {
      "op": "dig 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "old#0 (copy)"
      ]
    },
    "2732": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0"
      ]
    },
    "2735": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "totalCollateral#0"
      ]
    },
    "2737": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0"
      ]
    },
    "2738": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "newTotalDisb#0"
      ]
    },
    "2740": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2741": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "newDebt#0"
      ]
    },
    "2743": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2744": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "old#0"
      ]
    },
    "2746": {
      "error": "Index access is out of bounds",
      "op": "extract 64 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0"
      ]
    },
    "2749": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "to_encode%0#0"
      ]
    },
    "2751": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%30#0",
        "tmp%32#0",
        "tmp%34#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0"
      ]
    },
    "2752": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%30#0",
        "tmp%32#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "tmp%34#0"
      ]
    },
    "2754": {
      "op": "uncover 7",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "tmp%34#0",
        "tmp%30#0"
      ]
    },
    "2756": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%2#0",
        "scaledDown#0",
        "tmp%32#0",
        "tmp%36#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2757": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2759": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%3#0",
        "scaledDown#0",
        "tmp%32#0",
        "tmp%36#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2760": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "2762": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%4#0",
        "scaledDown#0",
        "tmp%32#0",
        "tmp%36#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%2#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2763": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "2765": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%5#0",
        "scaledDown#0",
        "tmp%32#0",
        "tmp%36#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2766": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%5#0",
        "tmp%36#0"
      ]
    },
    "2768": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%6#0",
        "scaledDown#0",
        "tmp%32#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%32#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2769": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%6#0",
        "tmp%32#0"
      ]
    },
    "2771": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%7#0",
        "scaledDown#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2772": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%3#0"
      ]
    },
    "2773": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2774": {
      "op": "bytec_1 // \"loan_record\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "\"loan_record\""
      ]
    },
    "2775": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "\"loan_record\"",
        "tmp%38#0"
      ]
    },
    "2777": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "tmp%39#0"
      ]
    },
    "2778": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%39#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2779": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0"
      ]
    },
    "2780": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "0"
      ]
    },
    "2781": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "2783": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2784": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%5#0"
      ]
    },
    "2785": {
      "op": "intc_1 // 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "2786": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "new_state_value%1#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "new_state_value%1#0"
      ]
    },
    "2787": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "new_state_value%1#0",
        "\"active_loan_records\""
      ]
    },
    "2789": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "\"active_loan_records\"",
        "new_state_value%1#0"
      ]
    },
    "2790": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0"
      ]
    },
    "2791": {
      "op": "frame_dig -2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2793": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralTokenId#0 (copy)",
        "collateralDeposit#0"
      ]
    },
    "2794": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2797": {
      "block": "borrow_after_if_else@5",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "op": "itxn_begin"
    },
    "2798": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2800": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2801": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2802": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2803": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "maybe_value%6#0"
      ]
    },
    "2804": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "2805": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "scaledDown#0"
      ]
    },
    "2807": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "2809": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2811": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2813": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "4"
      ]
    },
    "2814": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0"
      ]
    },
    "2817": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2819": {
      "op": "itxn_submit"
    },
    "2820": {
      "retsub": true,
      "op": "retsub"
    },
    "2821": {
      "block": "borrow_else_body@4",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2823": {
      "op": ">=",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%40#0"
      ]
    },
    "2824": {
      "error": "exceeds LTV limit",
      "op": "assert // exceeds LTV limit",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2825": {
      "op": "txn Sender",
      "defined_out": [
        "borrowerAddress#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0"
      ]
    },
    "2827": {
      "op": "itxn_begin"
    },
    "2828": {
      "op": "pushbytes \"r\"",
      "defined_out": [
        "\"r\"",
        "borrowerAddress#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "\"r\""
      ]
    },
    "2831": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"r\"",
        "borrowerAddress#0",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "\"r\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2833": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1"
      ]
    },
    "2834": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ]
    },
    "2835": {
      "op": "pushbytes \"b\"",
      "defined_out": [
        "\"b\"",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)",
        "\"b\""
      ]
    },
    "2838": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ]
    },
    "2839": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "0"
      ]
    },
    "2840": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2841": {
      "op": "app_global_get_ex",
      "defined_out": [
        "borrowerAddress#0",
        "maybe_exists%0#1",
        "maybe_value%0#1",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "maybe_value%0#1",
        "maybe_exists%0#1"
      ]
    },
    "2842": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "maybe_value%0#1"
      ]
    },
    "2843": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2844": {
      "op": "dig 2",
      "defined_out": [
        "borrowerAddress#0",
        "borrowerAddress#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2846": {
      "op": "bytec 16 // \":\"",
      "defined_out": [
        "\":\"",
        "borrowerAddress#0",
        "borrowerAddress#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "borrowerAddress#0 (copy)",
        "\":\""
      ]
    },
    "2848": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%2#1"
      ]
    },
    "2849": {
      "op": "frame_dig -2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%2#1",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2851": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%3#1"
      ]
    },
    "2852": {
      "op": "bytec 16 // \":\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%3#1",
        "\":\""
      ]
    },
    "2854": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#1"
      ]
    },
    "2855": {
      "op": "frame_dig 2",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#1",
        "scaledDown#0"
      ]
    },
    "2857": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%4#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#1",
        "val_as_bytes%0#0"
      ]
    },
    "2858": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%4#1"
      ]
    },
    "2859": {
      "op": "dig 1",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%4#1",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%4#1",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2861": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%5#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%5#1"
      ]
    },
    "2862": {
      "op": "bytec 16 // \":\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%5#1",
        "\":\""
      ]
    },
    "2864": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#0"
      ]
    },
    "2865": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2867": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#0",
        "val_as_bytes%1#0"
      ]
    },
    "2868": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2869": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2871": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2872": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "2873": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2874": {
      "op": "app_global_get_ex",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2875": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#1"
      ]
    },
    "2876": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#1",
        "tmp%0#1"
      ]
    },
    "2878": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#1",
        "maybe_value%1#1"
      ]
    },
    "2879": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2880": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2882": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2883": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "0"
      ]
    },
    "2884": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2886": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2888": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2890": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetadataStr#0 (copy)",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "arc19MetadataStr#0 (copy)"
      ]
    },
    "2892": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2894": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2896": {
      "op": "itxn_field Sender",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2898": {
      "op": "frame_dig 1",
      "defined_out": [
        "borrowerAddress#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0"
      ]
    },
    "2900": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "disbursement#0",
        "disbursement#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0",
        "disbursement#0 (copy)"
      ]
    },
    "2901": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0"
      ]
    },
    "2903": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0",
        "0"
      ]
    },
    "2904": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0"
      ]
    },
    "2906": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2907": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "disbursement#0"
      ]
    },
    "2909": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2910": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2912": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2914": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2916": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "borrowerAddress#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "3"
      ]
    },
    "2918": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2920": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "0"
      ]
    },
    "2921": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2923": {
      "op": "itxn_submit"
    },
    "2924": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2926": {
      "op": "frame_dig 0",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "asset.CreatedAssetID#0",
        "collateralDeposit#0"
      ]
    },
    "2928": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0"
      ]
    },
    "2929": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "disbursement#0"
      ]
    },
    "2931": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "2932": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "2933": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2934": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%2#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "2935": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1"
      ]
    },
    "2936": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "asset.CreatedAssetID#0"
      ]
    },
    "2938": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0"
      ]
    },
    "2939": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "to_encode%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "to_encode%1#0"
      ]
    },
    "2941": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "2942": {
      "op": "dig 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2944": {
      "op": "frame_dig -2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2946": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2947": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "2949": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2950": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "2952": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%4#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2953": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2955": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2956": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%2#1"
      ]
    },
    "2958": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%6#0",
        "scaledDown#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2959": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%5#0"
      ]
    },
    "2961": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%7#0",
        "scaledDown#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2962": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%6#0"
      ]
    },
    "2963": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "loanRecord#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "loanRecord#0"
      ]
    },
    "2964": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "loanRecord#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "2965": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "loanRecord#0",
        "\"loan_record\"",
        "borrowerAddress#0"
      ]
    },
    "2967": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "loanRecord#0",
        "scaledDown#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "loanRecord#0",
        "tmp%8#1"
      ]
    },
    "2968": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%8#1",
        "loanRecord#0"
      ]
    },
    "2969": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2970": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0"
      ]
    },
    "2971": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "2973": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2974": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%3#0"
      ]
    },
    "2975": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%3#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2976": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "new_state_value%0#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "new_state_value%0#0"
      ]
    },
    "2977": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "2979": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "2980": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2981": {
      "op": "b borrow_after_if_else@5"
    },
    "2984": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "params": {
        "scaledDownDisbursement#0": "uint64",
        "disbursement#0": "uint64",
        "collateralTokenId#0": "bytes",
        "borrowerAddress#0": "bytes",
        "collateralAmount#0": "uint64",
        "arc19MetadataStr#0": "bytes",
        "assetId#0": "uint64"
      },
      "block": "updateLoanRecord",
      "stack_in": [],
      "op": "proto 7 0"
    },
    "2987": {
      "op": "itxn_begin"
    },
    "2988": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2990": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2991": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "assetId#0 (copy)"
      ]
    },
    "2993": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2995": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc19MetadataStr#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "arc19MetadataStr#0 (copy)"
      ]
    },
    "2997": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2999": {
      "op": "itxn_field Sender",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "3001": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "3003": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "3005": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3007": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3008": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3010": {
      "op": "itxn_submit"
    },
    "3011": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "asset.CreatedAssetID#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0"
      ]
    },
    "3013": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralAmount#0 (copy)"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3015": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ]
    },
    "3016": {
      "op": "frame_dig -6",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "disbursement#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "disbursement#0 (copy)"
      ]
    },
    "3018": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3019": {
      "op": "frame_dig -7",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "scaledDownDisbursement#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "scaledDownDisbursement#0 (copy)"
      ]
    },
    "3021": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3022": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "3023": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3024": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3025": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0"
      ]
    },
    "3026": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "3028": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "3029": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "maybe_value%0#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "to_encode%0#0"
      ]
    },
    "3031": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "3032": {
      "op": "frame_dig -4",
      "defined_out": [
        "borrowerAddress#0 (copy)",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "3034": {
      "op": "frame_dig -5",
      "defined_out": [
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)"
      ]
    },
    "3036": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3037": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "3039": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3040": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "3042": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3043": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "3045": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3046": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%0#0"
      ]
    },
    "3048": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3049": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%3#0"
      ]
    },
    "3051": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3052": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%4#0"
      ]
    },
    "3053": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0"
      ]
    },
    "3054": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "3055": {
      "op": "frame_dig -4",
      "stack_out": [
        "loanRecord#0",
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "3057": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "tmp%0#0"
      ]
    },
    "3058": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "loanRecord#0"
      ]
    },
    "3059": {
      "op": "box_put",
      "stack_out": []
    },
    "3060": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3061": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"active_loan_records\""
      ]
    },
    "3063": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3064": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3065": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "3066": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "3067": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3069": {
      "op": "swap",
      "stack_out": [
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3070": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3071": {
      "retsub": true,
      "op": "retsub"
    },
    "3072": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.claimLoanRecordASA",
      "params": {
        "debtor#0": "bytes",
        "assetId#0": "uint64"
      },
      "block": "claimLoanRecordASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3075": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3076": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3078": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3079": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3080": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3081": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3083": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3084": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3086": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "assetId#0 (copy)"
      ]
    },
    "3088": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "assetExists#0"
      ]
    },
    "3090": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "assetExists#0"
      ]
    },
    "3092": {
      "error": "Loan record ASA does not exist",
      "op": "assert // Loan record ASA does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3093": {
      "op": "box_get",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3094": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "3096": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": []
    },
    "3097": {
      "op": "itxn_begin"
    },
    "3098": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3099": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "3101": {
      "op": "frame_dig -1",
      "stack_out": [
        "assetId#0 (copy)"
      ]
    },
    "3103": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "3105": {
      "op": "frame_dig -2",
      "stack_out": [
        "debtor#0 (copy)"
      ]
    },
    "3107": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "3109": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "3110": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3112": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3113": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3115": {
      "op": "itxn_submit"
    },
    "3116": {
      "op": "itxn_begin"
    },
    "3117": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3119": {
      "op": "frame_dig -2",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3121": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3123": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "3124": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3126": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "assetId#0 (copy)"
      ]
    },
    "3128": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3130": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "3132": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "3133": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3136": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3138": {
      "op": "itxn_submit"
    },
    "3139": {
      "retsub": true,
      "op": "retsub"
    },
    "3140": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "params": {
        "record#0": "bytes"
      },
      "block": "accrueInterest",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "3143": {
      "op": "global LatestTimestamp"
    },
    "3145": {
      "op": "dup"
    },
    "3146": {
      "op": "frame_dig -1"
    },
    "3148": {
      "op": "pushint 80 // 80",
      "defined_out": [
        "80",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "now#0",
        "record#0 (copy)",
        "80"
      ]
    },
    "3150": {
      "op": "extract_uint64",
      "defined_out": [
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "now#0",
        "last#0"
      ]
    },
    "3151": {
      "op": "dup",
      "stack_out": [
        "now#0",
        "now#0",
        "last#0",
        "last#0"
      ]
    },
    "3152": {
      "op": "cover 2",
      "defined_out": [
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "last#0"
      ]
    },
    "3154": {
      "op": "<=",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%1#0"
      ]
    },
    "3155": {
      "op": "bz accrueInterest_after_if_else@2",
      "stack_out": [
        "now#0",
        "last#0"
      ]
    },
    "3158": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "record#0 (copy)"
      ]
    },
    "3160": {
      "op": "dup",
      "stack_out": [
        "now#0",
        "last#0",
        "record#0 (copy)",
        "record#0 (copy)"
      ]
    },
    "3161": {
      "op": "uncover 3"
    },
    "3163": {
      "op": "uncover 3"
    },
    "3165": {
      "retsub": true,
      "op": "retsub"
    },
    "3166": {
      "block": "accrueInterest_after_if_else@2",
      "stack_in": [
        "now#0",
        "last#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0"
      ]
    },
    "3168": {
      "op": "dup",
      "defined_out": [
        "now#0",
        "now#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "now#0 (copy)"
      ]
    },
    "3169": {
      "op": "frame_dig 1",
      "defined_out": [
        "last#0",
        "now#0",
        "now#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "now#0 (copy)",
        "last#0"
      ]
    },
    "3171": {
      "op": "-",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0"
      ]
    },
    "3172": {
      "op": "frame_dig -1",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "record#0 (copy)"
      ]
    },
    "3174": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "deltaT#0",
        "last#0",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "3176": {
      "op": "extract_uint64",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0"
      ]
    },
    "3177": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "0"
      ]
    },
    "3178": {
      "op": "bytec 18 // \"interest_bps\"",
      "defined_out": [
        "\"interest_bps\"",
        "0",
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "0",
        "\"interest_bps\""
      ]
    },
    "3180": {
      "op": "app_global_get_ex",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "maybe_exists%0#0",
        "now#0",
        "principal#0",
        "rateBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0",
        "maybe_exists%0#0"
      ]
    },
    "3181": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0"
      ]
    },
    "3182": {
      "op": "dig 1",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0",
        "principal#0 (copy)",
        "rateBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0",
        "principal#0 (copy)"
      ]
    },
    "3184": {
      "op": "mulw",
      "defined_out": [
        "deltaT#0",
        "hi1#0",
        "last#0",
        "lo1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "hi1#0",
        "lo1#0"
      ]
    },
    "3185": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "deltaT#0",
        "hi1#0",
        "last#0",
        "lo1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "hi1#0",
        "lo1#0",
        "10000"
      ]
    },
    "3186": {
      "op": "divw",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0",
        "rateScaled#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateScaled#0"
      ]
    },
    "3187": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "rateScaled#0",
        "deltaT#0"
      ]
    },
    "3189": {
      "op": "mulw",
      "defined_out": [
        "hi2#0",
        "last#0",
        "lo2#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "hi2#0",
        "lo2#0"
      ]
    },
    "3190": {
      "op": "pushint 31536000 // 31536000",
      "defined_out": [
        "31536000",
        "hi2#0",
        "last#0",
        "lo2#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "hi2#0",
        "lo2#0",
        "31536000"
      ]
    },
    "3195": {
      "op": "divw",
      "defined_out": [
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0"
      ]
    },
    "3196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "0"
      ]
    },
    "3197": {
      "op": "bytec 20 // \"protocol_interest_fee_bps\"",
      "defined_out": [
        "\"protocol_interest_fee_bps\"",
        "0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "0",
        "\"protocol_interest_fee_bps\""
      ]
    },
    "3199": {
      "op": "app_global_get_ex",
      "defined_out": [
        "interest#0",
        "last#0",
        "maybe_exists%1#0",
        "now#0",
        "principal#0",
        "protoBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0",
        "maybe_exists%1#0"
      ]
    },
    "3200": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0"
      ]
    },
    "3201": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0",
        "10000"
      ]
    },
    "3202": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "10000",
        "protoBps#0"
      ]
    },
    "3203": {
      "op": "-",
      "defined_out": [
        "depositorBps#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorBps#0"
      ]
    },
    "3204": {
      "op": "dig 1",
      "defined_out": [
        "depositorBps#0",
        "interest#0",
        "interest#0 (copy)",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorBps#0",
        "interest#0 (copy)"
      ]
    },
    "3206": {
      "op": "mulw",
      "defined_out": [
        "hiDep#0",
        "interest#0",
        "last#0",
        "loDep#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "hiDep#0",
        "loDep#0"
      ]
    },
    "3207": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "hiDep#0",
        "loDep#0",
        "10000"
      ]
    },
    "3208": {
      "op": "divw",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0"
      ]
    },
    "3209": {
      "op": "dup2",
      "defined_out": [
        "depositorInterest#0",
        "depositorInterest#0 (copy)",
        "interest#0",
        "interest#0 (copy)",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "interest#0 (copy)",
        "depositorInterest#0 (copy)"
      ]
    },
    "3210": {
      "op": "-",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0"
      ]
    },
    "3211": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "0"
      ]
    },
    "3212": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "3214": {
      "op": "app_global_get_ex",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3215": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "maybe_value%2#0"
      ]
    },
    "3216": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%2#0",
        "depositorInterest#0"
      ]
    },
    "3218": {
      "op": "+",
      "defined_out": [
        "interest#0",
        "last#0",
        "new_state_value%0#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "new_state_value%0#0"
      ]
    },
    "3219": {
      "op": "bytec 5 // \"total_deposits\"",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "new_state_value%0#0",
        "\"total_deposits\""
      ]
    },
    "3221": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "\"total_deposits\"",
        "new_state_value%0#0"
      ]
    },
    "3222": {
      "op": "app_global_put",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0"
      ]
    },
    "3223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "0"
      ]
    },
    "3224": {
      "op": "bytec 8 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "3226": {
      "op": "app_global_get_ex",
      "defined_out": [
        "interest#0",
        "last#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3227": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%3#0"
      ]
    },
    "3228": {
      "op": "+",
      "defined_out": [
        "interest#0",
        "last#0",
        "new_state_value%1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "new_state_value%1#0"
      ]
    },
    "3229": {
      "op": "bytec 8 // \"fee_pool\"",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "new_state_value%1#0",
        "\"fee_pool\""
      ]
    },
    "3231": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "\"fee_pool\"",
        "new_state_value%1#0"
      ]
    },
    "3232": {
      "op": "app_global_put",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0"
      ]
    },
    "3233": {
      "op": "+",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0"
      ]
    },
    "3234": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "record#0 (copy)"
      ]
    },
    "3236": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0"
      ]
    },
    "3239": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "record#0 (copy)"
      ]
    },
    "3241": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "3244": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "record#0 (copy)"
      ]
    },
    "3246": {
      "error": "Index access is out of bounds",
      "op": "extract 40 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3249": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "record#0 (copy)"
      ]
    },
    "3251": {
      "error": "Index access is out of bounds",
      "op": "extract 48 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "3254": {
      "op": "uncover 4",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "newPrincipal#0"
      ]
    },
    "3256": {
      "op": "itob",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "3257": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "record#0 (copy)"
      ]
    },
    "3259": {
      "error": "Index access is out of bounds",
      "op": "extract 64 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0"
      ]
    },
    "3262": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "record#0 (copy)"
      ]
    },
    "3264": {
      "error": "Index access is out of bounds",
      "op": "extract 72 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3267": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "now#0"
      ]
    },
    "3269": {
      "op": "itob",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "3270": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "tmp%3#0"
      ]
    },
    "3272": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "3274": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "last#0",
        "now#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3275": {
      "op": "uncover 6",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0"
      ]
    },
    "3277": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "last#0",
        "now#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3278": {
      "op": "uncover 5",
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "tmp%6#0"
      ]
    },
    "3280": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "last#0",
        "now#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3281": {
      "op": "uncover 4",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "3283": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "last#0",
        "now#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3284": {
      "op": "uncover 3",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "tmp%7#0"
      ]
    },
    "3286": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "last#0",
        "now#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3287": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "tmp%8#0"
      ]
    },
    "3289": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "last#0",
        "now#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3290": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%1#0"
      ]
    },
    "3291": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3292": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%8#0",
        "record#0 (copy)"
      ]
    },
    "3294": {
      "op": "uncover 3"
    },
    "3296": {
      "op": "uncover 3"
    },
    "3298": {
      "retsub": true,
      "op": "retsub"
    },
    "3299": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "params": {
        "borrowerAddress#0": "bytes"
      },
      "block": "getLoanRecord",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3302": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3303": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "3305": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3306": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3307": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3308": {
      "retsub": true,
      "op": "retsub"
    },
    "3309": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "params": {
        "borrowerAddress#0": "bytes"
      },
      "block": "getLoanRecordASAId",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3312": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3313": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "3315": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3316": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3317": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3318": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "72"
      ]
    },
    "3320": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3321": {
      "retsub": true,
      "op": "retsub"
    },
    "3322": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.repayLoan",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64",
        "arc19MetaDataStr#0": "bytes"
      },
      "block": "repayLoan",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0"
      ]
    },
    "3326": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3328": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3329": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3330": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3331": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%0#0"
      ]
    },
    "3332": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3333": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "3335": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "3337": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3339": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "3340": {
      "op": "bz repayLoan_bool_false@4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3343": {
      "op": "frame_dig -3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "3345": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "3347": {
      "op": "frame_dig 2",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "3349": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "3350": {
      "op": "bz repayLoan_bool_false@4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3353": {
      "op": "frame_dig -3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "3355": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "3357": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "3359": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "3360": {
      "op": "bz repayLoan_bool_false@4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3363": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "3364": {
      "block": "repayLoan_bool_merge@5",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3365": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%7#0"
      ]
    },
    "3367": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3370": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#1"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#1"
      ]
    },
    "3373": {
      "op": "pop",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3374": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0"
      ]
    },
    "3375": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3377": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "3378": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"loan_record\"",
        "tmp%8#0"
      ]
    },
    "3380": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%9#0"
      ]
    },
    "3381": {
      "op": "dig 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%9#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3383": {
      "op": "box_put",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3384": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%10#0"
      ]
    },
    "3386": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0"
      ]
    },
    "3389": {
      "op": "swap",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "3390": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "56"
      ]
    },
    "3392": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ]
    },
    "3393": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)"
      ]
    },
    "3395": {
      "op": "dig 1",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "3397": {
      "op": "<=",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3398": {
      "op": "assert",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ]
    },
    "3399": {
      "op": "frame_dig -2",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)"
      ]
    },
    "3401": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3402": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "remainingDebt#0"
      ]
    },
    "3403": {
      "op": "frame_bury 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3405": {
      "op": "bnz repayLoan_else_body@9",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0"
      ]
    },
    "3408": {
      "op": "itxn_begin"
    },
    "3409": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3411": {
      "op": "itxn_field Sender",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0"
      ]
    },
    "3413": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3415": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "3"
      ]
    },
    "3417": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3419": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3420": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3422": {
      "op": "itxn_submit"
    },
    "3423": {
      "op": "bytec_1 // \"loan_record\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "\"loan_record\""
      ]
    },
    "3424": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "\"loan_record\"",
        "tmp%15#0"
      ]
    },
    "3426": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%16#0"
      ]
    },
    "3427": {
      "op": "box_del",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "{box_del}"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "{box_del}"
      ]
    },
    "3428": {
      "op": "pop",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3429": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3430": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3432": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3433": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "maybe_value%1#0"
      ]
    },
    "3434": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecord#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "3435": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "new_state_value%0#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "new_state_value%0#0"
      ]
    },
    "3436": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3438": {
      "op": "swap",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3439": {
      "op": "app_global_put",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3440": {
      "op": "itxn_begin"
    },
    "3441": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3443": {
      "op": "frame_dig 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3445": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3446": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "32"
      ]
    },
    "3448": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3449": {
      "op": "swap",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3450": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3452": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3453": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3455": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3457": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3459": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "4"
      ]
    },
    "3460": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3463": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3465": {
      "op": "itxn_submit"
    },
    "3466": {
      "retsub": true,
      "op": "retsub"
    },
    "3467": {
      "block": "repayLoan_else_body@9",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "3469": {
      "op": "dup",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3470": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "48"
      ]
    },
    "3472": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0"
      ]
    },
    "3473": {
      "op": "dig 1",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3475": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "3478": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "3480": {
      "op": "uncover 3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "loanRecord#0"
      ]
    },
    "3482": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3484": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "3485": {
      "op": "frame_dig 1",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "remainingDebt#0"
      ]
    },
    "3487": {
      "op": "cover 4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "3489": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "arc19MetaDataStr#0 (copy)"
      ]
    },
    "3491": {
      "op": "uncover 6",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "arc19MetaDataStr#0 (copy)",
        "loanRecordASAId#0"
      ]
    },
    "3493": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3496": {
      "retsub": true,
      "op": "retsub"
    },
    "3497": {
      "block": "repayLoan_bool_false@4",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "3498": {
      "op": "b repayLoan_bool_merge@5"
    },
    "3501": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawFees",
      "params": {},
      "block": "withdrawFees",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3503": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3504": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "3505": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3506": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3507": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3508": {
      "op": "assert",
      "stack_out": []
    },
    "3509": {
      "op": "itxn_begin"
    },
    "3510": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3511": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "0",
        "\"admin_account\""
      ]
    },
    "3512": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3513": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3514": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "3515": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3516": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3517": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "3518": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3519": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "3520": {
      "op": "bytec 8 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "3522": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3523": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "3524": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3526": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3528": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "3530": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "3531": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3534": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3536": {
      "op": "itxn_submit"
    },
    "3537": {
      "op": "bytec 8 // \"fee_pool\"",
      "stack_out": [
        "\"fee_pool\""
      ]
    },
    "3539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"fee_pool\"",
        "0"
      ]
    },
    "3540": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3541": {
      "retsub": true,
      "op": "retsub"
    },
    "3542": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueLoanInterest",
      "params": {
        "debtor#0": "bytes",
        "arc19MetaDataStr#0": "bytes"
      },
      "block": "accrueLoanInterest",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3545": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3546": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3548": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3549": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3550": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3551": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3553": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3554": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3555": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3556": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3557": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "accrueInterest%0#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "accrueInterest%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3560": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3562": {
      "op": "itxn_begin"
    },
    "3563": {
      "op": "dup",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3564": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "72"
      ]
    },
    "3566": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3567": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3569": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3571": {
      "op": "dup",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0 (copy)"
      ]
    },
    "3572": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3574": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "3"
      ]
    },
    "3576": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3578": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "0"
      ]
    },
    "3579": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3581": {
      "op": "itxn_submit"
    },
    "3582": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3584": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3586": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0"
      ]
    },
    "3587": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3589": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "currentLoanRecord#0 (copy)",
        "48"
      ]
    },
    "3591": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "3592": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3594": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "3597": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3599": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3601": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "3602": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%9#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "3604": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%9#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "debtor#0 (copy)"
      ]
    },
    "3606": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "debtor#0 (copy)",
        "tmp%9#0"
      ]
    },
    "3608": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "currentLoanRecord#0",
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "debtor#0 (copy)",
        "tmp%9#0",
        "arc19MetaDataStr#0 (copy)"
      ]
    },
    "3610": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0",
        "debtor#0 (copy)",
        "tmp%9#0",
        "arc19MetaDataStr#0 (copy)",
        "inner_txn_params%0%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3612": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3615": {
      "op": "box_put",
      "stack_out": []
    },
    "3616": {
      "retsub": true,
      "op": "retsub"
    },
    "3617": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.buyout",
      "params": {
        "buyer#0": "bytes",
        "debtor#0": "bytes",
        "axferTxn#0": "uint64"
      },
      "block": "buyout",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3620": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "3622": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "tmp%26#0",
        "\"loan_record\""
      ]
    },
    "3623": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3625": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0"
      ]
    },
    "3626": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3628": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3629": {
      "op": "bury 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3631": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3632": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3633": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3634": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3635": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3636": {
      "op": "cover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3638": {
      "op": "cover 3",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3640": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3641": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ]
    },
    "3642": {
      "op": "dig 1",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3644": {
      "op": "box_put",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3645": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3646": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3648": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0"
      ]
    },
    "3649": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3650": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3652": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3653": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3655": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3656": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "3657": {
      "op": "cover 3",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3659": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3661": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "32"
      ]
    },
    "3663": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "to_encode%0#0"
      ]
    },
    "3664": {
      "op": "itob",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3665": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "3666": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3668": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCollateral",
      "op": "callsub getCollateral",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3671": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)"
      ]
    },
    "3672": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "16"
      ]
    },
    "3674": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3675": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "3676": {
      "op": "cover 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3678": {
      "op": "dig 2",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3680": {
      "op": ">=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%8#0"
      ]
    },
    "3681": {
      "error": "Collateral amount exceeds current total",
      "op": "assert // Collateral amount exceeds current total",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3682": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "3684": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%10#0"
      ]
    },
    "3685": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "oraclePrice#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "3688": {
      "op": "mulw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0"
      ]
    },
    "3689": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "3690": {
      "op": "divw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "3691": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)"
      ]
    },
    "3692": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "debtAmount#0"
      ]
    },
    "3694": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3695": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0"
      ]
    },
    "3696": {
      "op": "bytec 10 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3698": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3699": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "3700": {
      "op": "dig 1",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "CR#0 (copy)"
      ]
    },
    "3702": {
      "op": "<",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "tmp%11#0"
      ]
    },
    "3703": {
      "error": "loan is not eligible for buyout",
      "op": "assert // loan is not eligible for buyout",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3704": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "10000"
      ]
    },
    "3705": {
      "op": "*",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0"
      ]
    },
    "3706": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0"
      ]
    },
    "3707": {
      "op": "bytec 10 // \"liq_threshold_bps\"",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3709": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3710": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "3711": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%13#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0"
      ]
    },
    "3712": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0",
        "10000"
      ]
    },
    "3713": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "premiumRate#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0"
      ]
    },
    "3714": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0",
        "10000"
      ]
    },
    "3715": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0"
      ]
    },
    "3716": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0",
        "1"
      ]
    },
    "3717": {
      "op": "+",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%15#0"
      ]
    },
    "3718": {
      "op": "*",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3719": {
      "op": "frame_dig -1",
      "defined_out": [
        "axferTxn#0 (copy)",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3721": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0"
      ]
    },
    "3723": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "0"
      ]
    },
    "3724": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3725": {
      "op": "app_global_get_ex",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3726": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "maybe_value%4#0"
      ]
    },
    "3727": {
      "op": "btoi",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3728": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%18#0"
      ]
    },
    "3729": {
      "op": "bz buyout_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3732": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3734": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0"
      ]
    },
    "3736": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3738": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%21#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0"
      ]
    },
    "3739": {
      "op": "bz buyout_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3742": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3744": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%22#0"
      ]
    },
    "3746": {
      "op": "frame_dig 7",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%22#0",
        "buyoutPrice#0"
      ]
    },
    "3748": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%23#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%23#0"
      ]
    },
    "3749": {
      "op": "bz buyout_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3752": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3753": {
      "block": "buyout_bool_merge@5",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3754": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0"
      ]
    },
    "3756": {
      "op": "frame_dig 2",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "currentLoanRecord#0"
      ]
    },
    "3758": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "currentLoanRecord#0",
        "72"
      ]
    },
    "3760": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "3761": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "3762": {
      "op": "frame_bury 0",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "3764": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "currentLoanRecord#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%27#0",
        "assetExists#0"
      ]
    },
    "3766": {
      "op": "bury 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "assetExists#0"
      ]
    },
    "3768": {
      "op": "bnz buyout_after_if_else@8",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3771": {
      "op": "itxn_begin"
    },
    "3772": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3774": {
      "op": "frame_dig 4",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtAmount#0"
      ]
    },
    "3776": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3778": {
      "op": "frame_dig -2",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3780": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3782": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ]
    },
    "3784": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3786": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3788": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "4"
      ]
    },
    "3789": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3791": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3792": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3794": {
      "op": "itxn_submit"
    },
    "3795": {
      "block": "buyout_after_if_else@8",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "itxn_begin"
    },
    "3796": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3798": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3800": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%26#0"
      ]
    },
    "3802": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3804": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "3"
      ]
    },
    "3806": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3808": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3809": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3811": {
      "op": "itxn_submit"
    },
    "3812": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%0#0"
      ]
    },
    "3814": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#0",
        "tmp%26#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "{box_del}"
      ]
    },
    "3815": {
      "op": "pop",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3817": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3819": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3820": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0"
      ]
    },
    "3821": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%5#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "3822": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0"
      ]
    },
    "3823": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3825": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3826": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3827": {
      "op": "itxn_begin"
    },
    "3828": {
      "op": "frame_dig 5",
      "defined_out": [
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0"
      ]
    },
    "3830": {
      "op": "dup",
      "defined_out": [
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "3831": {
      "op": "btoi",
      "defined_out": [
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "3832": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "3834": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "3835": {
      "op": "cover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3837": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "3839": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3841": {
      "op": "frame_dig -3",
      "defined_out": [
        "buyer#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "buyer#0 (copy)"
      ]
    },
    "3843": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3845": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "3846": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3848": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "3849": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3851": {
      "op": "itxn_submit"
    },
    "3852": {
      "op": "frame_dig 6",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "tmp%7#0"
      ]
    },
    "3854": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralAmount#0"
      ]
    },
    "3855": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "newTotal#0",
        "tmp%0#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "3856": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3859": {
      "retsub": true,
      "op": "retsub"
    },
    "3860": {
      "block": "buyout_bool_false@4",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3861": {
      "op": "b buyout_bool_merge@5"
    },
    "3864": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.liquidate",
      "params": {
        "debtor#0": "bytes",
        "axferTxn#0": "uint64"
      },
      "block": "liquidate",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3867": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loanRecordASAId#0"
      ]
    },
    "3869": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "\"loan_record\""
      ]
    },
    "3870": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3872": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0"
      ]
    },
    "3873": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3875": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3876": {
      "op": "bury 1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3878": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3879": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "3880": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "record#0"
      ]
    },
    "3881": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "3882": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "3884": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0"
      ]
    },
    "3885": {
      "op": "dup",
      "defined_out": [
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "3886": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "record#0 (copy)",
        "40"
      ]
    },
    "3888": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "collateralAmount#0"
      ]
    },
    "3889": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3890": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0"
      ]
    },
    "3892": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "3893": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "3895": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0"
      ]
    },
    "3896": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "3897": {
      "op": "cover 3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0"
      ]
    },
    "3899": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "record#0"
      ]
    },
    "3901": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3904": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "3905": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3907": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCollateral",
      "op": "callsub getCollateral",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3910": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0"
      ]
    },
    "3911": {
      "op": "cover 3",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3913": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "3915": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%5#0"
      ]
    },
    "3916": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "oraclePrice#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "3919": {
      "op": "mulw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "h#0",
        "l#0"
      ]
    },
    "3920": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "1"
      ]
    },
    "3921": {
      "op": "divw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "3922": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralUSD#0",
        "debtAmount#0"
      ]
    },
    "3923": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0"
      ]
    },
    "3924": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "0"
      ]
    },
    "3925": {
      "op": "bytec 10 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3927": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3928": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "3929": {
      "op": "<=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%6#0"
      ]
    },
    "3930": {
      "error": "loan is not liquidatable",
      "op": "assert // loan is not liquidatable",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "3931": {
      "op": "frame_dig -1",
      "defined_out": [
        "acceptedCollateral#0",
        "axferTxn#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3933": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3935": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3937": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%9#0"
      ]
    },
    "3938": {
      "op": "bz liquidate_bool_false@4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "3941": {
      "op": "frame_dig -1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3943": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0"
      ]
    },
    "3945": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "0"
      ]
    },
    "3946": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3947": {
      "op": "app_global_get_ex",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3948": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "3949": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "3950": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%12#0"
      ]
    },
    "3951": {
      "op": "bz liquidate_bool_false@4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "3954": {
      "op": "frame_dig -1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3956": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%13#0"
      ]
    },
    "3958": {
      "op": "frame_dig 4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%13#0",
        "debtAmount#0"
      ]
    },
    "3960": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%14#0"
      ]
    },
    "3961": {
      "op": "bz liquidate_bool_false@4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "3964": {
      "op": "intc_1 // 1",
      "defined_out": [
        "acceptedCollateral#0",
        "and_result%0#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ]
    },
    "3965": {
      "block": "liquidate_bool_merge@5",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "3966": {
      "op": "frame_dig 2",
      "defined_out": [
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "record#0"
      ]
    },
    "3968": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "record#0",
        "72"
      ]
    },
    "3970": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "3971": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0",
        "loanRecordASAId#0"
      ]
    },
    "3972": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "3974": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0",
        "tmp%16#0"
      ]
    },
    "3976": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%16#0",
        "loanRecordASAId#0"
      ]
    },
    "3977": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%17#0",
        "assetExists#0"
      ]
    },
    "3979": {
      "op": "bury 1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "assetExists#0"
      ]
    },
    "3981": {
      "op": "bnz liquidate_after_if_else@8",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "3984": {
      "op": "itxn_begin"
    },
    "3985": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3987": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "3988": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3990": {
      "op": "frame_dig 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0"
      ]
    },
    "3992": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3994": {
      "op": "frame_dig -2",
      "defined_out": [
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3996": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3998": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4000": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "4"
      ]
    },
    "4001": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4004": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4006": {
      "op": "itxn_submit"
    },
    "4007": {
      "block": "liquidate_after_if_else@8",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ],
      "op": "itxn_begin"
    },
    "4008": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "4010": {
      "op": "itxn_field Sender",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4012": {
      "op": "frame_dig 0",
      "defined_out": [
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4014": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4016": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "3"
      ]
    },
    "4018": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4020": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4021": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4023": {
      "op": "itxn_submit"
    },
    "4024": {
      "op": "frame_dig 1",
      "defined_out": [
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%0#0"
      ]
    },
    "4026": {
      "op": "box_del",
      "defined_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "{box_del}"
      ]
    },
    "4027": {
      "op": "pop",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4028": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4029": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "4031": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecordASAId#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4032": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%4#0"
      ]
    },
    "4033": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecordASAId#0",
        "maybe_value%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "4034": {
      "op": "-",
      "defined_out": [
        "loanRecordASAId#0",
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "new_state_value%0#0"
      ]
    },
    "4035": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "4037": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "4038": {
      "op": "app_global_put",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4039": {
      "op": "itxn_begin"
    },
    "4040": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4042": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "record#0"
      ]
    },
    "4044": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "record#0",
        "32"
      ]
    },
    "4046": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4047": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "4049": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "4050": {
      "op": "cover 3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4052": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4054": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4056": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4058": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "4059": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4061": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "4062": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4064": {
      "op": "itxn_submit"
    },
    "4065": {
      "op": "frame_dig 6",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "4067": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "16"
      ]
    },
    "4069": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "tmp%21#0"
      ]
    },
    "4070": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%21#0",
        "collateralAmount#0"
      ]
    },
    "4071": {
      "op": "-",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "newTotal#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "newTotal#0"
      ]
    },
    "4072": {
      "op": "frame_dig 5",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "loanRecordASAId#0",
        "newTotal#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "newTotal#0",
        "collateralTokenId#0"
      ]
    },
    "4074": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "4075": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4078": {
      "retsub": true,
      "op": "retsub"
    },
    "4079": {
      "block": "liquidate_bool_false@4",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ]
    },
    "4080": {
      "op": "b liquidate_bool_merge@5"
    },
    "4083": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanStatus",
      "params": {
        "borrower#0": "bytes"
      },
      "block": "getLoanStatus",
      "stack_in": [],
      "op": "proto 1 7"
    },
    "4086": {
      "op": "bytec_1 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "4087": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrower#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrower#0 (copy)"
      ]
    },
    "4089": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4090": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4091": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4092": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4094": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4095": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "4096": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "record#0"
      ]
    },
    "4097": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "record#0",
        "record#1"
      ],
      "stack_out": [
        "record#0",
        "record#1"
      ]
    },
    "4100": {
      "op": "pop",
      "stack_out": [
        "record#0"
      ]
    },
    "4101": {
      "op": "dup",
      "defined_out": [
        "record#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4102": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "record#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "record#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "4104": {
      "op": "extract_uint64",
      "defined_out": [
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0"
      ]
    },
    "4105": {
      "op": "dig 1",
      "stack_out": [
        "record#0",
        "debt#0",
        "record#0 (copy)"
      ]
    },
    "4107": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "debt#0",
        "record#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "record#0 (copy)",
        "40"
      ]
    },
    "4109": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0"
      ]
    },
    "4110": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "collateralAmount#0",
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "4111": {
      "op": "bytec 10 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "collateralAmount#0",
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "4113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "maybe_exists%2#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "maybe_exists%2#0"
      ]
    },
    "4114": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "liqBps#0"
      ]
    },
    "4115": {
      "op": "uncover 3",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "record#0"
      ]
    },
    "4117": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "tmp%4#0"
      ]
    },
    "4120": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCollateral",
      "op": "callsub getCollateral",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "acceptedCollateral#0"
      ]
    },
    "4123": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "4125": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "tmp%6#0"
      ]
    },
    "4126": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "oraclePrice#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "oraclePrice#0"
      ]
    },
    "4129": {
      "op": "dig 2",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "debt#0",
        "liqBps#0",
        "oraclePrice#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "oraclePrice#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4131": {
      "op": "mulw",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "hi#0",
        "liqBps#0",
        "lo#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "hi#0",
        "lo#0"
      ]
    },
    "4132": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralAmount#0",
        "debt#0",
        "hi#0",
        "liqBps#0",
        "lo#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "hi#0",
        "lo#0",
        "1"
      ]
    },
    "4133": {
      "op": "divw",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0"
      ]
    },
    "4134": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)"
      ]
    },
    "4135": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)",
        "10000"
      ]
    },
    "4136": {
      "op": "*",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "tmp%7#0"
      ]
    },
    "4137": {
      "op": "dig 4",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "debt#0 (copy)",
        "liqBps#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "tmp%7#0",
        "debt#0 (copy)"
      ]
    },
    "4139": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0"
      ]
    },
    "4140": {
      "op": "dup",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "CR#0 (copy)"
      ]
    },
    "4141": {
      "op": "dig 3",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0",
        "liqBps#0 (copy)"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "CR#0 (copy)",
        "liqBps#0 (copy)"
      ]
    },
    "4143": {
      "op": "<",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "eligibleForLiquidation#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0"
      ]
    },
    "4144": {
      "op": "dig 1",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "CR#0 (copy)"
      ]
    },
    "4146": {
      "op": "dig 4",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "CR#0 (copy)",
        "liqBps#0 (copy)"
      ]
    },
    "4148": {
      "op": ">",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "eligibleForBuyout#0",
        "eligibleForLiquidation#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0"
      ]
    },
    "4149": {
      "op": "uncover 6",
      "stack_out": [
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0"
      ]
    },
    "4151": {
      "op": "uncover 4",
      "stack_out": [
        "collateralAmount#0",
        "liqBps#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0"
      ]
    },
    "4153": {
      "op": "uncover 6",
      "stack_out": [
        "liqBps#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0"
      ]
    },
    "4155": {
      "op": "uncover 5",
      "stack_out": [
        "liqBps#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0"
      ]
    },
    "4157": {
      "op": "uncover 6",
      "stack_out": [
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0",
        "liqBps#0"
      ]
    },
    "4159": {
      "op": "uncover 6",
      "stack_out": [
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0",
        "liqBps#0",
        "eligibleForLiquidation#0"
      ]
    },
    "4161": {
      "op": "uncover 6",
      "stack_out": [
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0",
        "liqBps#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0"
      ]
    },
    "4163": {
      "retsub": true,
      "op": "retsub"
    }
  }
}