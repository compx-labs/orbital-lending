{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/orbital-lending/smart-contracts/projects/smart-contracts/smart_contracts/orbital_lending/OrbitalLending.algo.ts"
  ],
  "mappingsgCG;;AAAA;AAAA;AAAA;;AAAA;AA1gCH;;;AAAA;AAAA;;AA0gCG;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA9DA;;AAAA;AAAA;AAAA;;AAAA;AA58BH;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA48BG;;;AAAA;;AA/DA;;AAAA;AAAA;AAAA;;AAAA;AA74BH;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA64BG;;;AAAA;;AAnEA;;AAAA;AAAA;AAAA;;AAAA;AA10BH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA00BG;;;AAAA;;AApEA;;AAAA;AAAA;AAAA;;AAAA;AAtwBH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAswBG;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAjvBH;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAivBG;;;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AA/qBH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AA+qBG;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AA1nBH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AA0nBG;;;AAAA;;AAJD;;AAAA;AAAA;AAAA;;AAAA;AAtnBF;;;AAAA;AAAA;;AAsnBE;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAlnBF;;;AAAA;AAAA;;AAknBE;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA7EC;;AAAA;AAAA;AAAA;;AAAA;AAriBH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAqiBG;;;AAAA;;AA5MA;;AAAA;AAAA;AAAA;;AAAA;AAzVH;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyVG;;;AAAA;;AAxCA;;AAAA;AAAA;AAAA;;AAAA;AAjTH;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiTG;;;AAAA;;AAnCA;;AAAA;AAAA;AAAA;;AAAA;AA9QH;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8QG;;;AAAA;;AArEA;;AAAA;AAAA;AAAA;;AAAA;AAzMH;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyMG;;;AAAA;;AArCD;;AAAA;AAAA;AAAA;;AAAA;AApKF;;;AAAA;AAoKE;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA7IF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA6IE;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AA1HF;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0HE;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAhGF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgGE;;;AAAA;;AA3CC;;AAAA;AAAA;AAAA;;AAAA;AArDH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAqDG;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA/CH;;;AAAA;AAAA;;AAAA;;;AAAA;AA+CG;;;AAAA;;AAAD;;;AAhCA;AAkCE;;AAAA;AAC2B;;AAAA;AA/C7B;AA+CE;AAAA;;AAGF;;;AAUgB;;AAhDhB;AAAA;AAAA;AAAA;AAgDS;AAAP;AAEA;;AAAA;;AAlDF;AAAA;AAAA;AAAA;AAkDE;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AA/CF;;AAoDE;;AAAA;AAjDF;;AAkDE;;AAAA;AA/CF;;AAgDE;;AAAA;AA7CF;;AA8CE;;AAAA;AAhCF;;AAiC0C;AAAxC;AA/BF;;AAgCwB;AAAtB;AAlEF;;AAmE+B;AAA7B;AAhEF;;AAiE8B;AAA5B;AAvCF;AAwCmC;AAAjC;AAjDF;;AAkDE;;AAAA;AAhDF;;AAiDE;;AAAA;AA1EF;;AA2E4B;;;;;;;;;;AAA1B;AA9EF;AAAA;AAAA;AAAA;AAgF+B;AAA7B;;;AACE;AAE0B;;AAnF9B;AAAA;AAAA;AAAA;AAoF4C;AACvB;;;;;;;AAJjB;;;AAKS;;;;AALT;;;;;;AAYJ;;;AACgB;;AAlFhB;AAAA;AAAA;AAAA;AAkFS;AAAP;AACA;;AAAA;;AAnFF;AAAA;AAAA;AAAA;AAmFE;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AA/FF;AAAA;AAAA;AAAA;AAsGmD;AAClC;AAEI;;AACE;;AAAA;;AAAA;AACG;;AAAA;;AAAA;AAEJ;;AACiB;;AAAA;;AAAA;AAAvB;;;AAAA;AAAA;AA9GhB;AAAA;AAAA;AAAA;AA+GiB;;;AAAA;AAAA;;;;;;;AAHI;;;;;;;;;AALJ;;;;AASN;;;;AATM;;;AAYW;AAhH5B;;AAgHE;AAAA;;;;;;AAIF;;;AACgB;;AA5GhB;AAAA;AAAA;AAAA;AA4GS;AAAP;AACA;;AAAA;;AA7GF;AAAA;AAAA;AAAA;AA6GE;AAAA;;;AAAA;;AAAA;;AAEU;;;AAFV;AAAA;;;;AAAA;AAI0B;;AAAA;AA1H5B;;AA0HE;AAAA;AAGA;AAE0B;;AAET;;;;;;;;;AAJjB;;;AAKS;;;;AALT;;;;;;AAUF;;;AACgB;;AA/HhB;AAAA;AAAA;AAAA;AA+HS;AAAP;AAxIF;AAAA;;AAAA;AAAA;AAyIiC;AAAoB;;AAAA;;AAA5C;AAAP;AAEA;;AAAA;;AAlIF;AAAA;AAAA;AAAA;AAkIE;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;;AAAA;AAxIF;;AA4IE;;AAAA;;;;;;AA5IF;AAAA;;AAAA;AAAA;AAgJE;AA7IF;AAAA;;AAAA;AAAA;AAiJE;AApHF;AAAA;;AAAA;AAAA;AAwHE;AAGF;;;AArIA;AAAA;;AAAA;AAAA;AAuIyB;AAAA;;AAAA;;AAAA;AAGR;AAEN;;AAAA;AAFM;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;AAKK;AAApB;AAaF;;;AAzJsF;;AAAA;;AAAA;AAAA;AA2JlC;AAAA;AAAA;AAAA;;AAAA;AAEnC;AAAA;;;AAAA;AAAA;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACsD;;AAAA;AAAhB;;AAAgB;AAA9C;;AAAmB;AAGC;AAAA;;;AACP;AAAA;AAHoB;;AAAA;;AAAA;AAAA;AAAA;AAAvC;;AAAA;AAAA;;AAQJ;;;AAtMA;AAAA;AAAA;AAAA;AAwMmD;AACnC;;AA7LhB;AAAA;AAAA;AAAA;AA6LS;AAAP;AACyB;;AAAA;AAAA;AAAA;;AAAlB;AAAP;AA3KoF;;AAAA;;AAAA;AAAA;AAiJ9C;AAAA;;AA2B/B;AAAP;AACA;;AAAA;;AAhMF;AAAA;AAAA;AAAA;AAgME;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AA5MF;AAAA;AAAA;AAAA;AAiNoD;;AAAA;AAAA;AAG/B;;;;;;;;;;AAH+B;AAMlD;;AAAA;AAAA;;AAAA;AAjLF;AAAA;;AAAA;AAAA;AAkLkF;AAAxC;AAlL1C;;AAkLE;AAAA;AACA;AAEmB;;AACO;AAET;;;;;;;;;;;AALjB;;;AAMS;;;;AANT;AA/KF;;;;;;;;;;;;;;;;;;;;;;;AAwLE;;AAAA;AAlDsC;AAAA;;AAoDpC;;;;;;AAuCJ;;;AA3QA;AAAA;AAAA;AAAA;AA6QmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAKA;;AAAA;;AACU;;AADV;AAAA;AAnRF;AAAA;AAAA;AAAA;;AAAA;AASA;AAAA;;AAAA;AAAA;AAmRE;;;;;AAKA;AAE0B;;AAhS5B;AAAA;;AAAA;AAAA;AAiSyC;;;;;;;;;AAHvC;;;AAKS;;;;AALT;AA3RF;AAAA;;AAAA;AAAA;AAoSE;AApSF;;AAoSE;AAAA;AAjSF;AAAA;;AAAA;AAAA;AAkSE;;AAAA;AAlSF;;AAkSE;AAAA;;AArSF;AAAA;;AAAA;AAAA;AAkOiE;AAAjC;AA/NhC;AAAA;;AAAA;AAAA;AAiOmB;AAEa;;AAAA;AACG;AAA1B;;;;;;;;AAiET;;;AA3SA;AAAA;;AAAA;AAAA;AAkTiD;AAC/C;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAMA;;AAAA;;AACU;;;AADV;AAAA;AAMI;;AAAoB;;AAApB;AAAJ;;;AA5TF;AAAA;;AAAA;AAAA;AAGA;AAAA;;AAAA;AAAA;AA8PmB;;AAAA;AACV;;AAAA;AAgEoC;;AAxU7C;AAAA;AAAA;AAAA;AAwUiG;AAAxF;;AAAA;AAAA;;AAAA;AAAP;AACA;AAE0B;;AA3U5B;AAAA;AAAA;AAAA;AA4U0C;;;;;;;;;AAHxC;;;AAKS;;;;AALT;AAnUF;AAAA;;AAAA;AAAA;AA4UE;;AAAA;AA5UF;;AA4UE;AAAA;AAzUF;AAAA;;AAAA;AAAA;AA0UE;AAAA;AA1UF;;AA0UE;AAAA;;AAhG+B;AAAA;;;;;;;;AAAA;;;;AAExB;;;;AAFwB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAID;AAAA;;;;;;;;AAAA;;;;AAEvB;;;;AAFuB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAMb;;AAAA;AACV;;AAAA;;;;;;;;AAwFT;;;AArTuD;AA+Tb;;AA/Ta;AA+TL;AAAA;;AAChD;;AAAA;;AACU;;;AADV;AAAA;AAKA;;AAAA;;AACwB;;AADxB;AAAA;AAKM;;AAAqC;;AAArC;AAAA;;AA5U8E;;AAAA;;AAAA;AAsJ9C;AAAA;AA0LP;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AACD;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAGb;;AAAA;AACX;;AAA+B;AAG0C;AAAZ;;AAAY;AAAnD;;;AACX;AAC0B;AAAb;AA1WhC;AAAA;;AAAA;AAAA;AA4WgC;AAAsC;AAAvC;AAAvB;AAnWR;AAAA;;AAAA;AAAA;AAsWuB;;AAAA;AAAwD;AAAzD;AACd;;AAAA;;AAAuB;AAAvB;AAAA;;AAAA;;AAvVR;AAAA;;AAAA;AAAA;AAwVE;AAxVF;;AAwVE;AAAA;AAhYF;AAAA;AAAA;AAAA;AAmYsF;AAAtD;;AAAA;AACH;;AAArB;AAAqB;AACV;AACa;;AACN;AADM;;AAEH;AAArB;;AAGN;;;AAEsC;;AAA1B;;;AACJ;;;AAAA;AA7W6C;AA8W3B;;AA9W2B;AA8WnD;;AAAA;AAE0D;AAAvB;;AAAuB;AAApD;AAAA;;AAAyB;AACxB;;AAAA;AAAP;AAGqD;;AAAjB;;AAAiB;AAA/C;;AAAA;AAAA;;AAA0B;AAE1B;AAAA;;AAAA;AAAA;;AAAkB;AACsB;;AAAb;;AAAa;AAAxC;;AAAuB;AAMvB;;AAAA;;;AACG;;AAGH;;AAAA;;;AAAgB;;AAAhB;;AAAgB;AAPtB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAWuB;;AAAA;;;AAEH;;AAAA;AACJ;;AAAA;AACU;;AAAA;AACH;;AAAA;;;AAEoB;;AAAnB;AARgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AApYW;AAoY3B;;AApY2B;AAoYnD;AAAA;AAlYJ;AAAA;AAAA;AAAA;AA4YsE;AAAjC;AA5YrC;AA4YI;AAAA;AACA;;AAAA;AAAA;;;AAhbJ;AAAA;AAAA;AAAA;AA+b+B;AAA7B;;;AACE;AAEqB;;;;;;;;AAFrB;;;AAIS;;;;AAJT;;AAQA;AAE0B;;AA1c9B;AAAA;AAAA;AAAA;AA2c4C;;;;;;;;;AAHxC;;;AAKS;;;;AALT;;AArBO;;AAAA;AAAP;AAKS;;AAoEG;AAEC;;;AAAA;;AAAA;AAAA;AAAwC;;;AAAxC;AA9fjB;AAAA;AAAA;AAAA;AA8fiB;AAET;;AACA;;AADA;AAAA;;AAAA;AAGA;;AAHA;AAIO;;AAAA;AAJP;AAAA;;AAAA;AAKA;;AALA;AAM0B;;AAAnB;AANP;AAOc;;AAGD;AA1gBrB;AAAA;AAAA;AAAA;AA2gBgB;;AAAA;AAAA;AAEK;;AACE;AACF;;;;;;;;;;;;;;;;;;;;AAPL;;;;;;;;;;;;;AAZA;;;;AAoBL;;;;AApBK;;;AA2BM;;AAAA;AACJ;;AAAA;AAxhBlB;AAAA;AAAA;AAAA;AA2hBqB;;AAAA;AACwB;;AAAnB;AARO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnfsB;AAAA;;AAAA;AA6frD;AAAA;AA3fF;AAAA;AAAA;AAAA;AA4foE;AAAjC;AA5fnC;AA4fE;AAAA;;;;AA5EF;;;AASgB;AAEM;;AACD;;;;;;;;;;;;;AAHL;;;;AAML;;;;AANK;;;AAaM;;AAAA;AACJ;;AAAA;AACU;;AAAA;AA3e5B;AAAA;AAAA;AAAA;AA6eqB;;AAAA;AACwB;;AAAnB;AARO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AArcsB;AAAA;;AAAA;AA+crD;AAAA;AA7cF;AAAA;AAAA;AAAA;AA8coE;AAAjC;AA9cnC;AA8cE;AAAA;;AAiDF;;;AAjgBuD;AAAA;;AAAA;AAmgBrB;AAAA;AAAA;;AAAhC;AAC2B;;AAAP;;AAAA;;AAAA;;AACpB;AAC4C;AAAA;;AAAA;AAC5C;AAIiB;;;;;;;;;;;AAJjB;;;AAAA;;;AAAA;AASA;AAE0B;;;;;;AAET;;;;;;;;;AAJjB;;;AAAA;;;AAAA;;AAUF;;;AACqB;;AAAb;AACA;;AAAc;;AAAqB;AAAnC;AAAA;;AAEF;AAAJ;;;AAAiB;;AAAA;AAAA;;AAAA;;AAAA;AAEX;;AAAA;AAAA;;AAAiB;AACjB;;AAA2B;;AAAuB;AA7iB1D;AAAA;;AAAA;AAAA;AAijBqB;;AAAA;AAEuB;AAAf;AAER;;AAAA;AAjlBU;;;;;AAmlBJ;AAljB3B;AAAA;;AAAA;AAAA;AAqjB+B;AAAvB;AAAuB;AAGN;;AAAA;AAC8B;AAAnB;AAG5B;AAA2B;AA7kBnC;AAAA;;AAAA;AAAA;AAilBE;;AAAA;AAjlBF;;AAilBE;AAAA;AAljBF;AAAA;;AAAA;AAAA;AAojBE;AApjBF;;AAojBE;AAAA;AAI6B;AAIH;;AAAA;;;AACE;;AAAA;;;AACD;;AAAA;;;AACJ;;AAAA;;;AACG;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;;AACF;;AAAA;AARjB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAAA;;AAAA;;AAAA;AAYF;;;AA9kBuD;AAAA;;AAAA;AA+kBZ;AAAA;AAAzC;AAGF;;;AAllBuD;AAAA;;AAAA;AAmlBZ;AAAA;AAAM;;AAAgB;AAA/D;AAGF;;;;;;AAvnBA;AAAA;AAAA;AAAA;AAynBmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAM2C;;AAA1B;;;AACJ;;;AAAA;AAAA;AAAA;;AAhmBwC;AAimB7B;;AAjmB6B;AAimBrD;;AAAA;AAEuD;;AAA/B;;;AAAlB;AAEkC;;AACX;AAAtB;;AAAA;;AAAA;AAAP;AACM;;AAAwB;AAAxB;AAAA;;AAEN;;;AACE;AAGmB;;;;;;AAHnB;;;;AAAA;;;AAAA;AA1mBmD;AAmnB3B;;AAnnB2B;AAmnBnB;;AAjnBpC;AAAA;AAAA;AAAA;AAknBsE;AAAjC;AAlnBrC;AAknBI;AAAA;AAEA;AAE0B;;AACkB;;AAAA;AAAlB;;AAAkB;AACC;AAAjB;;AAAiB;;;;;;;AAJ7C;;;AAAA;;;AAAA;;AAW0B;;AAAA;AAAb;;AAAa;AACb;;AAAA;;;AACJ;;AACqB;;AAAjB;;AAAiB;AAL9B;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;AAYJ;;;;;;AA5qBA;AAAA;AAAA;AAAA;;AAAA;AA+qBE;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAK2C;;AAA1B;;;AACJ;;;AAAA;AAAA;AAAA;;AAppBwC;AAqpB7B;;AArpB6B;AAqpBrD;;AAAA;AAEuD;;AAA/B;;;AAAlB;AAEkC;;AACX;AAAtB;;AAAA;;AAAA;AAAP;AACM;;AAAwB;AAAxB;AAAA;;AAEN;;;AAEE;AAGmB;;;;;;AAHnB;;;;AAAA;;;AAAA;AA/pBmD;AAwqB3B;;AAxqB2B;AAwqBnB;;AAtqBpC;AAAA;AAAA;AAAA;AAuqBsE;AAAjC;AAvqBrC;AAuqBI;AAAA;AAEA;AAE0B;;AACkB;;AAAA;AAAlB;;AAAkB;AACC;AAAjB;;AAAiB;;;;;;;AAJ7C;;;AAAA;;;AAAA;;AAW0B;;AAAA;AAAb;;AAAa;AACb;;AAAA;;;AACJ;;AACqB;;AAAjB;;AAAiB;AAL9B;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;AAcY;;AAvtBhB;AAAA;AAAA;AAAA;AAutBS;AAAP;AACA;AAxtBF;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAuuB0C;AA/rB1C;AAAA;;AAAA;AAAA;;;;;;;AA4rBE;;;AAAA;;;AAAA;AA5rBF;;AAmsBwB;AAAtB;;AAGF;;;AA7sBuD;AAAA;;AAAA;AA+sBrB;AAAA;AAAA;;AAAhC;AACmD;AAAA;AAAA;AAEnD;;;AAAA;;AAI2C;AAAvB;;AAAuB;AACV;;AAAb;;AAAa;AACb;;AAAA;;;AAEiB;;AAAjB;;AAAiB;AAED;;AAAhB;;AAAgB;AAPpC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAUA;;AAGF;;;;;AAluBuD;AAAA;;AAAA;AAAA;;AAouBrB;AAAA;;AAAhC;AACmD;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAA;;AAAA;AAEM;AAAqC;;AAAiB;AAAtD;AAAA;;AACA;AAA+B;;AAAuB;AAAtD;AAAA;;AAAA;;AAC2D;;AAAkB;AAAhD;AAAA;AAAA;;AA5uBiD;;AAAA;AAAA;AAsJ9C;AAAA;AAylBI;AAAhB;;AAAgB;AAAA;AAAA;;AAAnC;;AAAA;AAAP;AAGmE;;AAAY;AAAnD;;;AACX;AAC0B;AAAb;AACxB;AAAA;;AAAa;AAlwBrB;AAAA;;AAAA;AAAA;AAmwBS;;AAAA;AAAP;AAEkC;AAAL;AArwB/B;AAAA;;AAAA;AAAA;AAqwB8B;AAA8C;AAA9C;AACmC;AAAd;AAAJ;AAAA;AAAjB;AAE5B;;AAAA;;AA1xBF;AAAA;AAAA;AAAA;AA2xB8C;AAD5C;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAS2B;;AAA4E;;AAAhB;;AAAgB;AAAA;AAAA;;AAAnF;;AAAA;;AAChB;;;AACF;AAE0B;;;;;;;;;;;;;;;;AAF1B;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AApxB3B;AAAA;AAAA;AAAA;AAqxBoE;AAAjC;AArxBnC;AAqxBE;AAAA;AAGA;AAGiC;;AAAA;AAAA;;;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAQM;;AAAA;AAAmB;AACzB;;;;;;;;AAGF;;;;;AAtyBuD;AAAA;;AAAA;AAAA;;AAwyBrB;AAAA;;AAAhC;AACmD;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAA;;AAAA;AAEM;AAAqC;;AAAiB;AAAtD;AAAA;;AACA;AAA+B;;AAAuB;AAAtD;AAAA;;AAAA;;AAC2D;;AAAkB;AAAhD;AAAA;AAAA;;AAhzBiD;;AAAA;AAAA;AAsJ9C;AAAA;AA6pBI;AAAhB;;AAAgB;AAAA;AAAA;;AAAnC;;AAAA;AAAP;AAGmE;;AAAY;AAAnD;;;AACX;AAC0B;AAAb;AACxB;AAAA;;AAAa;AAt0BrB;AAAA;;AAAA;AAAA;AAu0BS;;AAAA;AAAP;AAEkC;AAAL;AAz0B/B;AAAA;;AAAA;AAAA;AAy0B8B;AAA8C;AAA9C;AACmC;AAAd;AAAJ;AAAA;AAAjB;AAE5B;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAQ2B;;AAA4E;;AAAhB;;AAAgB;AAAA;AAAA;;AAAnF;;AAAA;;AAChB;;;AACF;AAE0B;;;;;;;;;;;;;;;;AAF1B;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AAv1B3B;AAAA;AAAA;AAAA;AAw1BoE;AAAjC;AAx1BnC;AAw1BE;AAAA;AAGA;AAGiC;;AAAA;AAAA;;;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAQM;;AAAA;AAAmB;AACzB;;;;;;;;AAGF;;;;;AAz2BuD;AAAA;;AAAA;AAAA;;AA22BrB;AAAA;;AAAhC;AAEwC;AAAA;AAAA;AAAA;;AAAA;AAClC;AAA0B;;AAAiB;AAA3C;AAAA;;AACA;AAAoB;;AAAuB;AAA3C;AAAA;;AAAA;;AAC2B;;;AAA3B;AAAA;;AAl3B8E;;AAAA;AAAA;AAsJ9C;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA+tBqB;;AAAY;AAAnD;;;AACL;AACkB;AAAX;AAEhB;AAAa;AAt4BrB;AAAA;;AAAA;AAAA;AAu4BS;AAAP;AAGA;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AA55BF;AAAA;AAAA;AAAA;AA85B8C;AAF5C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAOM;;AAAyB;;AAAgB;AAAzC;AAAA;;AACqB;;AAAP;AAAA;;AAAA;;AAChB;;;AACF;AAE0B;;AAGT;;;;;;;;;;;;;AALjB;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AAr5B3B;AAAA;AAAA;AAAA;AAs5BoE;AAAjC;AAt5BnC;AAs5BE;AAAA;AAGA;AAE0B;;AACO;;AA9CA;;AA8CA;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAS4D;;AAAhB;;AAAgB;AAAtD;AAAmB;AACzB;;AAAA;AAAA;;;;;;;;AAGF;;;;;AAx6BuD;AAAA;;AAAA;AAAA;;AA06BrB;AAAA;;AAAhC;AAEwC;AAAA;AAAA;AAAA;;AAAA;AAClC;AAA0B;;AAAiB;AAA3C;AAAA;;AACA;AAAoB;;AAAuB;AAA3C;AAAA;;AAAA;;AAC2B;;;AAA3B;AAAA;;AAj7B8E;;AAAA;AAAA;AAsJ9C;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA8xBqB;;AAAY;AAAnD;;;AACL;AACkB;AAAX;AAEhB;AAAa;AAr8BrB;AAAA;;AAAA;AAAA;AAs8BS;AAAP;AAGA;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAMM;;AAAyB;;AAAgB;AAAzC;AAAA;;AACqB;;AAAP;AAAA;;AAAA;;AAChB;;;AACF;AAE0B;;AAGT;;;;;;;;;;;;;AALjB;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AAn9B3B;AAAA;AAAA;AAAA;AAo9BoE;AAAjC;AAp9BnC;AAo9BE;AAAA;AAGA;AAE0B;;AACO;;AA7CA;;AA6CA;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAS4D;;AAAhB;;AAAgB;AAAtD;AAAmB;AACzB;;AAAA;AAAA;;;;;;;;AAGF;;;AAt+BuD;AAAA;;AAAA;AAg/BnB;AAAA;AAAA;;AAAlC;AACwC;AAAA;AAC/B;;;AAAA;AAEH;AAAsB;;AAAuB;AAC7C;;AAAkC;;AAAiB;AApgC3D;AAAA;;AAAA;AAAA;AAugCuD;;AAAA;;;AA1/B+B;;AAAA;AAAA;AAsJ9C;AAAA;AAq2BqB;;AAAY;AAAnD;;;AACH;;AAAA;AACuB;AAAb;AAEP;AAAqB;AAArB;AAAd;;AAAa;AACb;AAAA;;AAAyB;AACzB;;AAAA;;AAAoB;AAE1B;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4 10000 1000 4294967296"
    },
    "15": {
      "op": "bytecblock \"base_token_id\" \"active_loan_records\" \"loan_record\" \"admin_account\" 0x151f7c75 \"total_deposits\" \"circulating_lst\" \"liq_threshold_bps\" \"accepted_collaterals\" \"fee_pool\" \"lst_token_id\" \"accepted_collaterals_count\" 0x09ef525f 0xae859f3b \":\" \"ltv_bps\" \"interest_bps\" \"origination_fee_bps\" \"protocol_interest_fee_bps\" \"oracle_app\""
    },
    "291": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "293": {
      "op": "bz main_after_if_else@31",
      "stack_out": []
    },
    "296": {
      "op": "pushbytess 0x3b01665e 0x9de42732 0x17c33662 0x5efce39a 0x5cac25a9 // method \"createApplication(account,uint64)void\", method \"initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void\", method \"generateLSTToken(pay)void\", method \"optInToLST(uint64,pay)void\", method \"configureLSTToken(axfer,uint64)void\"",
      "defined_out": [
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(optInToLST(uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)"
      ]
    },
    "323": {
      "op": "bytec 12 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(optInToLST(uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "325": {
      "op": "bytec 13 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(optInToLST(uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "327": {
      "op": "pushbytess 0x6c6337c0 0xe596ac73 0x53b5111f 0x72c5c57b 0x3e41a49b 0x3ff83798 0x6177ca28 0xf676074f 0xabaf9805 0x0e6e6369 0x44e03043 0x96da416e 0xf0de9dc0 0x1dffadde 0xf0eda6a8 0x836dbb73 0xf16507ce 0xdaa7f7f2 // method \"getAcceptedCollateralsCount()uint64\", method \"getOraclePrice(uint64)uint64\", method \"addNewCollateralType(uint64,pay)void\", method \"depositASA(axfer,uint64,pay)void\", method \"withdrawDeposit(axfer,uint64,uint64,pay)void\", method \"borrow(axfer,uint64,uint64,uint64,byte[],pay)void\", method \"claimLoanRecordASA(account,asset)void\", method \"getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"getLoanRecordASAId(account)uint64\", method \"repayLoanASA(axfer,uint64,byte[])void\", method \"repayLoanAlgo(pay,uint64,byte[])void\", method \"withdrawFees()void\", method \"accrueLoanInterest(account,byte[])void\", method \"buyoutASA(account,account,axfer)void\", method \"buyoutAlgo(account,account,pay)void\", method \"liquidateASA(account,axfer)void\", method \"liquidateAlgo(account,pay)void\", method \"getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool)\"",
      "defined_out": [
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(addNewCollateralType(uint64,pay)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[],pay)void)",
        "Method(buyoutASA(account,account,axfer)void)",
        "Method(buyoutAlgo(account,account,pay)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(depositASA(axfer,uint64,pay)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getCirculatingLST()uint64)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))",
        "Method(getOraclePrice(uint64)uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(liquidateASA(account,axfer)void)",
        "Method(liquidateAlgo(account,pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(repayLoanASA(axfer,uint64,byte[])void)",
        "Method(repayLoanAlgo(pay,uint64,byte[])void)",
        "Method(withdrawDeposit(axfer,uint64,uint64,pay)void)",
        "Method(withdrawFees()void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getOraclePrice(uint64)uint64)",
        "Method(addNewCollateralType(uint64,pay)void)",
        "Method(depositASA(axfer,uint64,pay)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64,pay)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[],pay)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(repayLoanASA(axfer,uint64,byte[])void)",
        "Method(repayLoanAlgo(pay,uint64,byte[])void)",
        "Method(withdrawFees()void)",
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(buyoutASA(account,account,axfer)void)",
        "Method(buyoutAlgo(account,account,pay)void)",
        "Method(liquidateASA(account,axfer)void)",
        "Method(liquidateAlgo(account,pay)void)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))"
      ]
    },
    "419": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(addNewCollateralType(uint64,pay)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[],pay)void)",
        "Method(buyoutASA(account,account,axfer)void)",
        "Method(buyoutAlgo(account,account,pay)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(depositASA(axfer,uint64,pay)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getCirculatingLST()uint64)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))",
        "Method(getOraclePrice(uint64)uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(liquidateASA(account,axfer)void)",
        "Method(liquidateAlgo(account,pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(repayLoanASA(axfer,uint64,byte[])void)",
        "Method(repayLoanAlgo(pay,uint64,byte[])void)",
        "Method(withdrawDeposit(axfer,uint64,uint64,pay)void)",
        "Method(withdrawFees()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64,application)void)",
        "Method(generateLSTToken(pay)void)",
        "Method(optInToLST(uint64,pay)void)",
        "Method(configureLSTToken(axfer,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getOraclePrice(uint64)uint64)",
        "Method(addNewCollateralType(uint64,pay)void)",
        "Method(depositASA(axfer,uint64,pay)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64,pay)void)",
        "Method(borrow(axfer,uint64,uint64,uint64,byte[],pay)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(repayLoanASA(axfer,uint64,byte[])void)",
        "Method(repayLoanAlgo(pay,uint64,byte[])void)",
        "Method(withdrawFees()void)",
        "Method(accrueLoanInterest(account,byte[])void)",
        "Method(buyoutASA(account,account,axfer)void)",
        "Method(buyoutAlgo(account,account,pay)void)",
        "Method(liquidateASA(account,axfer)void)",
        "Method(liquidateAlgo(account,pay)void)",
        "Method(getLoanStatus(account)(uint64,uint64,uint64,uint64,uint64,bool,bool))",
        "tmp%2#0"
      ]
    },
    "422": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_generateLSTToken_route@5 main_optInToLST_route@6 main_configureLSTToken_route@7 main_getCirculatingLST_route@8 main_getTotalDeposits_route@9 main_getAcceptedCollateralsCount_route@10 main_getOraclePrice_route@11 main_addNewCollateralType_route@12 main_depositASA_route@13 main_withdrawDeposit_route@14 main_borrow_route@15 main_claimLoanRecordASA_route@16 main_getLoanRecord_route@17 main_getLoanRecordASAId_route@18 main_repayLoanASA_route@19 main_repayLoanAlgo_route@20 main_withdrawFees_route@21 main_accrueLoanInterest_route@22 main_buyoutASA_route@23 main_buyoutAlgo_route@24 main_liquidateASA_route@25 main_liquidateAlgo_route@26 main_getLoanStatus_route@27",
      "stack_out": []
    },
    "474": {
      "block": "main_after_if_else@31",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "475": {
      "op": "return",
      "stack_out": []
    },
    "476": {
      "block": "main_getLoanStatus_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%173#0"
      ],
      "stack_out": [
        "tmp%173#0"
      ]
    },
    "478": {
      "op": "!",
      "defined_out": [
        "tmp%174#0"
      ],
      "stack_out": [
        "tmp%174#0"
      ]
    },
    "479": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "480": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%175#0"
      ],
      "stack_out": [
        "tmp%175#0"
      ]
    },
    "482": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "483": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%13#0"
      ]
    },
    "486": {
      "op": "btoi",
      "defined_out": [
        "tmp%177#0"
      ],
      "stack_out": [
        "tmp%177#0"
      ]
    },
    "487": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%178#0"
      ],
      "stack_out": [
        "tmp%178#0"
      ]
    },
    "489": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanStatus",
      "op": "callsub getLoanStatus",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0"
      ]
    },
    "492": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%0#0"
      ]
    },
    "494": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0"
      ]
    },
    "495": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "elements_to_encode%1#0"
      ]
    },
    "497": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "498": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "elements_to_encode%2#0"
      ]
    },
    "500": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "501": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "elements_to_encode%3#0"
      ]
    },
    "503": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "504": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "elements_to_encode%4#0"
      ]
    },
    "506": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "507": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0x00"
      ]
    },
    "510": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0x00",
        "0"
      ]
    },
    "511": {
      "op": "uncover 8",
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0x00",
        "0",
        "elements_to_encode%5#0"
      ]
    },
    "513": {
      "op": "setbit",
      "defined_out": [
        "elements_to_encode%6#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0"
      ]
    },
    "514": {
      "op": "pushbytes 0x00",
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "517": {
      "op": "intc_0 // 0",
      "stack_out": [
        "elements_to_encode%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "518": {
      "op": "uncover 8",
      "stack_out": [
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "elements_to_encode%6#0"
      ]
    },
    "520": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "521": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%5#0"
      ]
    },
    "523": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "525": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "526": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%7#0"
      ]
    },
    "528": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "529": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%8#0"
      ]
    },
    "531": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%9#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "532": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%9#0"
      ]
    },
    "534": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "535": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_bool%0#0"
      ]
    },
    "537": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "538": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_bool%1#0"
      ]
    },
    "539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "540": {
      "op": "getbit",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "is_true%0#0"
      ]
    },
    "541": {
      "op": "pushint 321 // 321"
    },
    "544": {
      "op": "swap",
      "defined_out": [
        "321",
        "encoded_tuple_buffer%6#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "321",
        "is_true%0#0"
      ]
    },
    "545": {
      "op": "setbit",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "546": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "0x151f7c75"
      ]
    },
    "548": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "549": {
      "op": "concat",
      "defined_out": [
        "tmp%179#0"
      ],
      "stack_out": [
        "tmp%179#0"
      ]
    },
    "550": {
      "op": "log",
      "stack_out": []
    },
    "551": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "552": {
      "op": "return",
      "stack_out": []
    },
    "553": {
      "block": "main_liquidateAlgo_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%166#0"
      ]
    },
    "555": {
      "op": "!",
      "defined_out": [
        "tmp%167#0"
      ],
      "stack_out": [
        "tmp%167#0"
      ]
    },
    "556": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "557": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%168#0"
      ],
      "stack_out": [
        "tmp%168#0"
      ]
    },
    "559": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "560": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%12#0"
      ]
    },
    "563": {
      "op": "btoi",
      "defined_out": [
        "tmp%170#0"
      ],
      "stack_out": [
        "tmp%170#0"
      ]
    },
    "564": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0"
      ]
    },
    "566": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%171#0",
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "tmp%172#0"
      ]
    },
    "568": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%171#0",
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "tmp%172#0",
        "1"
      ]
    },
    "569": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%16#0",
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "gtxn_idx%16#0"
      ]
    },
    "570": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%16#0",
        "gtxn_idx%16#0 (copy)",
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "gtxn_idx%16#0",
        "gtxn_idx%16#0 (copy)"
      ]
    },
    "571": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%16#0",
        "gtxn_type%16#0",
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "gtxn_idx%16#0",
        "gtxn_type%16#0"
      ]
    },
    "573": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%16#0",
        "gtxn_type%16#0",
        "pay",
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "gtxn_idx%16#0",
        "gtxn_type%16#0",
        "pay"
      ]
    },
    "574": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%16#0",
        "gtxn_type_matches%16#0",
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "gtxn_idx%16#0",
        "gtxn_type_matches%16#0"
      ]
    },
    "575": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%171#0",
        "gtxn_idx%16#0"
      ]
    },
    "576": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.liquidateAlgo",
      "op": "callsub liquidateAlgo",
      "stack_out": []
    },
    "579": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "580": {
      "op": "return",
      "stack_out": []
    },
    "581": {
      "block": "main_liquidateASA_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "583": {
      "op": "!",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "584": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "585": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%161#0"
      ]
    },
    "587": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "588": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%11#0"
      ]
    },
    "591": {
      "op": "btoi",
      "defined_out": [
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%163#0"
      ]
    },
    "592": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0"
      ]
    },
    "594": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%164#0",
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "tmp%165#0"
      ]
    },
    "596": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%164#0",
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "tmp%165#0",
        "1"
      ]
    },
    "597": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%15#0",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "gtxn_idx%15#0"
      ]
    },
    "598": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%15#0",
        "gtxn_idx%15#0 (copy)",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "gtxn_idx%15#0",
        "gtxn_idx%15#0 (copy)"
      ]
    },
    "599": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%15#0",
        "gtxn_type%15#0",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "gtxn_idx%15#0",
        "gtxn_type%15#0"
      ]
    },
    "601": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%15#0",
        "gtxn_type%15#0",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "gtxn_idx%15#0",
        "gtxn_type%15#0",
        "axfer"
      ]
    },
    "602": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%15#0",
        "gtxn_type_matches%15#0",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "gtxn_idx%15#0",
        "gtxn_type_matches%15#0"
      ]
    },
    "603": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%164#0",
        "gtxn_idx%15#0"
      ]
    },
    "604": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.liquidateASA",
      "op": "callsub liquidateASA",
      "stack_out": []
    },
    "607": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "608": {
      "op": "return",
      "stack_out": []
    },
    "609": {
      "block": "main_buyoutAlgo_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "611": {
      "op": "!",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "612": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "613": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "615": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "616": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "619": {
      "op": "btoi",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "620": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "622": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "625": {
      "op": "btoi",
      "defined_out": [
        "tmp%155#0",
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%156#0"
      ]
    },
    "626": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%155#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0"
      ]
    },
    "628": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%155#0",
        "tmp%157#0",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "tmp%158#0"
      ]
    },
    "630": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%155#0",
        "tmp%157#0",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "tmp%158#0",
        "1"
      ]
    },
    "631": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%14#0",
        "tmp%155#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "gtxn_idx%14#0"
      ]
    },
    "632": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%14#0",
        "gtxn_idx%14#0 (copy)",
        "tmp%155#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "gtxn_idx%14#0",
        "gtxn_idx%14#0 (copy)"
      ]
    },
    "633": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%14#0",
        "gtxn_type%14#0",
        "tmp%155#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "gtxn_idx%14#0",
        "gtxn_type%14#0"
      ]
    },
    "635": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%14#0",
        "gtxn_type%14#0",
        "pay",
        "tmp%155#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "gtxn_idx%14#0",
        "gtxn_type%14#0",
        "pay"
      ]
    },
    "636": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%14#0",
        "gtxn_type_matches%14#0",
        "tmp%155#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "gtxn_idx%14#0",
        "gtxn_type_matches%14#0"
      ]
    },
    "637": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%155#0",
        "tmp%157#0",
        "gtxn_idx%14#0"
      ]
    },
    "638": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.buyoutAlgo",
      "op": "callsub buyoutAlgo",
      "stack_out": []
    },
    "641": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "642": {
      "op": "return",
      "stack_out": []
    },
    "643": {
      "block": "main_buyoutASA_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "645": {
      "op": "!",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "646": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "647": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "649": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "650": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "653": {
      "op": "btoi",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "654": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "656": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%8#0",
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "659": {
      "op": "btoi",
      "defined_out": [
        "tmp%146#0",
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%147#0"
      ]
    },
    "660": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0"
      ]
    },
    "662": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%146#0",
        "tmp%148#0",
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "tmp%149#0"
      ]
    },
    "664": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%146#0",
        "tmp%148#0",
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "tmp%149#0",
        "1"
      ]
    },
    "665": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%13#0",
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "gtxn_idx%13#0"
      ]
    },
    "666": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%13#0",
        "gtxn_idx%13#0 (copy)",
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "gtxn_idx%13#0",
        "gtxn_idx%13#0 (copy)"
      ]
    },
    "667": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%13#0",
        "gtxn_type%13#0",
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "gtxn_idx%13#0",
        "gtxn_type%13#0"
      ]
    },
    "669": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%13#0",
        "gtxn_type%13#0",
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "gtxn_idx%13#0",
        "gtxn_type%13#0",
        "axfer"
      ]
    },
    "670": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%13#0",
        "gtxn_type_matches%13#0",
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "gtxn_idx%13#0",
        "gtxn_type_matches%13#0"
      ]
    },
    "671": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "gtxn_idx%13#0"
      ]
    },
    "672": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.buyoutASA",
      "op": "callsub buyoutASA",
      "stack_out": []
    },
    "675": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "676": {
      "op": "return",
      "stack_out": []
    },
    "677": {
      "block": "main_accrueLoanInterest_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "679": {
      "op": "!",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "680": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "681": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "683": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "684": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "687": {
      "op": "btoi",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "688": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "690": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%138#0",
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "tmp%139#0"
      ]
    },
    "693": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%138#0",
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "tmp%140#0"
      ]
    },
    "696": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueLoanInterest",
      "op": "callsub accrueLoanInterest",
      "stack_out": []
    },
    "699": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "700": {
      "op": "return",
      "stack_out": []
    },
    "701": {
      "block": "main_withdrawFees_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "703": {
      "op": "!",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "704": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "705": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "707": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "708": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawFees",
      "op": "callsub withdrawFees"
    },
    "711": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "712": {
      "op": "return",
      "stack_out": []
    },
    "713": {
      "block": "main_repayLoanAlgo_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "715": {
      "op": "!",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "716": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "717": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "719": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "720": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "1"
      ]
    },
    "723": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%12#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0"
      ]
    },
    "724": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%12#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%12#0 (copy)"
      ]
    },
    "725": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_type%12#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_type%12#0"
      ]
    },
    "727": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_type%12#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_type%12#0",
        "pay"
      ]
    },
    "728": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_type_matches%12#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_type_matches%12#0"
      ]
    },
    "729": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%12#0"
      ]
    },
    "730": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%12#0",
        "reinterpret_bytes[8]%17#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "733": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%12#0",
        "tmp%126#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "tmp%126#0"
      ]
    },
    "734": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%12#0",
        "tmp%126#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "tmp%126#0",
        "tmp%127#0"
      ]
    },
    "737": {
      "op": "extract 2 0",
      "defined_out": [
        "gtxn_idx%12#0",
        "tmp%126#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "tmp%126#0",
        "tmp%128#0"
      ]
    },
    "740": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.repayLoanAlgo",
      "op": "callsub repayLoanAlgo",
      "stack_out": []
    },
    "743": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "744": {
      "op": "return",
      "stack_out": []
    },
    "745": {
      "block": "main_repayLoanASA_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "747": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "748": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "749": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "751": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "752": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "754": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0",
        "1"
      ]
    },
    "755": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%11#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0"
      ]
    },
    "756": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%11#0",
        "gtxn_idx%11#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "gtxn_idx%11#0 (copy)"
      ]
    },
    "757": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%11#0",
        "gtxn_type%11#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "gtxn_type%11#0"
      ]
    },
    "759": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%11#0",
        "gtxn_type%11#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "gtxn_type%11#0",
        "axfer"
      ]
    },
    "760": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%11#0",
        "gtxn_type_matches%11#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "gtxn_type_matches%11#0"
      ]
    },
    "761": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%11#0"
      ]
    },
    "762": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%11#0",
        "reinterpret_bytes[8]%16#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "765": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%11#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "tmp%118#0"
      ]
    },
    "766": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%11#0",
        "tmp%118#0",
        "tmp%119#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "tmp%118#0",
        "tmp%119#0"
      ]
    },
    "769": {
      "op": "extract 2 0",
      "defined_out": [
        "gtxn_idx%11#0",
        "tmp%118#0",
        "tmp%120#0"
      ],
      "stack_out": [
        "gtxn_idx%11#0",
        "tmp%118#0",
        "tmp%120#0"
      ]
    },
    "772": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.repayLoanASA",
      "op": "callsub repayLoanASA",
      "stack_out": []
    },
    "775": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "776": {
      "op": "return",
      "stack_out": []
    },
    "777": {
      "block": "main_getLoanRecordASAId_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "779": {
      "op": "!",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "780": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "781": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "783": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "784": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "787": {
      "op": "btoi",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "788": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "790": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "793": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "794": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "796": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "797": {
      "op": "concat",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "798": {
      "op": "log",
      "stack_out": []
    },
    "799": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "800": {
      "op": "return",
      "stack_out": []
    },
    "801": {
      "block": "main_getLoanRecord_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "803": {
      "op": "!",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "804": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "805": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "807": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "808": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "811": {
      "op": "btoi",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "812": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "814": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "817": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0",
        "0x151f7c75"
      ]
    },
    "819": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%104#0"
      ]
    },
    "820": {
      "op": "concat",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "821": {
      "op": "log",
      "stack_out": []
    },
    "822": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "823": {
      "op": "return",
      "stack_out": []
    },
    "824": {
      "block": "main_claimLoanRecordASA_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "826": {
      "op": "!",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "827": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "828": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "830": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "831": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "834": {
      "op": "btoi",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "835": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "837": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%3#0",
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "840": {
      "op": "btoi",
      "defined_out": [
        "tmp%95#0",
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%95#0",
        "tmp%96#0"
      ]
    },
    "841": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%95#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%95#0",
        "tmp%97#0"
      ]
    },
    "843": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.claimLoanRecordASA",
      "op": "callsub claimLoanRecordASA",
      "stack_out": []
    },
    "846": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "847": {
      "op": "return",
      "stack_out": []
    },
    "848": {
      "block": "main_borrow_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "850": {
      "op": "!",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "851": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "852": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "854": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "855": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "857": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0",
        "2"
      ]
    },
    "859": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0"
      ]
    },
    "860": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%9#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%9#0 (copy)"
      ]
    },
    "861": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%9#0",
        "gtxn_type%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_type%9#0"
      ]
    },
    "863": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%9#0",
        "gtxn_type%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_type%9#0",
        "axfer"
      ]
    },
    "864": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%9#0",
        "gtxn_type_matches%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_type_matches%9#0"
      ]
    },
    "865": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%9#0"
      ]
    },
    "866": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "869": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%9#0",
        "tmp%85#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0"
      ]
    },
    "870": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%14#0",
        "tmp%85#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "873": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0"
      ]
    },
    "874": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "877": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%87#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%87#0"
      ]
    },
    "880": {
      "op": "extract 2 0",
      "defined_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0"
      ]
    },
    "883": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0",
        "tmp%89#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "tmp%89#0"
      ]
    },
    "885": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0",
        "tmp%89#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "tmp%89#0",
        "1"
      ]
    },
    "886": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "gtxn_idx%10#0"
      ]
    },
    "887": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%10#0 (copy)",
        "gtxn_idx%9#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "gtxn_idx%10#0",
        "gtxn_idx%10#0 (copy)"
      ]
    },
    "888": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%9#0",
        "gtxn_type%10#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "gtxn_idx%10#0",
        "gtxn_type%10#0"
      ]
    },
    "890": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%9#0",
        "gtxn_type%10#0",
        "pay",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "gtxn_idx%10#0",
        "gtxn_type%10#0",
        "pay"
      ]
    },
    "891": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%9#0",
        "gtxn_type_matches%10#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%85#0",
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "gtxn_idx%10#0",
        "gtxn_type_matches%10#0"
      ]
    },
    "892": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%85#0",
        "tmp%86#0",
        "reinterpret_bytes[8]%15#0",
        "tmp%88#0",
        "gtxn_idx%10#0"
      ]
    },
    "893": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.borrow",
      "op": "callsub borrow",
      "stack_out": []
    },
    "896": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "897": {
      "op": "return",
      "stack_out": []
    },
    "898": {
      "block": "main_withdrawDeposit_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "900": {
      "op": "!",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "901": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "902": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "904": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "905": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "907": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0",
        "2"
      ]
    },
    "909": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0"
      ]
    },
    "910": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "911": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "913": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "axfer"
      ]
    },
    "914": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "915": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%7#0"
      ]
    },
    "916": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%7#0",
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "919": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0"
      ]
    },
    "920": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%7#0",
        "reinterpret_bytes[8]%12#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "923": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0"
      ]
    },
    "924": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ]
    },
    "926": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "1"
      ]
    },
    "927": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "gtxn_idx%8#0"
      ]
    },
    "928": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)",
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)"
      ]
    },
    "929": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0"
      ]
    },
    "931": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "pay",
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "pay"
      ]
    },
    "932": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0",
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0"
      ]
    },
    "933": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%7#0",
        "tmp%77#0",
        "tmp%78#0",
        "gtxn_idx%8#0"
      ]
    },
    "934": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawDeposit",
      "op": "callsub withdrawDeposit",
      "stack_out": []
    },
    "937": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "938": {
      "op": "return",
      "stack_out": []
    },
    "939": {
      "block": "main_depositASA_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "941": {
      "op": "!",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "942": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "943": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "945": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "946": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "948": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0",
        "2"
      ]
    },
    "950": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "951": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "952": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "954": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "axfer"
      ]
    },
    "955": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "956": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "957": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "960": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%70#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0"
      ]
    },
    "961": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "tmp%71#0"
      ]
    },
    "963": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%5#0",
        "tmp%70#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "tmp%71#0",
        "1"
      ]
    },
    "964": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%6#0",
        "tmp%70#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "gtxn_idx%6#0"
      ]
    },
    "965": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)",
        "tmp%70#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "966": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "tmp%70#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "968": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay",
        "tmp%70#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ]
    },
    "969": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0",
        "tmp%70#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "970": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%70#0",
        "gtxn_idx%6#0"
      ]
    },
    "971": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.depositASA",
      "op": "callsub depositASA",
      "stack_out": []
    },
    "974": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "975": {
      "op": "return",
      "stack_out": []
    },
    "976": {
      "block": "main_addNewCollateralType_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "978": {
      "op": "!",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "979": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "980": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "982": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "983": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "986": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0"
      ]
    },
    "988": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0",
        "1"
      ]
    },
    "989": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "gtxn_idx%4#0"
      ]
    },
    "990": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "991": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "993": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "994": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "995": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "gtxn_idx%4#0"
      ]
    },
    "996": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.addNewCollateralType",
      "op": "callsub addNewCollateralType",
      "stack_out": []
    },
    "999": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1000": {
      "op": "return",
      "stack_out": []
    },
    "1001": {
      "block": "main_getOraclePrice_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "1003": {
      "op": "!",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1004": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1005": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "1007": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1008": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "1011": {
      "op": "btoi",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1012": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "1015": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0"
      ]
    },
    "1016": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "1018": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "1019": {
      "op": "concat",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1020": {
      "op": "log",
      "stack_out": []
    },
    "1021": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1022": {
      "op": "return",
      "stack_out": []
    },
    "1023": {
      "block": "main_getAcceptedCollateralsCount_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1025": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "1026": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1027": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1029": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1030": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getAcceptedCollateralsCount",
      "op": "callsub getAcceptedCollateralsCount",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "1033": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "1034": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "1036": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "1037": {
      "op": "concat",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1038": {
      "op": "log",
      "stack_out": []
    },
    "1039": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1040": {
      "op": "return",
      "stack_out": []
    },
    "1041": {
      "block": "main_getTotalDeposits_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1043": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "1044": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1045": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1047": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1048": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getTotalDeposits",
      "op": "callsub getTotalDeposits",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "1051": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "1052": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "1054": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "1055": {
      "op": "concat",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1056": {
      "op": "log",
      "stack_out": []
    },
    "1057": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1058": {
      "op": "return",
      "stack_out": []
    },
    "1059": {
      "block": "main_getCirculatingLST_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1061": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1062": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1063": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1065": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1066": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCirculatingLST",
      "op": "callsub getCirculatingLST",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1069": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1070": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1072": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1073": {
      "op": "concat",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1074": {
      "op": "log",
      "stack_out": []
    },
    "1075": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1076": {
      "op": "return",
      "stack_out": []
    },
    "1077": {
      "block": "main_configureLSTToken_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1079": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1080": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1081": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1083": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1084": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1086": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "1"
      ]
    },
    "1087": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1088": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "1089": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "1091": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "1092": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "1093": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1094": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "1097": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%38#0"
      ]
    },
    "1098": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.configureLSTToken",
      "op": "callsub configureLSTToken",
      "stack_out": []
    },
    "1101": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1102": {
      "op": "return",
      "stack_out": []
    },
    "1103": {
      "block": "main_optInToLST_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1105": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1106": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1107": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1109": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1110": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "1113": {
      "op": "btoi",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1114": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "1116": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "tmp%32#0",
        "1"
      ]
    },
    "1117": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "gtxn_idx%2#0"
      ]
    },
    "1118": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "1119": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "1121": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "1122": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "1123": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%31#0",
        "gtxn_idx%2#0"
      ]
    },
    "1124": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.optInToLST",
      "op": "callsub optInToLST",
      "stack_out": []
    },
    "1127": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1128": {
      "op": "return",
      "stack_out": []
    },
    "1129": {
      "block": "main_generateLSTToken_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1131": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1132": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1133": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1135": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1136": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1138": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "1"
      ]
    },
    "1139": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "1140": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "1141": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "1143": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "1144": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "1145": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "1146": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.generateLSTToken",
      "op": "callsub generateLSTToken",
      "stack_out": []
    },
    "1149": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1150": {
      "op": "return",
      "stack_out": []
    },
    "1151": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1153": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1154": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1155": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1157": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1158": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1160": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "1161": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "1162": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "1163": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "1165": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1166": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1167": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "1168": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "1171": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ]
    },
    "1172": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "1175": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1176": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "1179": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1180": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "1183": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1184": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "1187": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1188": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%1#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "1191": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1192": {
      "op": "txnas Applications",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "1194": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "1197": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1198": {
      "op": "return",
      "stack_out": []
    },
    "1199": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1201": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1202": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1203": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1205": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1206": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1207": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "1210": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1211": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1213": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1216": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1217": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "1220": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1221": {
      "op": "return",
      "stack_out": []
    },
    "1222": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.createApplication",
      "params": {
        "admin#0": "bytes",
        "baseTokenId#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1225": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\""
      ],
      "stack_out": [
        "\"admin_account\""
      ]
    },
    "1226": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ]
    },
    "1228": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1229": {
      "op": "frame_dig -1",
      "defined_out": [
        "baseTokenId#0 (copy)"
      ],
      "stack_out": [
        "baseTokenId#0 (copy)"
      ]
    },
    "1231": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1232": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"base_token_id\""
      ]
    },
    "1233": {
      "op": "swap",
      "stack_out": [
        "\"base_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1234": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1235": {
      "retsub": true,
      "op": "retsub"
    },
    "1236": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.initApplication",
      "params": {
        "mbrTxn#0": "uint64",
        "ltv_bps#0": "uint64",
        "liq_threshold_bps#0": "uint64",
        "interest_bps#0": "uint64",
        "origination_fee_bps#0": "uint64",
        "protocol_interest_fee_bps#0": "uint64",
        "oracle_app_id#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 7 0"
    },
    "1239": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1241": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1242": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1243": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1244": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1245": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1246": {
      "op": "assert",
      "stack_out": []
    },
    "1247": {
      "op": "frame_dig -7",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1249": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1251": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1252": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1254": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1255": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1256": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "1259": {
      "op": "frame_dig -7",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1261": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1263": {
      "op": "pushint 400000 // 400000",
      "defined_out": [
        "400000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "400000"
      ]
    },
    "1267": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1268": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "1271": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1272": {
      "block": "initApplication_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1273": {
      "op": "bytec 15 // \"ltv_bps\"",
      "defined_out": [
        "\"ltv_bps\""
      ],
      "stack_out": [
        "\"ltv_bps\""
      ]
    },
    "1275": {
      "op": "frame_dig -6",
      "defined_out": [
        "\"ltv_bps\"",
        "ltv_bps#0 (copy)"
      ],
      "stack_out": [
        "\"ltv_bps\"",
        "ltv_bps#0 (copy)"
      ]
    },
    "1277": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1278": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\""
      ],
      "stack_out": [
        "\"liq_threshold_bps\""
      ]
    },
    "1280": {
      "op": "frame_dig -5",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "liq_threshold_bps#0 (copy)"
      ],
      "stack_out": [
        "\"liq_threshold_bps\"",
        "liq_threshold_bps#0 (copy)"
      ]
    },
    "1282": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1283": {
      "op": "bytec 16 // \"interest_bps\"",
      "defined_out": [
        "\"interest_bps\""
      ],
      "stack_out": [
        "\"interest_bps\""
      ]
    },
    "1285": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"interest_bps\"",
        "interest_bps#0 (copy)"
      ],
      "stack_out": [
        "\"interest_bps\"",
        "interest_bps#0 (copy)"
      ]
    },
    "1287": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1288": {
      "op": "bytec 17 // \"origination_fee_bps\"",
      "defined_out": [
        "\"origination_fee_bps\""
      ],
      "stack_out": [
        "\"origination_fee_bps\""
      ]
    },
    "1290": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"origination_fee_bps\"",
        "origination_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"origination_fee_bps\"",
        "origination_fee_bps#0 (copy)"
      ]
    },
    "1292": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1293": {
      "op": "bytec 11 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\""
      ],
      "stack_out": [
        "\"accepted_collaterals_count\""
      ]
    },
    "1295": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ]
    },
    "1296": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1297": {
      "op": "bytec 9 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\""
      ],
      "stack_out": [
        "\"fee_pool\""
      ]
    },
    "1299": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"fee_pool\"",
        "0"
      ]
    },
    "1300": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1301": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\""
      ],
      "stack_out": [
        "\"circulating_lst\""
      ]
    },
    "1303": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"circulating_lst\"",
        "0"
      ]
    },
    "1304": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1305": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\""
      ],
      "stack_out": [
        "\"total_deposits\""
      ]
    },
    "1307": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_deposits\"",
        "0"
      ]
    },
    "1308": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1309": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\""
      ],
      "stack_out": [
        "\"active_loan_records\""
      ]
    },
    "1310": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"active_loan_records\"",
        "0"
      ]
    },
    "1311": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1312": {
      "op": "bytec 18 // \"protocol_interest_fee_bps\"",
      "defined_out": [
        "\"protocol_interest_fee_bps\""
      ],
      "stack_out": [
        "\"protocol_interest_fee_bps\""
      ]
    },
    "1314": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"protocol_interest_fee_bps\"",
        "protocol_interest_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"protocol_interest_fee_bps\"",
        "protocol_interest_fee_bps#0 (copy)"
      ]
    },
    "1316": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1317": {
      "op": "bytec 19 // \"oracle_app\"",
      "defined_out": [
        "\"oracle_app\""
      ],
      "stack_out": [
        "\"oracle_app\""
      ]
    },
    "1319": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"oracle_app\"",
        "oracle_app_id#0 (copy)"
      ],
      "stack_out": [
        "\"oracle_app\"",
        "oracle_app_id#0 (copy)"
      ]
    },
    "1321": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1322": {
      "op": "bytec 10 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\""
      ],
      "stack_out": [
        "\"lst_token_id\""
      ]
    },
    "1324": {
      "op": "pushbytes 0x0000000000000063",
      "defined_out": [
        "\"lst_token_id\"",
        "0x0000000000000063"
      ],
      "stack_out": [
        "\"lst_token_id\"",
        "0x0000000000000063"
      ]
    },
    "1334": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1335": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1336": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1337": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1338": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1339": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1340": {
      "op": "bz initApplication_after_if_else@7",
      "stack_out": []
    },
    "1343": {
      "op": "itxn_begin"
    },
    "1344": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1347": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1348": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1349": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "1350": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1351": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "1352": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1354": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1356": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "1358": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1359": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1361": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1363": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1365": {
      "op": "itxn_submit"
    },
    "1366": {
      "block": "initApplication_after_if_else@7",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1367": {
      "block": "initApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1368": {
      "op": "b initApplication_bool_merge@4"
    },
    "1371": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.generateLSTToken",
      "params": {
        "mbrTxn#0": "uint64"
      },
      "block": "generateLSTToken",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1374": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1376": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1377": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1378": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1379": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1380": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1381": {
      "op": "assert",
      "stack_out": []
    },
    "1382": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1384": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1387": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1388": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1389": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1390": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1391": {
      "op": "bz generateLSTToken_bool_false@3",
      "stack_out": []
    },
    "1394": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1396": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1398": {
      "op": "pushint 102000 // 102000",
      "defined_out": [
        "102000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "102000"
      ]
    },
    "1402": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1403": {
      "op": "bz generateLSTToken_bool_false@3",
      "stack_out": []
    },
    "1406": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1407": {
      "block": "generateLSTToken_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1408": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1409": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1410": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1411": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1412": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1413": {
      "op": "itxn_begin"
    },
    "1414": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1416": {
      "op": "dig 1",
      "defined_out": [
        "baseToken#0",
        "baseToken#0 (copy)",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "baseToken#0 (copy)"
      ]
    },
    "1418": {
      "op": "asset_params_get AssetTotal",
      "defined_out": [
        "baseToken#0",
        "check%0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "1420": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0"
      ]
    },
    "1421": {
      "op": "dig 2",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "baseToken#0 (copy)"
      ]
    },
    "1423": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "baseToken#0",
        "check%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "1425": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1426": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1428": {
      "op": "uncover 4",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "baseToken#0"
      ]
    },
    "1430": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "1432": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "value%2#0"
      ]
    },
    "1433": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "value%2#0",
        "\"c\""
      ]
    },
    "1436": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "\"c\"",
        "value%2#0"
      ]
    },
    "1437": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "1438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "0"
      ]
    },
    "1439": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1440": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1441": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "1442": {
      "op": "pushbytes \"c\"",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%3#0",
        "\"c\""
      ]
    },
    "1445": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "\"c\"",
        "maybe_value%3#0"
      ]
    },
    "1446": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "1447": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "1449": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1451": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "0"
      ]
    },
    "1454": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1456": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "value%0#0"
      ]
    },
    "1458": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1460": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "1462": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "1464": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1466": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1468": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1470": {
      "op": "itxn_submit"
    },
    "1471": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "result.CreatedAssetID#0"
      ],
      "stack_out": [
        "result.CreatedAssetID#0"
      ]
    },
    "1473": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1474": {
      "op": "bytec 10 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"lst_token_id\""
      ]
    },
    "1476": {
      "op": "swap",
      "stack_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1477": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1478": {
      "retsub": true,
      "op": "retsub"
    },
    "1479": {
      "block": "generateLSTToken_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1480": {
      "op": "b generateLSTToken_bool_merge@4"
    },
    "1483": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.optInToLST",
      "params": {
        "lstAssetId#0": "uint64",
        "mbrTxn#0": "uint64"
      },
      "block": "optInToLST",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1486": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1488": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1489": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1490": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1491": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1492": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1493": {
      "op": "assert",
      "stack_out": []
    },
    "1494": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1496": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1498": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1499": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1500": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1501": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1502": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1503": {
      "op": "bz optInToLST_bool_false@3",
      "stack_out": []
    },
    "1506": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1508": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1510": {
      "op": "pushint 2000 // 2000",
      "defined_out": [
        "2000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "2000"
      ]
    },
    "1513": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1514": {
      "op": "bz optInToLST_bool_false@3",
      "stack_out": []
    },
    "1517": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1518": {
      "block": "optInToLST_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1519": {
      "op": "frame_dig -2",
      "defined_out": [
        "lstAssetId#0 (copy)"
      ],
      "stack_out": [
        "lstAssetId#0 (copy)"
      ]
    },
    "1521": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1522": {
      "op": "bytec 10 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"lst_token_id\""
      ]
    },
    "1524": {
      "op": "swap",
      "stack_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1525": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1526": {
      "op": "itxn_begin"
    },
    "1527": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1529": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1530": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1532": {
      "op": "frame_dig -2",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "lstAssetId#0 (copy)"
      ]
    },
    "1534": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1536": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "1538": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1539": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1541": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1543": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1545": {
      "op": "itxn_submit"
    },
    "1546": {
      "retsub": true,
      "op": "retsub"
    },
    "1547": {
      "block": "optInToLST_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1548": {
      "op": "b optInToLST_bool_merge@4"
    },
    "1551": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.configureLSTToken",
      "params": {
        "axferTxn#0": "uint64",
        "circulating_lst#0": "uint64"
      },
      "block": "configureLSTToken",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1554": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1556": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1557": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1558": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1559": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1560": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1561": {
      "op": "assert",
      "stack_out": []
    },
    "1562": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1563": {
      "op": "bytec 10 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"lst_token_id\""
      ]
    },
    "1565": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1566": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1567": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1568": {
      "op": "frame_dig -2",
      "defined_out": [
        "axferTxn#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "axferTxn#0 (copy)"
      ]
    },
    "1570": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1572": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1573": {
      "error": "LST token not set",
      "op": "assert // LST token not set",
      "stack_out": []
    },
    "1574": {
      "op": "frame_dig -2",
      "stack_out": [
        "axferTxn#0 (copy)"
      ]
    },
    "1576": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1579": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%5#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1580": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1581": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0"
      ]
    },
    "1582": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1583": {
      "op": "bz configureLSTToken_bool_false@3",
      "stack_out": []
    },
    "1586": {
      "op": "frame_dig -2",
      "stack_out": [
        "axferTxn#0 (copy)"
      ]
    },
    "1588": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1590": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1592": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1593": {
      "op": "bz configureLSTToken_bool_false@3",
      "stack_out": []
    },
    "1596": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1597": {
      "block": "configureLSTToken_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1598": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\""
      ],
      "stack_out": [
        "\"circulating_lst\""
      ]
    },
    "1600": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"circulating_lst\"",
        "circulating_lst#0 (copy)"
      ],
      "stack_out": [
        "\"circulating_lst\"",
        "circulating_lst#0 (copy)"
      ]
    },
    "1602": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1603": {
      "retsub": true,
      "op": "retsub"
    },
    "1604": {
      "block": "configureLSTToken_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1605": {
      "op": "b configureLSTToken_bool_merge@4"
    },
    "1608": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getCirculatingLST",
      "params": {},
      "block": "getCirculatingLST",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1609": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"circulating_lst\""
      ]
    },
    "1611": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1612": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1613": {
      "retsub": true,
      "op": "retsub"
    },
    "1614": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getTotalDeposits",
      "params": {},
      "block": "getTotalDeposits",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1615": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_deposits\""
      ]
    },
    "1617": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1618": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1619": {
      "retsub": true,
      "op": "retsub"
    },
    "1620": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getAcceptedCollateralsCount",
      "params": {},
      "block": "getAcceptedCollateralsCount",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1621": {
      "op": "bytec 11 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1623": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1624": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1625": {
      "retsub": true,
      "op": "retsub"
    },
    "1626": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "params": {
        "tokenId#0": "uint64"
      },
      "block": "getOraclePrice",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1629": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1630": {
      "op": "bytec 19 // \"oracle_app\"",
      "defined_out": [
        "\"oracle_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"oracle_app\""
      ]
    },
    "1632": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "maybe_exists%0#0"
      ]
    },
    "1633": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "oracle#0"
      ]
    },
    "1634": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1635": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "address#0",
        "check%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "check%0#0"
      ]
    },
    "1637": {
      "op": "bury 1",
      "stack_out": [
        "oracle#0",
        "check%0#0"
      ]
    },
    "1639": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "oracle#0"
      ]
    },
    "1640": {
      "op": "itxn_begin"
    },
    "1641": {
      "op": "frame_dig -1",
      "defined_out": [
        "oracle#0",
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "tokenId#0 (copy)"
      ]
    },
    "1643": {
      "op": "itob",
      "defined_out": [
        "oracle#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "oracle#0",
        "val_as_bytes%0#0"
      ]
    },
    "1644": {
      "op": "pushbytes 0xac13e004 // method \"getTokenPrice(uint64)(uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(getTokenPrice(uint64)(uint64,uint64,uint64))",
        "oracle#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "oracle#0",
        "val_as_bytes%0#0",
        "Method(getTokenPrice(uint64)(uint64,uint64,uint64))"
      ]
    },
    "1650": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "oracle#0",
        "val_as_bytes%0#0"
      ]
    },
    "1652": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "oracle#0"
      ]
    },
    "1654": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1656": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1658": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1660": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1661": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1663": {
      "op": "itxn_submit"
    },
    "1664": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1666": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1667": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1670": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1672": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1673": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1674": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "12"
      ]
    },
    "1676": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1677": {
      "retsub": true,
      "op": "retsub"
    },
    "1678": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "params": {
        "collateralTokenId#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "updateCollateralTotal",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1681": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\""
      ],
      "stack_out": [
        "\"accepted_collaterals\""
      ]
    },
    "1683": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "\"accepted_collaterals\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1685": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1686": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1687": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "maybe_exists%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "maybe_exists%0#0"
      ]
    },
    "1688": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0",
        "collateral#0"
      ]
    },
    "1689": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1690": {
      "op": "uncover 2",
      "defined_out": [
        "collateral#0",
        "maybe_exists%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "collateral#0",
        "maybe_exists%0#0"
      ]
    },
    "1692": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "collateral#0"
      ]
    },
    "1693": {
      "op": "dup",
      "defined_out": [
        "collateral#0",
        "collateral#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1694": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "collateral#0",
        "tmp%1#0"
      ]
    },
    "1697": {
      "op": "swap",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0"
      ]
    },
    "1698": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0",
        "0"
      ]
    },
    "1699": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1700": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1702": {
      "op": "btoi",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1703": {
      "op": "==",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%4#0"
      ]
    },
    "1704": {
      "op": "bz updateCollateralTotal_after_if_else@2",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0"
      ]
    },
    "1707": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0"
      ]
    },
    "1709": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1710": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "collateral#0",
        "collateral#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0",
        "collateral#0 (copy)",
        "16"
      ]
    },
    "1712": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0",
        "tmp%6#0"
      ]
    },
    "1713": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0",
        "tmp%6#0",
        "amount#0 (copy)"
      ]
    },
    "1715": {
      "op": "+",
      "defined_out": [
        "collateral#0",
        "newTotal#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "collateral#0",
        "newTotal#0"
      ]
    },
    "1716": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "newTotal#0",
        "collateral#0"
      ]
    },
    "1717": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateral#0",
        "newTotal#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "newTotal#0",
        "tmp%8#0"
      ]
    },
    "1720": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%8#0",
        "newTotal#0"
      ]
    },
    "1721": {
      "op": "itob",
      "defined_out": [
        "collateral#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "1722": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "tmp%1#0"
      ]
    },
    "1724": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ]
    },
    "1726": {
      "op": "concat",
      "defined_out": [
        "collateral#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1727": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "1728": {
      "op": "concat",
      "defined_out": [
        "collateral#0",
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1729": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "encoded_tuple_buffer%5#0",
        "tmp%0#0"
      ]
    },
    "1731": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0",
        "tmp%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1732": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0"
      ]
    },
    "1733": {
      "block": "updateCollateralTotal_after_if_else@2",
      "stack_in": [
        "tmp%0#0",
        "collateral#0",
        "tmp%1#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1734": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.addNewCollateralType",
      "params": {
        "collateralTokenId#0": "bytes",
        "mbrTxn#0": "uint64"
      },
      "block": "addNewCollateralType",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1737": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1738": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1739": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1740": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1741": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1742": {
      "op": "txn Sender",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "1744": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1745": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1746": {
      "op": "app_global_get_ex",
      "defined_out": [
        "baseToken#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1747": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "1748": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%1#0"
      ]
    },
    "1749": {
      "op": "assert",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1750": {
      "op": "frame_dig -2",
      "defined_out": [
        "baseToken#0",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1752": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "1753": {
      "op": "dup"
    },
    "1754": {
      "op": "uncover 2",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0",
        "baseToken#0"
      ]
    },
    "1756": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1757": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1758": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"accepted_collaterals\""
      ]
    },
    "1760": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1762": {
      "op": "concat",
      "defined_out": [
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2"
      ]
    },
    "1763": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1764": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1765": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_exists%0#0"
      ]
    },
    "1767": {
      "op": "!",
      "defined_out": [
        "tmp%0#2",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%5#0"
      ]
    },
    "1768": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2"
      ]
    },
    "1769": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "mbrTxn#0 (copy)"
      ]
    },
    "1771": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#2",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%6#0"
      ]
    },
    "1773": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%6#0",
        "0"
      ]
    },
    "1774": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%6#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1775": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#2",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%6#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1776": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%6#0",
        "maybe_value%2#0"
      ]
    },
    "1777": {
      "op": "==",
      "defined_out": [
        "tmp%0#2",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%7#0"
      ]
    },
    "1778": {
      "op": "bz addNewCollateralType_bool_false@3",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2"
      ]
    },
    "1781": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "mbrTxn#0 (copy)"
      ]
    },
    "1783": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#2",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%8#0"
      ]
    },
    "1785": {
      "op": "pushint 101000 // 101000",
      "defined_out": [
        "101000",
        "tmp%0#2",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%8#0",
        "101000"
      ]
    },
    "1789": {
      "op": "==",
      "defined_out": [
        "tmp%0#2",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%9#0"
      ]
    },
    "1790": {
      "op": "bz addNewCollateralType_bool_false@3",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2"
      ]
    },
    "1793": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "and_result%0#0"
      ]
    },
    "1794": {
      "block": "addNewCollateralType_bool_merge@4",
      "stack_in": [
        "tmp%2#0",
        "tmp%0#2",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2"
      ]
    },
    "1795": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "0"
      ]
    },
    "1796": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "0",
        "\"base_token_id\""
      ]
    },
    "1797": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1798": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_value%3#0"
      ]
    },
    "1799": {
      "op": "frame_dig -2",
      "defined_out": [
        "collateralTokenId#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_value%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1801": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "collateralTokenId#0 (copy)",
        "maybe_value%3#0"
      ]
    },
    "1802": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1803": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "1813": {
      "op": "concat",
      "defined_out": [
        "newAcceptedCollateral#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "newAcceptedCollateral#0"
      ]
    },
    "1814": {
      "op": "frame_dig 1",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "newAcceptedCollateral#0",
        "tmp%0#2"
      ]
    },
    "1816": {
      "op": "dup"
    },
    "1817": {
      "op": "uncover 2",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "tmp%0#2 (copy)",
        "newAcceptedCollateral#0"
      ]
    },
    "1819": {
      "op": "box_put",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1820": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "0"
      ]
    },
    "1821": {
      "op": "bytec 11 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1823": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1824": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "maybe_value%4#0"
      ]
    },
    "1825": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%4#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "maybe_value%4#0",
        "1"
      ]
    },
    "1826": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "new_state_value%0#0"
      ]
    },
    "1827": {
      "op": "bytec 11 // \"accepted_collaterals_count\"",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "new_state_value%0#0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1829": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "\"accepted_collaterals_count\"",
        "new_state_value%0#0"
      ]
    },
    "1830": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1831": {
      "op": "itxn_begin"
    },
    "1832": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1834": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1836": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1838": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%2#0"
      ]
    },
    "1840": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1842": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1844": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1846": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "4"
      ]
    },
    "1847": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1849": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "1000"
      ]
    },
    "1851": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1853": {
      "op": "itxn_submit"
    },
    "1854": {
      "op": "pushbytes \"last_added_collateral\"",
      "defined_out": [
        "\"last_added_collateral\"",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "\"last_added_collateral\""
      ]
    },
    "1877": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2",
        "\"last_added_collateral\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1879": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "tmp%0#2"
      ]
    },
    "1880": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1881": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "maybe_exists%0#0"
      ]
    },
    "1883": {
      "error": "unsupported collateral",
      "op": "assert // unsupported collateral",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2"
      ]
    },
    "1884": {
      "retsub": true,
      "op": "retsub"
    },
    "1885": {
      "block": "addNewCollateralType_bool_false@3",
      "stack_in": [
        "tmp%2#0",
        "tmp%0#2"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#2",
        "and_result%0#0"
      ]
    },
    "1886": {
      "op": "b addNewCollateralType_bool_merge@4"
    },
    "1889": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.depositASA",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64",
        "mbrTxn#0": "uint64"
      },
      "block": "depositASA",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1892": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1893": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1894": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1895": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1896": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1897": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1899": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "1901": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1903": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "1904": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1907": {
      "op": "frame_dig -3",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1909": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "1911": {
      "op": "frame_dig 0",
      "stack_out": [
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "1913": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "1914": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1917": {
      "op": "frame_dig -3",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1919": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "1921": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "1923": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "1924": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1927": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "1928": {
      "block": "depositASA_bool_merge@5",
      "stack_in": [
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1929": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "mbrTxn#0 (copy)"
      ]
    },
    "1931": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0"
      ]
    },
    "1933": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "1000"
      ]
    },
    "1935": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%8#0"
      ]
    },
    "1936": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1937": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "1938": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1939": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1940": {
      "op": "bury 1",
      "stack_out": [
        "baseToken#0",
        "maybe_exists%1#0"
      ]
    },
    "1942": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1943": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "1944": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "1946": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1947": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%2#0"
      ]
    },
    "1948": {
      "op": "bnz depositASA_else_body@7",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1951": {
      "op": "frame_dig -2",
      "defined_out": [
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1953": {
      "block": "depositASA_after_if_else@8",
      "stack_in": [
        "baseToken#0",
        "lstDue#2"
      ],
      "op": "itxn_begin"
    },
    "1954": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1956": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1957": {
      "op": "bytec 10 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"lst_token_id\""
      ]
    },
    "1959": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1960": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "1961": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1962": {
      "op": "dig 2",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lstDue#2",
        "lstDue#2 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lstDue#2 (copy)"
      ]
    },
    "1964": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1966": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1968": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1970": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "4"
      ]
    },
    "1971": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1973": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "1000"
      ]
    },
    "1975": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1977": {
      "op": "itxn_submit"
    },
    "1978": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0"
      ]
    },
    "1979": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0",
        "\"circulating_lst\""
      ]
    },
    "1981": {
      "op": "app_global_get_ex",
      "defined_out": [
        "lstDue#2",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1982": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "maybe_value%4#0"
      ]
    },
    "1983": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%0#0"
      ]
    },
    "1984": {
      "op": "bytec 6 // \"circulating_lst\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%0#0",
        "\"circulating_lst\""
      ]
    },
    "1986": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"circulating_lst\"",
        "new_state_value%0#0"
      ]
    },
    "1987": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1988": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "1989": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "1991": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1992": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%5#0"
      ]
    },
    "1993": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%5#0",
        "amount#0 (copy)"
      ]
    },
    "1995": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0"
      ]
    },
    "1996": {
      "op": "bytec 5 // \"total_deposits\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0",
        "\"total_deposits\""
      ]
    },
    "1998": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"total_deposits\"",
        "new_state_value%1#0"
      ]
    },
    "1999": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2000": {
      "retsub": true,
      "op": "retsub"
    },
    "2001": {
      "block": "depositASA_else_body@7",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "2002": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2004": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2005": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1"
      ]
    },
    "2006": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1",
        "10000"
      ]
    },
    "2007": {
      "op": "mulw",
      "defined_out": [
        "highBits1#0",
        "lowBits1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0"
      ]
    },
    "2008": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "0"
      ]
    },
    "2009": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "highBits1#0",
        "lowBits1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2011": {
      "op": "app_global_get_ex",
      "defined_out": [
        "highBits1#0",
        "lowBits1#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2012": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "maybe_value%1#1"
      ]
    },
    "2013": {
      "op": "divw",
      "defined_out": [
        "lstRatio#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstRatio#0"
      ]
    },
    "2014": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "lstRatio#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstRatio#0",
        "amount#0 (copy)"
      ]
    },
    "2016": {
      "op": "mulw",
      "defined_out": [
        "highBits2#0",
        "lowBits2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits2#0",
        "lowBits2#0"
      ]
    },
    "2017": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "baseToken#0",
        "highBits2#0",
        "lowBits2#0",
        "10000"
      ]
    },
    "2018": {
      "op": "divw",
      "defined_out": [
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "2019": {
      "op": "b depositASA_after_if_else@8"
    },
    "2022": {
      "block": "depositASA_bool_false@4",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2023": {
      "op": "b depositASA_bool_merge@5"
    },
    "2026": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawDeposit",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64",
        "lstAppId#0": "uint64",
        "mbrTxn#0": "uint64"
      },
      "block": "withdrawDeposit",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2029": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2030": {
      "op": "bytec 10 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"lst_token_id\""
      ]
    },
    "2032": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2033": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2034": {
      "op": "btoi",
      "defined_out": [
        "lstAsset#0"
      ],
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2035": {
      "op": "frame_dig -4",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "lstAsset#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2037": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "lstAsset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%0#0"
      ]
    },
    "2039": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "lstAsset#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2041": {
      "op": "==",
      "defined_out": [
        "lstAsset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%2#0"
      ]
    },
    "2042": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2045": {
      "op": "frame_dig -4",
      "stack_out": [
        "lstAsset#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2047": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "lstAsset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%3#0"
      ]
    },
    "2049": {
      "op": "frame_dig 0",
      "stack_out": [
        "lstAsset#0",
        "tmp%3#0",
        "lstAsset#0"
      ]
    },
    "2051": {
      "op": "==",
      "defined_out": [
        "lstAsset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%4#0"
      ]
    },
    "2052": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2055": {
      "op": "frame_dig -4",
      "stack_out": [
        "lstAsset#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2057": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "lstAsset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%5#0"
      ]
    },
    "2059": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "lstAsset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "2061": {
      "op": "==",
      "defined_out": [
        "lstAsset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%6#0"
      ]
    },
    "2062": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2065": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "lstAsset#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "and_result%0#0"
      ]
    },
    "2066": {
      "block": "withdrawDeposit_bool_merge@5",
      "stack_in": [
        "lstAsset#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2067": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "lstAsset#0",
        "mbrTxn#0 (copy)"
      ]
    },
    "2069": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%7#0"
      ]
    },
    "2071": {
      "op": "pushint 3000 // 3000",
      "defined_out": [
        "3000",
        "tmp%7#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%7#0",
        "3000"
      ]
    },
    "2074": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%8#0"
      ]
    },
    "2075": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2076": {
      "op": "frame_dig -2",
      "defined_out": [
        "lstAppId#0 (copy)"
      ],
      "stack_out": [
        "lstAsset#0",
        "lstAppId#0 (copy)"
      ]
    },
    "2078": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "lstAppId#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "lstAppId#0 (copy)",
        "tmp%9#0"
      ]
    },
    "2080": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%10#0"
      ]
    },
    "2081": {
      "op": "bz withdrawDeposit_else_body@7",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2084": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "lstAsset#0",
        "0"
      ]
    },
    "2085": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "lstAsset#0",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2087": {
      "op": "app_global_get_ex",
      "defined_out": [
        "circulatingExternalLST#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "maybe_exists%0#0"
      ]
    },
    "2088": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0"
      ]
    },
    "2089": {
      "op": "intc_0 // 0",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "0"
      ]
    },
    "2090": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2092": {
      "op": "app_global_get_ex",
      "defined_out": [
        "circulatingExternalLST#0",
        "maybe_exists%1#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "maybe_exists%1#0"
      ]
    },
    "2093": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "2094": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "amount#0 (copy)"
      ]
    },
    "2096": {
      "op": "mulw",
      "defined_out": [
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ]
    },
    "2097": {
      "op": "uncover 2",
      "stack_out": [
        "lstAsset#0",
        "hi#0",
        "lo#0",
        "circulatingExternalLST#0"
      ]
    },
    "2099": {
      "op": "divw",
      "defined_out": [
        "asaDue#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2100": {
      "block": "withdrawDeposit_after_if_else@8",
      "stack_in": [
        "lstAsset#0",
        "asaDue#1"
      ],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%11#0"
      ]
    },
    "2102": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%11#0",
        "0"
      ]
    },
    "2103": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%11#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2104": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%11#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2105": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%11#0",
        "maybe_value%1#0"
      ]
    },
    "2106": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2107": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2109": {
      "op": "pop",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%13#0"
      ]
    },
    "2110": {
      "op": "dig 1",
      "defined_out": [
        "asaDue#1",
        "asaDue#1 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%13#0",
        "asaDue#1 (copy)"
      ]
    },
    "2112": {
      "op": ">=",
      "defined_out": [
        "asaDue#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "tmp%15#0"
      ]
    },
    "2113": {
      "op": "assert",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2114": {
      "op": "itxn_begin"
    },
    "2115": {
      "op": "txn Sender",
      "defined_out": [
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2118": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2119": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2120": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "2121": {
      "op": "btoi",
      "defined_out": [
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2122": {
      "op": "dig 2",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "asaDue#1 (copy)"
      ]
    },
    "2124": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2126": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2128": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2130": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "asaDue#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "4"
      ]
    },
    "2131": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2133": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "asaDue#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "1000"
      ]
    },
    "2135": {
      "op": "itxn_field Fee",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2137": {
      "op": "itxn_submit"
    },
    "2138": {
      "op": "intc_0 // 0",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "0"
      ]
    },
    "2139": {
      "op": "bytec 6 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0",
        "asaDue#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2141": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#1",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2142": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "maybe_value%3#0"
      ]
    },
    "2143": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "asaDue#1",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "maybe_value%3#0",
        "amount#0 (copy)"
      ]
    },
    "2145": {
      "op": "-",
      "defined_out": [
        "asaDue#1",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "new_state_value%0#0"
      ]
    },
    "2146": {
      "op": "bytec 6 // \"circulating_lst\"",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "new_state_value%0#0",
        "\"circulating_lst\""
      ]
    },
    "2148": {
      "op": "swap",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "\"circulating_lst\"",
        "new_state_value%0#0"
      ]
    },
    "2149": {
      "op": "app_global_put",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2150": {
      "op": "intc_0 // 0",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "0"
      ]
    },
    "2151": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "asaDue#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "0",
        "\"total_deposits\""
      ]
    },
    "2153": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#1",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2154": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "lstAsset#0",
        "asaDue#1",
        "maybe_value%4#0"
      ]
    },
    "2155": {
      "op": "swap",
      "stack_out": [
        "lstAsset#0",
        "maybe_value%4#0",
        "asaDue#1"
      ]
    },
    "2156": {
      "op": "-",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "new_state_value%1#0"
      ]
    },
    "2157": {
      "op": "bytec 5 // \"total_deposits\"",
      "stack_out": [
        "lstAsset#0",
        "new_state_value%1#0",
        "\"total_deposits\""
      ]
    },
    "2159": {
      "op": "swap",
      "stack_out": [
        "lstAsset#0",
        "\"total_deposits\"",
        "new_state_value%1#0"
      ]
    },
    "2160": {
      "op": "app_global_put",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2161": {
      "retsub": true,
      "op": "retsub"
    },
    "2162": {
      "block": "withdrawDeposit_else_body@7",
      "stack_in": [
        "lstAsset#0"
      ],
      "op": "itxn_begin"
    },
    "2163": {
      "op": "bytec 12 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(getCirculatingLST()uint64)"
      ],
      "stack_out": [
        "lstAsset#0",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "2165": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2167": {
      "op": "frame_dig -2",
      "defined_out": [
        "lstAppId#0 (copy)"
      ],
      "stack_out": [
        "lstAsset#0",
        "lstAppId#0 (copy)"
      ]
    },
    "2169": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2171": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "lstAsset#0",
        "appl"
      ]
    },
    "2173": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2175": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "lstAsset#0",
        "1000"
      ]
    },
    "2177": {
      "op": "itxn_field Fee",
      "stack_out": [
        "lstAsset#0"
      ]
    },
    "2179": {
      "op": "itxn_submit"
    },
    "2180": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "awst_tmp%0#0"
      ]
    },
    "2182": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "lstAsset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2183": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "awst_tmp%0#0",
        "tmp%0#1"
      ]
    },
    "2186": {
      "op": "swap",
      "stack_out": [
        "lstAsset#0",
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2187": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "2190": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%0#1",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2192": {
      "op": "==",
      "defined_out": [
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "tmp%0#1",
        "tmp%2#0"
      ]
    },
    "2193": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "lstAsset#0",
        "tmp%0#1"
      ]
    },
    "2194": {
      "op": "btoi",
      "defined_out": [
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0"
      ]
    },
    "2195": {
      "op": "itxn_begin"
    },
    "2196": {
      "op": "bytec 13 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(getTotalDeposits()uint64)",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "2198": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0"
      ]
    },
    "2200": {
      "op": "frame_dig -2",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "lstAppId#0 (copy)"
      ]
    },
    "2202": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0"
      ]
    },
    "2204": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "appl"
      ]
    },
    "2206": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0"
      ]
    },
    "2208": {
      "op": "intc 4 // 1000",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "1000"
      ]
    },
    "2210": {
      "op": "itxn_field Fee",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0"
      ]
    },
    "2212": {
      "op": "itxn_submit"
    },
    "2213": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0"
      ]
    },
    "2215": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2216": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "tmp%4#1"
      ]
    },
    "2219": {
      "op": "swap",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "awst_tmp%1#0"
      ]
    },
    "2220": {
      "op": "extract 0 4",
      "defined_out": [
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "2223": {
      "op": "bytec 4 // 0x151f7c75",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "2225": {
      "op": "==",
      "defined_out": [
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%6#0"
      ]
    },
    "2226": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "tmp%4#1"
      ]
    },
    "2227": {
      "op": "btoi",
      "defined_out": [
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "2228": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount#0 (copy)",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "amount#0 (copy)"
      ]
    },
    "2230": {
      "op": "mulw",
      "defined_out": [
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ]
    },
    "2231": {
      "op": "uncover 2",
      "stack_out": [
        "lstAsset#0",
        "hi#0",
        "lo#0",
        "circulatingExternalLST#0"
      ]
    },
    "2233": {
      "op": "divw",
      "defined_out": [
        "asaDue#1"
      ],
      "stack_out": [
        "lstAsset#0",
        "asaDue#1"
      ]
    },
    "2234": {
      "op": "b withdrawDeposit_after_if_else@8"
    },
    "2237": {
      "block": "withdrawDeposit_bool_false@4",
      "stack_in": [
        "lstAsset#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "lstAsset#0",
        "and_result%0#0"
      ]
    },
    "2238": {
      "op": "b withdrawDeposit_bool_merge@5"
    },
    "2241": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.borrow",
      "params": {
        "assetTransferTxn#0": "uint64",
        "requestedLoanAmount#0": "uint64",
        "lstApp#0": "uint64",
        "collateralTokenId#0": "bytes",
        "arc19MetadataStr#0": "bytes",
        "mbrTxn#0": "uint64"
      },
      "block": "borrow",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "2244": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2245": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"loan_record\"",
        "tmp%0#0"
      ]
    },
    "2247": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2248": {
      "op": "box_len",
      "defined_out": [
        "hasLoan#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "hasLoan#0"
      ]
    },
    "2249": {
      "op": "bury 1",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2251": {
      "op": "frame_dig -1",
      "defined_out": [
        "hasLoan#0",
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "hasLoan#0",
        "mbrTxn#0 (copy)"
      ]
    },
    "2253": {
      "op": "gtxns Amount",
      "defined_out": [
        "hasLoan#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%2#0"
      ]
    },
    "2255": {
      "op": "pushint 4000 // 4000",
      "defined_out": [
        "4000",
        "hasLoan#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%2#0",
        "4000"
      ]
    },
    "2258": {
      "op": "==",
      "defined_out": [
        "hasLoan#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%3#0"
      ]
    },
    "2259": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2260": {
      "op": "frame_dig -6",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2262": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "hasLoan#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%4#0"
      ]
    },
    "2264": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "hasLoan#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2266": {
      "op": "==",
      "defined_out": [
        "hasLoan#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%6#0"
      ]
    },
    "2267": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2268": {
      "op": "frame_dig -6",
      "stack_out": [
        "hasLoan#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2270": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "collateralDeposit#0"
      ]
    },
    "2272": {
      "op": "dup",
      "stack_out": [
        "hasLoan#0",
        "collateralDeposit#0",
        "collateralDeposit#0"
      ]
    },
    "2273": {
      "op": "cover 2",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0"
      ]
    },
    "2275": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "\"accepted_collaterals\""
      ]
    },
    "2277": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2279": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "tmp%0#1"
      ]
    },
    "2280": {
      "op": "box_get",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "maybe_exists%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "maybe_exists%0#1"
      ]
    },
    "2281": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2282": {
      "op": "itxn_begin"
    },
    "2283": {
      "op": "bytec 12 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(getCirculatingLST()uint64)",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "2285": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2287": {
      "op": "frame_dig -4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "lstApp#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "lstApp#0 (copy)"
      ]
    },
    "2289": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2291": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "acceptedCollateral#0",
        "appl",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "appl"
      ]
    },
    "2293": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2295": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "2296": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2298": {
      "op": "itxn_submit"
    },
    "2299": {
      "op": "itxn LastLog",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0"
      ]
    },
    "2301": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2302": {
      "op": "extract 4 0",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "tmp%7#0"
      ]
    },
    "2305": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "awst_tmp%0#0"
      ]
    },
    "2306": {
      "op": "extract 0 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2309": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2311": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2312": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "2313": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2314": {
      "op": "itxn_begin"
    },
    "2315": {
      "op": "bytec 13 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(getTotalDeposits()uint64)",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "2317": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2319": {
      "op": "frame_dig -4",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "lstApp#0 (copy)"
      ]
    },
    "2321": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2323": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "appl"
      ]
    },
    "2325": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "0"
      ]
    },
    "2328": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2330": {
      "op": "itxn_submit"
    },
    "2331": {
      "op": "itxn LastLog",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0"
      ]
    },
    "2333": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2334": {
      "op": "extract 4 0",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2337": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%11#0",
        "awst_tmp%1#0"
      ]
    },
    "2338": {
      "op": "extract 0 4",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2341": {
      "op": "bytec 4 // 0x151f7c75",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "2343": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2344": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%11#0"
      ]
    },
    "2345": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "2346": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "collateralDeposit#0"
      ]
    },
    "2348": {
      "op": "mulw",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hC#0",
        "hasLoan#0",
        "lC#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "hC#0",
        "lC#0"
      ]
    },
    "2349": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "hC#0",
        "lC#0",
        "circulatingExternalLST#0"
      ]
    },
    "2351": {
      "op": "divw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "underlyingCollateral#0"
      ]
    },
    "2352": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "acceptedCollateral#0"
      ]
    },
    "2353": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "2355": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "tmp%16#0"
      ]
    },
    "2356": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "oraclePrice#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "oraclePrice#0"
      ]
    },
    "2359": {
      "op": "mulw",
      "defined_out": [
        "collateralDeposit#0",
        "hU#0",
        "hasLoan#0",
        "lU#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "hU#0",
        "lU#0"
      ]
    },
    "2360": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralDeposit#0",
        "hU#0",
        "hasLoan#0",
        "lU#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "2361": {
      "op": "divw",
      "defined_out": [
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0"
      ]
    },
    "2362": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "0"
      ]
    },
    "2363": {
      "op": "bytec 15 // \"ltv_bps\"",
      "defined_out": [
        "\"ltv_bps\"",
        "0",
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "0",
        "\"ltv_bps\""
      ]
    },
    "2365": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2366": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "maybe_value%1#0"
      ]
    },
    "2367": {
      "op": "*",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%17#0"
      ]
    },
    "2368": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%17#0",
        "10000"
      ]
    },
    "2369": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ]
    },
    "2370": {
      "op": "swap",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0"
      ]
    },
    "2371": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "0"
      ]
    },
    "2372": {
      "op": "bytec 17 // \"origination_fee_bps\"",
      "defined_out": [
        "\"origination_fee_bps\"",
        "0",
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "0",
        "\"origination_fee_bps\""
      ]
    },
    "2374": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2375": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0"
      ]
    },
    "2376": {
      "op": "frame_dig -5",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_value%2#0",
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2378": {
      "op": "*",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "tmp%18#0"
      ]
    },
    "2379": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "tmp%18#0",
        "10000"
      ]
    },
    "2380": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0"
      ]
    },
    "2381": {
      "op": "frame_dig -5",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2383": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "fee#0",
        "fee#0 (copy)",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "requestedLoanAmount#0 (copy)",
        "fee#0 (copy)"
      ]
    },
    "2385": {
      "op": "-",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "disbursement#0"
      ]
    },
    "2386": {
      "op": "dup",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "disbursement#0",
        "disbursement#0 (copy)"
      ]
    },
    "2387": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "disbursement#0"
      ]
    },
    "2389": {
      "op": "cover 4",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0"
      ]
    },
    "2391": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "0"
      ]
    },
    "2392": {
      "op": "bytec 9 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "2394": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2395": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "maybe_value%3#0"
      ]
    },
    "2396": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "new_state_value%0#0"
      ]
    },
    "2397": {
      "op": "bytec 9 // \"fee_pool\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "new_state_value%0#0",
        "\"fee_pool\""
      ]
    },
    "2399": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "\"fee_pool\"",
        "new_state_value%0#0"
      ]
    },
    "2400": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0"
      ]
    },
    "2401": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "0"
      ]
    },
    "2402": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2403": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2404": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "maybe_value%4#0"
      ]
    },
    "2405": {
      "op": "btoi",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "tmp%19#0"
      ]
    },
    "2406": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "collateralDeposit#0",
        "decExists#0",
        "decimals#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0",
        "decExists#0"
      ]
    },
    "2408": {
      "op": "pop",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0"
      ]
    },
    "2409": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "collateralDeposit#0",
        "decimals#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0",
        "10"
      ]
    },
    "2411": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "10",
        "decimals#0"
      ]
    },
    "2412": {
      "op": "exp",
      "defined_out": [
        "assetScale#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "assetScale#0"
      ]
    },
    "2413": {
      "op": "mulw",
      "defined_out": [
        "aH#0",
        "aL#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "aH#0",
        "aL#0"
      ]
    },
    "2414": {
      "op": "intc 5 // 4294967296",
      "defined_out": [
        "4294967296",
        "aH#0",
        "aL#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "aH#0",
        "aL#0",
        "4294967296"
      ]
    },
    "2416": {
      "op": "divw",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "interim#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "interim#0"
      ]
    },
    "2417": {
      "op": "intc 5 // 4294967296",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "interim#0",
        "4294967296"
      ]
    },
    "2419": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "scaledDown#0"
      ]
    },
    "2420": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "hasLoan#0"
      ]
    },
    "2422": {
      "op": "bz borrow_else_body@4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0"
      ]
    },
    "2425": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "scaledDown#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "tmp%20#0"
      ]
    },
    "2427": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2430": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#1",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#1"
      ]
    },
    "2433": {
      "op": "pop",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2434": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "\"loan_record\""
      ]
    },
    "2435": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "\"loan_record\"",
        "tmp%21#0"
      ]
    },
    "2437": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "tmp%22#0"
      ]
    },
    "2438": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "tmp%22#0",
        "old#0 (copy)"
      ]
    },
    "2440": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2441": {
      "op": "dup",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)"
      ]
    },
    "2442": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "56"
      ]
    },
    "2444": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2445": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)"
      ]
    },
    "2446": {
      "op": "frame_dig -5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2448": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalRequested#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "totalRequested#0"
      ]
    },
    "2449": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "totalRequested#0",
        "maxBorrowUSD#0"
      ]
    },
    "2451": {
      "op": "<=",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%25#0"
      ]
    },
    "2452": {
      "error": "exceeds LTV limit with existing debt",
      "op": "assert // exceeds LTV limit with existing debt",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2453": {
      "op": "dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)"
      ]
    },
    "2455": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "old#0 (copy)",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)",
        "40"
      ]
    },
    "2457": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0"
      ]
    },
    "2458": {
      "op": "frame_dig 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0",
        "collateralDeposit#0"
      ]
    },
    "2460": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "collateralDeposit#0 (copy)",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0",
        "collateralDeposit#0 (copy)",
        "collateralDeposit#0 (copy)"
      ]
    },
    "2461": {
      "op": "cover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0",
        "collateralDeposit#0 (copy)"
      ]
    },
    "2463": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "oldDebt#0",
        "totalCollateral#0"
      ]
    },
    "2464": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0"
      ]
    },
    "2465": {
      "op": "frame_dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0",
        "disbursement#0"
      ]
    },
    "2467": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "disbursement#0 (copy)",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0",
        "disbursement#0 (copy)",
        "disbursement#0 (copy)"
      ]
    },
    "2468": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "oldDebt#0",
        "disbursement#0 (copy)"
      ]
    },
    "2470": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0"
      ]
    },
    "2471": {
      "op": "dig 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "old#0 (copy)"
      ]
    },
    "2473": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "old#0 (copy)",
        "48"
      ]
    },
    "2475": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "tmp%30#0"
      ]
    },
    "2476": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%30#0",
        "disbursement#0"
      ]
    },
    "2478": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0"
      ]
    },
    "2479": {
      "op": "dig 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0 (copy)"
      ]
    },
    "2481": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0"
      ]
    },
    "2484": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "2486": {
      "op": "dig 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "old#0 (copy)"
      ]
    },
    "2488": {
      "error": "Index access is out of bounds",
      "op": "extract 72 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "2491": {
      "op": "dig 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "old#0 (copy)"
      ]
    },
    "2493": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "old#0 (copy)",
        "72"
      ]
    },
    "2495": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "2496": {
      "op": "dig 5",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "newDebt#0 (copy)"
      ]
    },
    "2498": {
      "op": "dig 5",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)"
      ]
    },
    "2500": {
      "op": "dig 5",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%31#0 (copy)"
      ]
    },
    "2502": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%34#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%31#0 (copy)",
        "tmp%32#0"
      ]
    },
    "2504": {
      "op": "dig 9",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "totalCollateral#0",
        "totalCollateral#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%34#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%31#0 (copy)",
        "tmp%32#0",
        "totalCollateral#0 (copy)"
      ]
    },
    "2506": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc19MetadataStr#0 (copy)",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "totalCollateral#0",
        "totalCollateral#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%34#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%31#0 (copy)",
        "tmp%32#0",
        "totalCollateral#0 (copy)",
        "arc19MetadataStr#0 (copy)"
      ]
    },
    "2508": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "newDebt#0 (copy)",
        "newTotalDisb#0 (copy)",
        "tmp%31#0 (copy)",
        "tmp%32#0",
        "totalCollateral#0 (copy)",
        "arc19MetadataStr#0 (copy)",
        "tmp%34#0"
      ]
    },
    "2510": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0"
      ]
    },
    "2513": {
      "op": "dig 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "old#0 (copy)"
      ]
    },
    "2515": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "2518": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "totalCollateral#0"
      ]
    },
    "2520": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "newTotalDisb#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0"
      ]
    },
    "2521": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "newTotalDisb#0"
      ]
    },
    "2523": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2524": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "newDebt#0"
      ]
    },
    "2526": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2527": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "old#0"
      ]
    },
    "2529": {
      "error": "Index access is out of bounds",
      "op": "extract 64 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "tmp%37#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0"
      ]
    },
    "2532": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "tmp%37#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "to_encode%0#0"
      ]
    },
    "2534": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "tmp%37#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "tmp%33#0",
        "tmp%35#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0"
      ]
    },
    "2535": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "tmp%33#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "tmp%35#0"
      ]
    },
    "2537": {
      "op": "uncover 7",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "tmp%35#0",
        "tmp%31#0"
      ]
    },
    "2539": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%2#0",
        "scaledDown#0",
        "tmp%33#0",
        "tmp%37#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2540": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2542": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%3#0",
        "scaledDown#0",
        "tmp%33#0",
        "tmp%37#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2543": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "2545": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%4#0",
        "scaledDown#0",
        "tmp%33#0",
        "tmp%37#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%2#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2546": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "2548": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%5#0",
        "scaledDown#0",
        "tmp%33#0",
        "tmp%37#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "tmp%37#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2549": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%5#0",
        "tmp%37#0"
      ]
    },
    "2551": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%6#0",
        "scaledDown#0",
        "tmp%33#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%33#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2552": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%6#0",
        "tmp%33#0"
      ]
    },
    "2554": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%7#0",
        "scaledDown#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2555": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%3#0"
      ]
    },
    "2556": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2557": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "\"loan_record\""
      ]
    },
    "2558": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "\"loan_record\"",
        "tmp%39#0"
      ]
    },
    "2560": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "tmp%40#0"
      ]
    },
    "2561": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%40#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2562": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0"
      ]
    },
    "2563": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "0"
      ]
    },
    "2564": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "2565": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2566": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%5#0"
      ]
    },
    "2567": {
      "op": "intc_1 // 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "2568": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "new_state_value%1#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "new_state_value%1#0"
      ]
    },
    "2569": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "new_state_value%1#0",
        "\"active_loan_records\""
      ]
    },
    "2570": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "\"active_loan_records\"",
        "new_state_value%1#0"
      ]
    },
    "2571": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0"
      ]
    },
    "2572": {
      "op": "frame_dig -3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2574": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralTokenId#0 (copy)",
        "collateralDeposit#0"
      ]
    },
    "2575": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2578": {
      "block": "borrow_after_if_else@5",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0"
      ]
    },
    "2579": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2580": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2581": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%6#0"
      ]
    },
    "2582": {
      "op": "btoi",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%43#0"
      ]
    },
    "2583": {
      "op": "bnz borrow_else_body@8",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2586": {
      "op": "itxn_begin"
    },
    "2587": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_Receiver_idx_0#0"
      ]
    },
    "2589": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%2%%param_Receiver_idx_0#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_Receiver_idx_0#0",
        "scaledDown#0"
      ]
    },
    "2591": {
      "op": "itxn_field Amount",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%2%%param_Receiver_idx_0#0"
      ]
    },
    "2593": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2595": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "1"
      ]
    },
    "2596": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2598": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "1000"
      ]
    },
    "2600": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2602": {
      "op": "itxn_submit"
    },
    "2603": {
      "retsub": true,
      "op": "retsub"
    },
    "2604": {
      "block": "borrow_else_body@8",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "op": "itxn_begin"
    },
    "2605": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2607": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2608": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2609": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2610": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "maybe_value%7#0"
      ]
    },
    "2611": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%3%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%3%%param_XferAsset_idx_0#0"
      ]
    },
    "2612": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%3%%param_XferAsset_idx_0#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%3%%param_XferAsset_idx_0#0",
        "scaledDown#0"
      ]
    },
    "2614": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%3%%param_XferAsset_idx_0#0"
      ]
    },
    "2616": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2618": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2620": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "4"
      ]
    },
    "2621": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2623": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "1000"
      ]
    },
    "2625": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2627": {
      "op": "itxn_submit"
    },
    "2628": {
      "retsub": true,
      "op": "retsub"
    },
    "2629": {
      "block": "borrow_else_body@4",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0"
      ],
      "op": "frame_dig -5",
      "defined_out": [
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2631": {
      "op": ">=",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%41#0"
      ]
    },
    "2632": {
      "error": "exceeds LTV limit",
      "op": "assert // exceeds LTV limit",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2633": {
      "op": "txn Sender",
      "defined_out": [
        "borrowerAddress#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0"
      ]
    },
    "2635": {
      "op": "itxn_begin"
    },
    "2636": {
      "op": "pushbytes \"r\"",
      "defined_out": [
        "\"r\"",
        "borrowerAddress#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "\"r\""
      ]
    },
    "2639": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"r\"",
        "borrowerAddress#0",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "\"r\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2641": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1"
      ]
    },
    "2642": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ]
    },
    "2643": {
      "op": "pushbytes \"b\"",
      "defined_out": [
        "\"b\"",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%0#1 (copy)",
        "\"b\""
      ]
    },
    "2646": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ]
    },
    "2647": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "0"
      ]
    },
    "2648": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2649": {
      "op": "app_global_get_ex",
      "defined_out": [
        "borrowerAddress#0",
        "maybe_exists%0#1",
        "maybe_value%0#1",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "maybe_value%0#1",
        "maybe_exists%0#1"
      ]
    },
    "2650": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "tmp%1#0",
        "maybe_value%0#1"
      ]
    },
    "2651": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2652": {
      "op": "dig 2",
      "defined_out": [
        "borrowerAddress#0",
        "borrowerAddress#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2654": {
      "op": "bytec 14 // \":\"",
      "defined_out": [
        "\":\"",
        "borrowerAddress#0",
        "borrowerAddress#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "borrowerAddress#0 (copy)",
        "\":\""
      ]
    },
    "2656": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%2#1"
      ]
    },
    "2657": {
      "op": "frame_dig -3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%2#1",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2659": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%3#1"
      ]
    },
    "2660": {
      "op": "bytec 14 // \":\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%3#1",
        "\":\""
      ]
    },
    "2662": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#1"
      ]
    },
    "2663": {
      "op": "frame_dig 2",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#1",
        "scaledDown#0"
      ]
    },
    "2665": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%4#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#1",
        "val_as_bytes%0#0"
      ]
    },
    "2666": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%4#1"
      ]
    },
    "2667": {
      "op": "dig 1",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%4#1",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%4#1",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2669": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%5#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%5#1"
      ]
    },
    "2670": {
      "op": "bytec 14 // \":\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%5#1",
        "\":\""
      ]
    },
    "2672": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%6#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#1"
      ]
    },
    "2673": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%6#1",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#1",
        "to_encode%0#0"
      ]
    },
    "2675": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "tmp%6#1",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#1",
        "val_as_bytes%1#0"
      ]
    },
    "2676": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2677": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2679": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2680": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "2681": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2682": {
      "op": "app_global_get_ex",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "scaledDown#0",
        "tmp%0#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2683": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "tmp%0#1",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#1"
      ]
    },
    "2684": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#1",
        "tmp%0#1"
      ]
    },
    "2686": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#1",
        "maybe_value%1#1"
      ]
    },
    "2687": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2688": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2690": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2691": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "0"
      ]
    },
    "2692": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2694": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2696": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2698": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc19MetadataStr#0 (copy)",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "arc19MetadataStr#0 (copy)"
      ]
    },
    "2700": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2702": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2704": {
      "op": "itxn_field Sender",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2706": {
      "op": "frame_dig 1",
      "defined_out": [
        "borrowerAddress#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0"
      ]
    },
    "2708": {
      "op": "dup",
      "defined_out": [
        "borrowerAddress#0",
        "disbursement#0",
        "disbursement#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0",
        "disbursement#0 (copy)"
      ]
    },
    "2709": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0"
      ]
    },
    "2711": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0",
        "0"
      ]
    },
    "2712": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0"
      ]
    },
    "2714": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2715": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "disbursement#0"
      ]
    },
    "2717": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2718": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2720": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2722": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2724": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "borrowerAddress#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "3"
      ]
    },
    "2726": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2728": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "borrowerAddress#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "1000"
      ]
    },
    "2730": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0"
      ]
    },
    "2732": {
      "op": "itxn_submit"
    },
    "2733": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2735": {
      "op": "frame_dig 0",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "asset.CreatedAssetID#0",
        "collateralDeposit#0"
      ]
    },
    "2737": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "disbursement#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0"
      ]
    },
    "2738": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "disbursement#0"
      ]
    },
    "2740": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "2741": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "2742": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2743": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%2#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "2744": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1"
      ]
    },
    "2745": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "asset.CreatedAssetID#0"
      ]
    },
    "2747": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0"
      ]
    },
    "2748": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "to_encode%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "to_encode%1#0"
      ]
    },
    "2750": {
      "op": "itob",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "2751": {
      "op": "dig 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2753": {
      "op": "frame_dig -3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2755": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2756": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "2758": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2759": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "2761": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%4#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%0#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2762": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2764": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%2#1",
        "scaledDown#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "maybe_value%2#1",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2765": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%2#1"
      ]
    },
    "2767": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%6#0",
        "scaledDown#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2768": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%5#0"
      ]
    },
    "2770": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%7#0",
        "scaledDown#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2771": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%6#0"
      ]
    },
    "2772": {
      "op": "concat",
      "defined_out": [
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "loanRecord#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "loanRecord#0"
      ]
    },
    "2773": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0",
        "collateralDeposit#0",
        "disbursement#0",
        "loanRecord#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "borrowerAddress#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "2774": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "loanRecord#0",
        "\"loan_record\"",
        "borrowerAddress#0"
      ]
    },
    "2776": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "loanRecord#0",
        "scaledDown#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "loanRecord#0",
        "tmp%8#0"
      ]
    },
    "2777": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%8#0",
        "loanRecord#0"
      ]
    },
    "2778": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2779": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0"
      ]
    },
    "2780": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "2781": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2782": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%3#0"
      ]
    },
    "2783": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_value%3#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2784": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "new_state_value%0#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "new_state_value%0#0"
      ]
    },
    "2785": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "2786": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "2787": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2788": {
      "op": "b borrow_after_if_else@5"
    },
    "2791": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "params": {
        "scaledDownDisbursement#0": "uint64",
        "disbursement#0": "uint64",
        "collateralTokenId#0": "bytes",
        "borrowerAddress#0": "bytes",
        "collateralAmount#0": "uint64",
        "arc19MetadataStr#0": "bytes",
        "assetId#0": "uint64"
      },
      "block": "updateLoanRecord",
      "stack_in": [],
      "op": "proto 7 0"
    },
    "2794": {
      "op": "itxn_begin"
    },
    "2795": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2797": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2798": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "assetId#0 (copy)"
      ]
    },
    "2800": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2802": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc19MetadataStr#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "arc19MetadataStr#0 (copy)"
      ]
    },
    "2804": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2806": {
      "op": "itxn_field Sender",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2808": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "2810": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "2812": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2814": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "2816": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2818": {
      "op": "itxn_submit"
    },
    "2819": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "asset.CreatedAssetID#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0"
      ]
    },
    "2821": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralAmount#0 (copy)"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "2823": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ]
    },
    "2824": {
      "op": "frame_dig -6",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "disbursement#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "disbursement#0 (copy)"
      ]
    },
    "2826": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2827": {
      "op": "frame_dig -7",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "scaledDownDisbursement#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "scaledDownDisbursement#0 (copy)"
      ]
    },
    "2829": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2830": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "2831": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2832": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2833": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0"
      ]
    },
    "2834": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2836": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "2837": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "maybe_value%0#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "to_encode%0#0"
      ]
    },
    "2839": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "2840": {
      "op": "frame_dig -4",
      "defined_out": [
        "borrowerAddress#0 (copy)",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2842": {
      "op": "frame_dig -5",
      "defined_out": [
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2844": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2845": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2847": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2848": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "2850": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2851": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "2853": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2854": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%0#0"
      ]
    },
    "2856": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2857": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%3#0"
      ]
    },
    "2859": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2860": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%4#0"
      ]
    },
    "2861": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0"
      ]
    },
    "2862": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "2863": {
      "op": "frame_dig -4",
      "stack_out": [
        "loanRecord#0",
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2865": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "tmp%0#0"
      ]
    },
    "2866": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "loanRecord#0"
      ]
    },
    "2867": {
      "op": "box_put",
      "stack_out": []
    },
    "2868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2869": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"active_loan_records\""
      ]
    },
    "2870": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2871": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2872": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2873": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2874": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "2875": {
      "op": "swap",
      "stack_out": [
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "2876": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2877": {
      "retsub": true,
      "op": "retsub"
    },
    "2878": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.claimLoanRecordASA",
      "params": {
        "debtor#0": "bytes",
        "assetId#0": "uint64"
      },
      "block": "claimLoanRecordASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2881": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2882": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "2884": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2885": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2886": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2887": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2889": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2890": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2892": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "assetId#0 (copy)"
      ]
    },
    "2894": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "assetExists#0"
      ]
    },
    "2896": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "assetExists#0"
      ]
    },
    "2898": {
      "error": "Loan record ASA does not exist",
      "op": "assert // Loan record ASA does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2899": {
      "op": "box_get",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "2900": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "2902": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": []
    },
    "2903": {
      "op": "itxn_begin"
    },
    "2904": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2905": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "2907": {
      "op": "frame_dig -1",
      "stack_out": [
        "assetId#0 (copy)"
      ]
    },
    "2909": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "2911": {
      "op": "frame_dig -2",
      "stack_out": [
        "debtor#0 (copy)"
      ]
    },
    "2913": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "2915": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "2916": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2918": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2919": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2921": {
      "op": "itxn_submit"
    },
    "2922": {
      "op": "itxn_begin"
    },
    "2923": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2925": {
      "op": "frame_dig -2",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "2927": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2929": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2930": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2932": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "assetId#0 (copy)"
      ]
    },
    "2934": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2936": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "2938": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "2939": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2941": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2942": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2944": {
      "op": "itxn_submit"
    },
    "2945": {
      "retsub": true,
      "op": "retsub"
    },
    "2946": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "params": {
        "record#0": "bytes"
      },
      "block": "accrueInterest",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "2949": {
      "op": "global LatestTimestamp"
    },
    "2951": {
      "op": "dup"
    },
    "2952": {
      "op": "frame_dig -1"
    },
    "2954": {
      "op": "pushint 80 // 80",
      "defined_out": [
        "80",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "now#0",
        "record#0 (copy)",
        "80"
      ]
    },
    "2956": {
      "op": "extract_uint64",
      "defined_out": [
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "now#0",
        "last#0"
      ]
    },
    "2957": {
      "op": "dup",
      "stack_out": [
        "now#0",
        "now#0",
        "last#0",
        "last#0"
      ]
    },
    "2958": {
      "op": "cover 2",
      "defined_out": [
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "last#0"
      ]
    },
    "2960": {
      "op": "<=",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%1#0"
      ]
    },
    "2961": {
      "op": "bz accrueInterest_after_if_else@2",
      "stack_out": [
        "now#0",
        "last#0"
      ]
    },
    "2964": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "record#0 (copy)"
      ]
    },
    "2966": {
      "op": "dup",
      "stack_out": [
        "now#0",
        "last#0",
        "record#0 (copy)",
        "record#0 (copy)"
      ]
    },
    "2967": {
      "op": "uncover 3"
    },
    "2969": {
      "op": "uncover 3"
    },
    "2971": {
      "retsub": true,
      "op": "retsub"
    },
    "2972": {
      "block": "accrueInterest_after_if_else@2",
      "stack_in": [
        "now#0",
        "last#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0"
      ]
    },
    "2974": {
      "op": "dup",
      "defined_out": [
        "now#0",
        "now#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "now#0 (copy)"
      ]
    },
    "2975": {
      "op": "frame_dig 1",
      "defined_out": [
        "last#0",
        "now#0",
        "now#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "now#0 (copy)",
        "last#0"
      ]
    },
    "2977": {
      "op": "-",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0"
      ]
    },
    "2978": {
      "op": "frame_dig -1",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "record#0 (copy)"
      ]
    },
    "2980": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "deltaT#0",
        "last#0",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "2982": {
      "op": "extract_uint64",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0"
      ]
    },
    "2983": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "0"
      ]
    },
    "2984": {
      "op": "bytec 16 // \"interest_bps\"",
      "defined_out": [
        "\"interest_bps\"",
        "0",
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "0",
        "\"interest_bps\""
      ]
    },
    "2986": {
      "op": "app_global_get_ex",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "maybe_exists%0#0",
        "now#0",
        "principal#0",
        "rateBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0",
        "maybe_exists%0#0"
      ]
    },
    "2987": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0"
      ]
    },
    "2988": {
      "op": "dig 1",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0",
        "principal#0 (copy)",
        "rateBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0",
        "principal#0 (copy)"
      ]
    },
    "2990": {
      "op": "mulw",
      "defined_out": [
        "deltaT#0",
        "hi1#0",
        "last#0",
        "lo1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "hi1#0",
        "lo1#0"
      ]
    },
    "2991": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "deltaT#0",
        "hi1#0",
        "last#0",
        "lo1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "hi1#0",
        "lo1#0",
        "10000"
      ]
    },
    "2992": {
      "op": "divw",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0",
        "rateScaled#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateScaled#0"
      ]
    },
    "2993": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "rateScaled#0",
        "deltaT#0"
      ]
    },
    "2995": {
      "op": "mulw",
      "defined_out": [
        "hi2#0",
        "last#0",
        "lo2#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "hi2#0",
        "lo2#0"
      ]
    },
    "2996": {
      "op": "pushint 31536000 // 31536000",
      "defined_out": [
        "31536000",
        "hi2#0",
        "last#0",
        "lo2#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "hi2#0",
        "lo2#0",
        "31536000"
      ]
    },
    "3001": {
      "op": "divw",
      "defined_out": [
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0"
      ]
    },
    "3002": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "0"
      ]
    },
    "3003": {
      "op": "bytec 18 // \"protocol_interest_fee_bps\"",
      "defined_out": [
        "\"protocol_interest_fee_bps\"",
        "0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "0",
        "\"protocol_interest_fee_bps\""
      ]
    },
    "3005": {
      "op": "app_global_get_ex",
      "defined_out": [
        "interest#0",
        "last#0",
        "maybe_exists%1#0",
        "now#0",
        "principal#0",
        "protoBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0",
        "maybe_exists%1#0"
      ]
    },
    "3006": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0"
      ]
    },
    "3007": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0",
        "10000"
      ]
    },
    "3008": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "10000",
        "protoBps#0"
      ]
    },
    "3009": {
      "op": "-",
      "defined_out": [
        "depositorBps#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorBps#0"
      ]
    },
    "3010": {
      "op": "dig 1",
      "defined_out": [
        "depositorBps#0",
        "interest#0",
        "interest#0 (copy)",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorBps#0",
        "interest#0 (copy)"
      ]
    },
    "3012": {
      "op": "mulw",
      "defined_out": [
        "hiDep#0",
        "interest#0",
        "last#0",
        "loDep#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "hiDep#0",
        "loDep#0"
      ]
    },
    "3013": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "hiDep#0",
        "loDep#0",
        "10000"
      ]
    },
    "3014": {
      "op": "divw",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0"
      ]
    },
    "3015": {
      "op": "dup2",
      "defined_out": [
        "depositorInterest#0",
        "depositorInterest#0 (copy)",
        "interest#0",
        "interest#0 (copy)",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "interest#0 (copy)",
        "depositorInterest#0 (copy)"
      ]
    },
    "3016": {
      "op": "-",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0"
      ]
    },
    "3017": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "0"
      ]
    },
    "3018": {
      "op": "bytec 5 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "3020": {
      "op": "app_global_get_ex",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3021": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "maybe_value%2#0"
      ]
    },
    "3022": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%2#0",
        "depositorInterest#0"
      ]
    },
    "3024": {
      "op": "+",
      "defined_out": [
        "interest#0",
        "last#0",
        "new_state_value%0#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "new_state_value%0#0"
      ]
    },
    "3025": {
      "op": "bytec 5 // \"total_deposits\"",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "new_state_value%0#0",
        "\"total_deposits\""
      ]
    },
    "3027": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "\"total_deposits\"",
        "new_state_value%0#0"
      ]
    },
    "3028": {
      "op": "app_global_put",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0"
      ]
    },
    "3029": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "0"
      ]
    },
    "3030": {
      "op": "bytec 9 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "3032": {
      "op": "app_global_get_ex",
      "defined_out": [
        "interest#0",
        "last#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3033": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%3#0"
      ]
    },
    "3034": {
      "op": "+",
      "defined_out": [
        "interest#0",
        "last#0",
        "new_state_value%1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "new_state_value%1#0"
      ]
    },
    "3035": {
      "op": "bytec 9 // \"fee_pool\"",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "new_state_value%1#0",
        "\"fee_pool\""
      ]
    },
    "3037": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "\"fee_pool\"",
        "new_state_value%1#0"
      ]
    },
    "3038": {
      "op": "app_global_put",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0"
      ]
    },
    "3039": {
      "op": "+",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0"
      ]
    },
    "3040": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "record#0 (copy)"
      ]
    },
    "3042": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0"
      ]
    },
    "3045": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "record#0 (copy)"
      ]
    },
    "3047": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "3050": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "record#0 (copy)"
      ]
    },
    "3052": {
      "error": "Index access is out of bounds",
      "op": "extract 40 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3055": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "record#0 (copy)"
      ]
    },
    "3057": {
      "error": "Index access is out of bounds",
      "op": "extract 48 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "3060": {
      "op": "uncover 4",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "newPrincipal#0"
      ]
    },
    "3062": {
      "op": "itob",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "3063": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "record#0 (copy)"
      ]
    },
    "3065": {
      "error": "Index access is out of bounds",
      "op": "extract 64 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0"
      ]
    },
    "3068": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "record#0 (copy)"
      ]
    },
    "3070": {
      "error": "Index access is out of bounds",
      "op": "extract 72 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3073": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "now#0"
      ]
    },
    "3075": {
      "op": "itob",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "3076": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "tmp%3#0"
      ]
    },
    "3078": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "3080": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "last#0",
        "now#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3081": {
      "op": "uncover 6",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0"
      ]
    },
    "3083": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "last#0",
        "now#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3084": {
      "op": "uncover 5",
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "tmp%6#0"
      ]
    },
    "3086": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "last#0",
        "now#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3087": {
      "op": "uncover 4",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "3089": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "last#0",
        "now#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3090": {
      "op": "uncover 3",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "tmp%7#0"
      ]
    },
    "3092": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "last#0",
        "now#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3093": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "tmp%8#0"
      ]
    },
    "3095": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "last#0",
        "now#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3096": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%1#0"
      ]
    },
    "3097": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3098": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%8#0",
        "record#0 (copy)"
      ]
    },
    "3100": {
      "op": "uncover 3"
    },
    "3102": {
      "op": "uncover 3"
    },
    "3104": {
      "retsub": true,
      "op": "retsub"
    },
    "3105": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "params": {
        "borrowerAddress#0": "bytes"
      },
      "block": "getLoanRecord",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3108": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3109": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "3111": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3112": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3113": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3114": {
      "retsub": true,
      "op": "retsub"
    },
    "3115": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "params": {
        "borrowerAddress#0": "bytes"
      },
      "block": "getLoanRecordASAId",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3118": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3119": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "3121": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3122": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3123": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3124": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "72"
      ]
    },
    "3126": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3127": {
      "retsub": true,
      "op": "retsub"
    },
    "3128": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.repayLoanASA",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64",
        "arc19MetaDataStr#0": "bytes"
      },
      "block": "repayLoanASA",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0"
      ]
    },
    "3132": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3134": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3135": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3136": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3137": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%0#0"
      ]
    },
    "3138": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3139": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "3141": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "3143": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3145": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "3146": {
      "op": "bz repayLoanASA_bool_false@4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3149": {
      "op": "frame_dig -3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "3151": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "3153": {
      "op": "frame_dig 2",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "3155": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "3156": {
      "op": "bz repayLoanASA_bool_false@4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3159": {
      "op": "frame_dig -3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "3161": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "3163": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "3165": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "3166": {
      "op": "bz repayLoanASA_bool_false@4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3169": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "3170": {
      "block": "repayLoanASA_bool_merge@5",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3171": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%7#0"
      ]
    },
    "3173": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3176": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#1"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#1"
      ]
    },
    "3179": {
      "op": "pop",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3180": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0"
      ]
    },
    "3181": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3183": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "3184": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"loan_record\"",
        "tmp%8#0"
      ]
    },
    "3186": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%9#0"
      ]
    },
    "3187": {
      "op": "dig 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%9#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3189": {
      "op": "box_put",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3190": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%10#0"
      ]
    },
    "3192": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0"
      ]
    },
    "3195": {
      "op": "swap",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "3196": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "56"
      ]
    },
    "3198": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ]
    },
    "3199": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)"
      ]
    },
    "3201": {
      "op": "dig 1",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "3203": {
      "op": "<=",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3204": {
      "op": "assert",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ]
    },
    "3205": {
      "op": "frame_dig -2",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)"
      ]
    },
    "3207": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3208": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "remainingDebt#0"
      ]
    },
    "3209": {
      "op": "frame_bury 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3211": {
      "op": "bnz repayLoanASA_else_body@9",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0"
      ]
    },
    "3214": {
      "op": "itxn_begin"
    },
    "3215": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3217": {
      "op": "itxn_field Sender",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0"
      ]
    },
    "3219": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3221": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "3"
      ]
    },
    "3223": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3225": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3226": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3228": {
      "op": "itxn_submit"
    },
    "3229": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "\"loan_record\""
      ]
    },
    "3230": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "\"loan_record\"",
        "tmp%15#0"
      ]
    },
    "3232": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "tmp%16#0"
      ]
    },
    "3233": {
      "op": "box_del",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "{box_del}"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "{box_del}"
      ]
    },
    "3234": {
      "op": "pop",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3236": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3237": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3238": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "maybe_value%1#0"
      ]
    },
    "3239": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecord#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "3240": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "new_state_value%0#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "new_state_value%0#0"
      ]
    },
    "3241": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3242": {
      "op": "swap",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3243": {
      "op": "app_global_put",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3244": {
      "op": "itxn_begin"
    },
    "3245": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3247": {
      "op": "frame_dig 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3249": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3250": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "32"
      ]
    },
    "3252": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3253": {
      "op": "swap",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3254": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3256": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3257": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3259": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3261": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3263": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "4"
      ]
    },
    "3264": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3266": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3267": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3269": {
      "op": "itxn_submit"
    },
    "3270": {
      "retsub": true,
      "op": "retsub"
    },
    "3271": {
      "block": "repayLoanASA_else_body@9",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "3273": {
      "op": "dup",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3274": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "48"
      ]
    },
    "3276": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0"
      ]
    },
    "3277": {
      "op": "dig 1",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3279": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "3282": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "3284": {
      "op": "uncover 3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "loanRecord#0"
      ]
    },
    "3286": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3288": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "3289": {
      "op": "frame_dig 1",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "remainingDebt#0"
      ]
    },
    "3291": {
      "op": "cover 4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "3293": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "arc19MetaDataStr#0 (copy)"
      ]
    },
    "3295": {
      "op": "uncover 6",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "arc19MetaDataStr#0 (copy)",
        "loanRecordASAId#0"
      ]
    },
    "3297": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3300": {
      "retsub": true,
      "op": "retsub"
    },
    "3301": {
      "block": "repayLoanASA_bool_false@4",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "3302": {
      "op": "b repayLoanASA_bool_merge@5"
    },
    "3305": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.repayLoanAlgo",
      "params": {
        "paymentTxn#0": "uint64",
        "amount#0": "uint64",
        "arc19MetaDataStr#0": "bytes"
      },
      "block": "repayLoanAlgo",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3308": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0"
      ]
    },
    "3309": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3311": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3312": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3313": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3314": {
      "op": "bury 1",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_exists%0#0"
      ]
    },
    "3316": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3317": {
      "op": "frame_dig -3",
      "defined_out": [
        "paymentTxn#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "paymentTxn#0 (copy)"
      ]
    },
    "3319": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%0#0"
      ]
    },
    "3321": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3323": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%2#0"
      ]
    },
    "3324": {
      "op": "bz repayLoanAlgo_bool_false@3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3327": {
      "op": "frame_dig -3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "paymentTxn#0 (copy)"
      ]
    },
    "3329": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%3#0"
      ]
    },
    "3331": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%3#0",
        "amount#0 (copy)"
      ]
    },
    "3333": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%4#0"
      ]
    },
    "3334": {
      "op": "bz repayLoanAlgo_bool_false@3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3337": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "and_result%0#0"
      ]
    },
    "3338": {
      "block": "repayLoanAlgo_bool_merge@4",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3339": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%5#0"
      ]
    },
    "3341": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0"
      ]
    },
    "3344": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#1"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "loanRecord#1"
      ]
    },
    "3347": {
      "op": "pop",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0"
      ]
    },
    "3348": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "loanRecord#0"
      ]
    },
    "3349": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0"
      ]
    },
    "3351": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "3352": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "\"loan_record\"",
        "tmp%6#0"
      ]
    },
    "3354": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "tmp%7#0"
      ]
    },
    "3355": {
      "op": "dig 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "tmp%7#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3357": {
      "op": "box_put",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0"
      ]
    },
    "3358": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "tmp%8#0"
      ]
    },
    "3360": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecord#0",
        "loanRecordASAId#0"
      ]
    },
    "3363": {
      "op": "swap",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "3364": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "56"
      ]
    },
    "3366": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%9#0"
      ]
    },
    "3367": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%9#0",
        "amount#0 (copy)"
      ]
    },
    "3369": {
      "op": "dig 1",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%9#0",
        "amount#0 (copy)",
        "tmp%9#0 (copy)"
      ]
    },
    "3371": {
      "op": "<=",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "3372": {
      "op": "assert",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%9#0"
      ]
    },
    "3373": {
      "op": "frame_dig -2",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%9#0",
        "amount#0 (copy)"
      ]
    },
    "3375": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3376": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "remainingDebt#0"
      ]
    },
    "3377": {
      "op": "frame_bury 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3379": {
      "op": "bnz repayLoanAlgo_else_body@8",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0"
      ]
    },
    "3382": {
      "op": "itxn_begin"
    },
    "3383": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3385": {
      "op": "itxn_field Sender",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0"
      ]
    },
    "3387": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3389": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "3"
      ]
    },
    "3391": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3394": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3396": {
      "op": "itxn_submit"
    },
    "3397": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "\"loan_record\""
      ]
    },
    "3398": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "\"loan_record\"",
        "tmp%13#0"
      ]
    },
    "3400": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%14#0"
      ]
    },
    "3401": {
      "op": "box_del",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "{box_del}"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "{box_del}"
      ]
    },
    "3402": {
      "op": "pop",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3403": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3404": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3405": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3406": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%1#0"
      ]
    },
    "3407": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecord#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "3408": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "new_state_value%0#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "new_state_value%0#0"
      ]
    },
    "3409": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3410": {
      "op": "swap",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3411": {
      "op": "app_global_put",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3412": {
      "op": "itxn_begin"
    },
    "3413": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3415": {
      "op": "frame_dig 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3417": {
      "op": "dup",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3418": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "32"
      ]
    },
    "3420": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3421": {
      "op": "swap",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3422": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3424": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3425": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3427": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3429": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3431": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "4"
      ]
    },
    "3432": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3434": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3435": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3437": {
      "op": "itxn_submit"
    },
    "3438": {
      "retsub": true,
      "op": "retsub"
    },
    "3439": {
      "block": "repayLoanAlgo_else_body@8",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "3441": {
      "op": "dup",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3442": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "48"
      ]
    },
    "3444": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%18#0"
      ]
    },
    "3445": {
      "op": "dig 1",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%18#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3447": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "loanRecord#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "3450": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3452": {
      "op": "uncover 3",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "loanRecord#0"
      ]
    },
    "3454": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "loanRecord#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3456": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "3457": {
      "op": "frame_dig 1",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0",
        "remainingDebt#0"
      ]
    },
    "3459": {
      "op": "cover 4",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "3461": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0",
        "arc19MetaDataStr#0 (copy)"
      ]
    },
    "3463": {
      "op": "uncover 6",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "remainingDebt#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%22#0",
        "arc19MetaDataStr#0 (copy)",
        "loanRecordASAId#0"
      ]
    },
    "3465": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3468": {
      "retsub": true,
      "op": "retsub"
    },
    "3469": {
      "block": "repayLoanAlgo_bool_false@3",
      "stack_in": [
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "and_result%0#0"
      ]
    },
    "3470": {
      "op": "b repayLoanAlgo_bool_merge@4"
    },
    "3473": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.withdrawFees",
      "params": {},
      "block": "withdrawFees",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3475": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3476": {
      "op": "bytec_3 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "3477": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3478": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3479": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3480": {
      "op": "assert",
      "stack_out": []
    },
    "3481": {
      "op": "itxn_begin"
    },
    "3482": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3483": {
      "op": "bytec_3 // \"admin_account\"",
      "stack_out": [
        "0",
        "\"admin_account\""
      ]
    },
    "3484": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3485": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3486": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "3487": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3488": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3489": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "3490": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3491": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "3492": {
      "op": "bytec 9 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "3494": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3495": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "3496": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3498": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3500": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "3502": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "3503": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3505": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3506": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3508": {
      "op": "itxn_submit"
    },
    "3509": {
      "op": "bytec 9 // \"fee_pool\"",
      "stack_out": [
        "\"fee_pool\""
      ]
    },
    "3511": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"fee_pool\"",
        "0"
      ]
    },
    "3512": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3513": {
      "retsub": true,
      "op": "retsub"
    },
    "3514": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueLoanInterest",
      "params": {
        "debtor#0": "bytes",
        "arc19MetaDataStr#0": "bytes"
      },
      "block": "accrueLoanInterest",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3517": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3518": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3520": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3521": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3522": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3523": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3525": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3526": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3527": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3528": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3529": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "accrueInterest%0#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "accrueInterest%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3532": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3534": {
      "op": "dup",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3535": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3537": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0"
      ]
    },
    "3538": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3540": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "currentLoanRecord#0 (copy)",
        "48"
      ]
    },
    "3542": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "3543": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3545": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "3548": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3550": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3552": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "3553": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3555": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0",
        "currentLoanRecord#0 (copy)",
        "72"
      ]
    },
    "3557": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "3558": {
      "op": "cover 4"
    },
    "3560": {
      "op": "cover 4",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%8#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "3562": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%8#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "debtor#0 (copy)"
      ]
    },
    "3564": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "debtor#0 (copy)",
        "tmp%8#0"
      ]
    },
    "3566": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc19MetaDataStr#0 (copy)",
        "currentLoanRecord#0",
        "debtor#0 (copy)",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "debtor#0 (copy)",
        "tmp%8#0",
        "arc19MetaDataStr#0 (copy)"
      ]
    },
    "3568": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0",
        "debtor#0 (copy)",
        "tmp%8#0",
        "arc19MetaDataStr#0 (copy)",
        "tmp%10#0"
      ]
    },
    "3570": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateLoanRecord",
      "op": "callsub updateLoanRecord",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3573": {
      "op": "box_put",
      "stack_out": []
    },
    "3574": {
      "retsub": true,
      "op": "retsub"
    },
    "3575": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.buyoutASA",
      "params": {
        "buyer#0": "bytes",
        "debtor#0": "bytes",
        "axferTxn#0": "uint64"
      },
      "block": "buyoutASA",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3578": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "3580": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "tmp%26#0",
        "\"loan_record\""
      ]
    },
    "3581": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3583": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0"
      ]
    },
    "3584": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3586": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3587": {
      "op": "bury 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3589": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3590": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3591": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3592": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3593": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3594": {
      "op": "cover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3596": {
      "op": "cover 3",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3598": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3599": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ]
    },
    "3600": {
      "op": "dig 1",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3602": {
      "op": "box_put",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3603": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3604": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3606": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0"
      ]
    },
    "3607": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3608": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3610": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3611": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3613": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3614": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "3615": {
      "op": "cover 3",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3617": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3619": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "32"
      ]
    },
    "3621": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "to_encode%0#0"
      ]
    },
    "3622": {
      "op": "itob",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3623": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "3624": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3626": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "\"accepted_collaterals\""
      ]
    },
    "3628": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0"
      ]
    },
    "3629": {
      "op": "concat",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%0#1"
      ]
    },
    "3630": {
      "op": "box_get",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "3631": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3632": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)"
      ]
    },
    "3633": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "16"
      ]
    },
    "3635": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3636": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "3637": {
      "op": "cover 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3639": {
      "op": "dig 2",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3641": {
      "op": ">=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%8#0"
      ]
    },
    "3642": {
      "error": "Collateral amount exceeds current total",
      "op": "assert // Collateral amount exceeds current total",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3643": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "3645": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%10#0"
      ]
    },
    "3646": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "oraclePrice#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "3649": {
      "op": "mulw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0"
      ]
    },
    "3650": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "3651": {
      "op": "divw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "3652": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)"
      ]
    },
    "3653": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "debtAmount#0"
      ]
    },
    "3655": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3656": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0"
      ]
    },
    "3657": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3659": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3660": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "3661": {
      "op": "dig 1",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "CR#0 (copy)"
      ]
    },
    "3663": {
      "op": "<",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "tmp%11#0"
      ]
    },
    "3664": {
      "error": "loan is not eligible for buyout",
      "op": "assert // loan is not eligible for buyout",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3665": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "10000"
      ]
    },
    "3666": {
      "op": "*",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0"
      ]
    },
    "3667": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0"
      ]
    },
    "3668": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3670": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3671": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "3672": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%13#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0"
      ]
    },
    "3673": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0",
        "10000"
      ]
    },
    "3674": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "premiumRate#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0"
      ]
    },
    "3675": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0",
        "10000"
      ]
    },
    "3676": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0"
      ]
    },
    "3677": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0",
        "1"
      ]
    },
    "3678": {
      "op": "+",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%15#0"
      ]
    },
    "3679": {
      "op": "*",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3680": {
      "op": "frame_dig -1",
      "defined_out": [
        "axferTxn#0 (copy)",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3682": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0"
      ]
    },
    "3684": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "0"
      ]
    },
    "3685": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3686": {
      "op": "app_global_get_ex",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3687": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "maybe_value%4#0"
      ]
    },
    "3688": {
      "op": "btoi",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3689": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%18#0"
      ]
    },
    "3690": {
      "op": "bz buyoutASA_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3693": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3695": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0"
      ]
    },
    "3697": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3699": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%21#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0"
      ]
    },
    "3700": {
      "op": "bz buyoutASA_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3703": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3705": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%22#0"
      ]
    },
    "3707": {
      "op": "frame_dig 7",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%22#0",
        "buyoutPrice#0"
      ]
    },
    "3709": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%23#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%23#0"
      ]
    },
    "3710": {
      "op": "bz buyoutASA_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3713": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3714": {
      "block": "buyoutASA_bool_merge@5",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3715": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0"
      ]
    },
    "3717": {
      "op": "frame_dig 2",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "currentLoanRecord#0"
      ]
    },
    "3719": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "currentLoanRecord#0",
        "72"
      ]
    },
    "3721": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "3722": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "3723": {
      "op": "frame_bury 0",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "3725": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "currentLoanRecord#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%27#0",
        "assetExists#0"
      ]
    },
    "3727": {
      "op": "bury 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "assetExists#0"
      ]
    },
    "3729": {
      "op": "bnz buyoutASA_after_if_else@8",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3732": {
      "op": "itxn_begin"
    },
    "3733": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3735": {
      "op": "frame_dig 4",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtAmount#0"
      ]
    },
    "3737": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3739": {
      "op": "frame_dig -2",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3741": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3743": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ]
    },
    "3745": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3747": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3749": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "4"
      ]
    },
    "3750": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3752": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3753": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3755": {
      "op": "itxn_submit"
    },
    "3756": {
      "block": "buyoutASA_after_if_else@8",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "itxn_begin"
    },
    "3757": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3759": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3761": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%26#0"
      ]
    },
    "3763": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3765": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "3"
      ]
    },
    "3767": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3769": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3770": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3772": {
      "op": "itxn_submit"
    },
    "3773": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%0#0"
      ]
    },
    "3775": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#0",
        "tmp%26#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "{box_del}"
      ]
    },
    "3776": {
      "op": "pop",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3777": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3778": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3779": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3780": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0"
      ]
    },
    "3781": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%5#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "3782": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0"
      ]
    },
    "3783": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3784": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3785": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3786": {
      "op": "itxn_begin"
    },
    "3787": {
      "op": "frame_dig 5",
      "defined_out": [
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0"
      ]
    },
    "3789": {
      "op": "dup",
      "defined_out": [
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "3790": {
      "op": "btoi",
      "defined_out": [
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "3791": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "3793": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "3794": {
      "op": "cover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3796": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "3798": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3800": {
      "op": "frame_dig -3",
      "defined_out": [
        "buyer#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "buyer#0 (copy)"
      ]
    },
    "3802": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3804": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "3805": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3807": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "3808": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3810": {
      "op": "itxn_submit"
    },
    "3811": {
      "op": "frame_dig 6",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "tmp%7#0"
      ]
    },
    "3813": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralAmount#0"
      ]
    },
    "3814": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "newTotal#0",
        "tmp%0#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "3815": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3818": {
      "retsub": true,
      "op": "retsub"
    },
    "3819": {
      "block": "buyoutASA_bool_false@4",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3820": {
      "op": "b buyoutASA_bool_merge@5"
    },
    "3823": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.buyoutAlgo",
      "params": {
        "buyer#0": "bytes",
        "debtor#0": "bytes",
        "paymentTxn#0": "uint64"
      },
      "block": "buyoutAlgo",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3826": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "3828": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "tmp%23#0",
        "\"loan_record\""
      ]
    },
    "3829": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "tmp%23#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3831": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0"
      ]
    },
    "3832": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3834": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3835": {
      "op": "bury 1",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3837": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3838": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3839": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3840": {
      "op": "swap",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3841": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3842": {
      "op": "cover 2",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3844": {
      "op": "cover 3",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3846": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3847": {
      "op": "swap",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ]
    },
    "3848": {
      "op": "dig 1",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3850": {
      "op": "box_put",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3851": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3852": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3854": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0"
      ]
    },
    "3855": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3856": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3858": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3859": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3861": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3862": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "3863": {
      "op": "cover 3",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3865": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3867": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "32"
      ]
    },
    "3869": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "to_encode%0#0"
      ]
    },
    "3870": {
      "op": "itob",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3871": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "3872": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3874": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "\"accepted_collaterals\""
      ]
    },
    "3876": {
      "op": "swap",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0"
      ]
    },
    "3877": {
      "op": "concat",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%0#1"
      ]
    },
    "3878": {
      "op": "box_get",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "3879": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3880": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)"
      ]
    },
    "3881": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "16"
      ]
    },
    "3883": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3884": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "3885": {
      "op": "cover 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3887": {
      "op": "dig 2",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3889": {
      "op": ">=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%8#0"
      ]
    },
    "3890": {
      "error": "Collateral amount exceeds current total",
      "op": "assert // Collateral amount exceeds current total",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3891": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "3893": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%10#0"
      ]
    },
    "3894": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "oraclePrice#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "3897": {
      "op": "mulw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0"
      ]
    },
    "3898": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "3899": {
      "op": "divw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "3900": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)"
      ]
    },
    "3901": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "debtAmount#0"
      ]
    },
    "3903": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3904": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0"
      ]
    },
    "3905": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3907": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3908": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "3909": {
      "op": "dig 1",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "CR#0 (copy)"
      ]
    },
    "3911": {
      "op": "<",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "tmp%11#0"
      ]
    },
    "3912": {
      "error": "loan is not eligible for buyout",
      "op": "assert // loan is not eligible for buyout",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3913": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "10000"
      ]
    },
    "3914": {
      "op": "*",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0"
      ]
    },
    "3915": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0"
      ]
    },
    "3916": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3918": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3919": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "3920": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%13#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0"
      ]
    },
    "3921": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0",
        "10000"
      ]
    },
    "3922": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "premiumRate#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0"
      ]
    },
    "3923": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0",
        "10000"
      ]
    },
    "3924": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0"
      ]
    },
    "3925": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0",
        "1"
      ]
    },
    "3926": {
      "op": "+",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%15#0"
      ]
    },
    "3927": {
      "op": "*",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3928": {
      "op": "frame_dig -1",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "paymentTxn#0 (copy)",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "paymentTxn#0 (copy)"
      ]
    },
    "3930": {
      "op": "gtxns Receiver",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0"
      ]
    },
    "3932": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3934": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%18#0"
      ]
    },
    "3935": {
      "op": "bz buyoutAlgo_bool_false@3",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3938": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "paymentTxn#0 (copy)"
      ]
    },
    "3940": {
      "op": "gtxns Amount",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0"
      ]
    },
    "3942": {
      "op": "frame_dig 7",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0",
        "buyoutPrice#0"
      ]
    },
    "3944": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%20#0"
      ]
    },
    "3945": {
      "op": "bz buyoutAlgo_bool_false@3",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3948": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3949": {
      "block": "buyoutAlgo_bool_merge@4",
      "stack_in": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3950": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0"
      ]
    },
    "3952": {
      "op": "frame_dig 2",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0",
        "currentLoanRecord#0"
      ]
    },
    "3954": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0",
        "currentLoanRecord#0",
        "72"
      ]
    },
    "3956": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "3957": {
      "op": "dup",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%23#0"
      ]
    },
    "3958": {
      "op": "frame_bury 0",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "3960": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "currentLoanRecord#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "assetExists#0"
      ]
    },
    "3962": {
      "op": "bury 1",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "assetExists#0"
      ]
    },
    "3964": {
      "op": "bnz buyoutAlgo_after_if_else@7",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3967": {
      "op": "itxn_begin"
    },
    "3968": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3970": {
      "op": "frame_dig 4",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtAmount#0"
      ]
    },
    "3972": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3974": {
      "op": "frame_dig -2",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3976": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3978": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%23#0"
      ]
    },
    "3980": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3982": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3984": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "4"
      ]
    },
    "3985": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3987": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3988": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3990": {
      "op": "itxn_submit"
    },
    "3991": {
      "block": "buyoutAlgo_after_if_else@7",
      "stack_in": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "itxn_begin"
    },
    "3992": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3994": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3996": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%23#0"
      ]
    },
    "3998": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "4000": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "3"
      ]
    },
    "4002": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "4004": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "4005": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "4007": {
      "op": "itxn_submit"
    },
    "4008": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%0#0"
      ]
    },
    "4010": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#0",
        "tmp%23#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "{box_del}"
      ]
    },
    "4011": {
      "op": "pop",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "4012": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "4013": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "4014": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4015": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%4#0"
      ]
    },
    "4016": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "4017": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0"
      ]
    },
    "4018": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "4019": {
      "op": "swap",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "4020": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "4021": {
      "op": "itxn_begin"
    },
    "4022": {
      "op": "frame_dig 5",
      "defined_out": [
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0"
      ]
    },
    "4024": {
      "op": "dup",
      "defined_out": [
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "4025": {
      "op": "btoi",
      "defined_out": [
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4026": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "4028": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "4029": {
      "op": "cover 2",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4031": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4033": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "4035": {
      "op": "frame_dig -3",
      "defined_out": [
        "buyer#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "buyer#0 (copy)"
      ]
    },
    "4037": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "4039": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "4040": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "4042": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "4043": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "4045": {
      "op": "itxn_submit"
    },
    "4046": {
      "op": "frame_dig 6",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%23#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "tmp%7#0"
      ]
    },
    "4048": {
      "op": "swap",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralAmount#0"
      ]
    },
    "4049": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "newTotal#0",
        "tmp%0#0",
        "tmp%23#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "4050": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "4053": {
      "retsub": true,
      "op": "retsub"
    },
    "4054": {
      "block": "buyoutAlgo_bool_false@3",
      "stack_in": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "4055": {
      "op": "b buyoutAlgo_bool_merge@4"
    },
    "4058": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.liquidateASA",
      "params": {
        "debtor#0": "bytes",
        "axferTxn#0": "uint64"
      },
      "block": "liquidateASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4061": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loanRecordASAId#0"
      ]
    },
    "4063": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "\"loan_record\""
      ]
    },
    "4064": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "4066": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0"
      ]
    },
    "4067": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4069": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4070": {
      "op": "bury 1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4072": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "4073": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "4074": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "record#0"
      ]
    },
    "4075": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4076": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "4078": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0"
      ]
    },
    "4079": {
      "op": "dup",
      "defined_out": [
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4080": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "record#0 (copy)",
        "40"
      ]
    },
    "4082": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "collateralAmount#0"
      ]
    },
    "4083": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4084": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0"
      ]
    },
    "4086": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4087": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "4089": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0"
      ]
    },
    "4090": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "4091": {
      "op": "cover 3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0"
      ]
    },
    "4093": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "record#0"
      ]
    },
    "4095": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "4098": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "4099": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "4101": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "\"accepted_collaterals\""
      ]
    },
    "4103": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0"
      ]
    },
    "4104": {
      "op": "concat",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%0#1"
      ]
    },
    "4105": {
      "op": "box_get",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%0#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "4106": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "maybe_exists%0#0",
        "acceptedCollateral#0"
      ]
    },
    "4107": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "maybe_exists%0#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)"
      ]
    },
    "4108": {
      "op": "cover 2",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0",
        "acceptedCollateral#0"
      ]
    },
    "4110": {
      "op": "cover 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%0#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "4112": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "4113": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "4115": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%5#0"
      ]
    },
    "4116": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "oraclePrice#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "4119": {
      "op": "mulw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "h#0",
        "l#0"
      ]
    },
    "4120": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "1"
      ]
    },
    "4121": {
      "op": "divw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "4122": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralUSD#0",
        "debtAmount#0"
      ]
    },
    "4123": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0"
      ]
    },
    "4124": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "0"
      ]
    },
    "4125": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "4127": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4128": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "4129": {
      "op": "<=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%6#0"
      ]
    },
    "4130": {
      "error": "loan is not liquidatable",
      "op": "assert // loan is not liquidatable",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4131": {
      "op": "frame_dig -1",
      "defined_out": [
        "acceptedCollateral#0",
        "axferTxn#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "axferTxn#0 (copy)"
      ]
    },
    "4133": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "4135": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "4137": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%9#0"
      ]
    },
    "4138": {
      "op": "bz liquidateASA_bool_false@4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4141": {
      "op": "frame_dig -1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "axferTxn#0 (copy)"
      ]
    },
    "4143": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0"
      ]
    },
    "4145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "0"
      ]
    },
    "4146": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "4147": {
      "op": "app_global_get_ex",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4148": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "4149": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "4150": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%12#0"
      ]
    },
    "4151": {
      "op": "bz liquidateASA_bool_false@4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4154": {
      "op": "frame_dig -1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "axferTxn#0 (copy)"
      ]
    },
    "4156": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%13#0"
      ]
    },
    "4158": {
      "op": "frame_dig 4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%13#0",
        "debtAmount#0"
      ]
    },
    "4160": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%14#0"
      ]
    },
    "4161": {
      "op": "bz liquidateASA_bool_false@4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4164": {
      "op": "intc_1 // 1",
      "defined_out": [
        "acceptedCollateral#0",
        "and_result%0#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ]
    },
    "4165": {
      "block": "liquidateASA_bool_merge@5",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4166": {
      "op": "frame_dig 2",
      "defined_out": [
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "record#0"
      ]
    },
    "4168": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "record#0",
        "72"
      ]
    },
    "4170": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4171": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0",
        "loanRecordASAId#0"
      ]
    },
    "4172": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4174": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0",
        "tmp%16#0"
      ]
    },
    "4176": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%16#0",
        "loanRecordASAId#0"
      ]
    },
    "4177": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%17#0",
        "assetExists#0"
      ]
    },
    "4179": {
      "op": "bury 1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "assetExists#0"
      ]
    },
    "4181": {
      "op": "bnz liquidateASA_after_if_else@8",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4184": {
      "op": "itxn_begin"
    },
    "4185": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4187": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "4188": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4190": {
      "op": "frame_dig 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0"
      ]
    },
    "4192": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4194": {
      "op": "frame_dig -2",
      "defined_out": [
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "4196": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4198": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4200": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "4"
      ]
    },
    "4201": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4204": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4206": {
      "op": "itxn_submit"
    },
    "4207": {
      "block": "liquidateASA_after_if_else@8",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ],
      "op": "itxn_begin"
    },
    "4208": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "4210": {
      "op": "itxn_field Sender",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4212": {
      "op": "frame_dig 0",
      "defined_out": [
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4214": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4216": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "3"
      ]
    },
    "4218": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4220": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4221": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4223": {
      "op": "itxn_submit"
    },
    "4224": {
      "op": "frame_dig 1",
      "defined_out": [
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%0#0"
      ]
    },
    "4226": {
      "op": "box_del",
      "defined_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "{box_del}"
      ]
    },
    "4227": {
      "op": "pop",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4228": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4229": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "4230": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecordASAId#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4231": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%4#0"
      ]
    },
    "4232": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecordASAId#0",
        "maybe_value%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "4233": {
      "op": "-",
      "defined_out": [
        "loanRecordASAId#0",
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "new_state_value%0#0"
      ]
    },
    "4234": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "4235": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "4236": {
      "op": "app_global_put",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4237": {
      "op": "itxn_begin"
    },
    "4238": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4240": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "record#0"
      ]
    },
    "4242": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "record#0",
        "32"
      ]
    },
    "4244": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4245": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "4247": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "4248": {
      "op": "cover 3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4250": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4252": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4254": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4256": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "4257": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "4260": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4262": {
      "op": "itxn_submit"
    },
    "4263": {
      "op": "frame_dig 6",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "4265": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "16"
      ]
    },
    "4267": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "tmp%21#0"
      ]
    },
    "4268": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%21#0",
        "collateralAmount#0"
      ]
    },
    "4269": {
      "op": "-",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "newTotal#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "newTotal#0"
      ]
    },
    "4270": {
      "op": "frame_dig 5",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "loanRecordASAId#0",
        "newTotal#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "newTotal#0",
        "collateralTokenId#0"
      ]
    },
    "4272": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "4273": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4276": {
      "retsub": true,
      "op": "retsub"
    },
    "4277": {
      "block": "liquidateASA_bool_false@4",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ]
    },
    "4278": {
      "op": "b liquidateASA_bool_merge@5"
    },
    "4281": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.liquidateAlgo",
      "params": {
        "debtor#0": "bytes",
        "paymentTxn#0": "uint64"
      },
      "block": "liquidateAlgo",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4284": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loanRecordASAId#0"
      ]
    },
    "4286": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "\"loan_record\""
      ]
    },
    "4287": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "4289": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0"
      ]
    },
    "4290": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4292": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4293": {
      "op": "bury 1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4295": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "4296": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "4297": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "record#0"
      ]
    },
    "4298": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4299": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "4301": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0"
      ]
    },
    "4302": {
      "op": "dup",
      "defined_out": [
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4303": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "record#0 (copy)",
        "40"
      ]
    },
    "4305": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "collateralAmount#0"
      ]
    },
    "4306": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4307": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0"
      ]
    },
    "4309": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4310": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "4312": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0"
      ]
    },
    "4313": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "4314": {
      "op": "cover 3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "record#0",
        "debtAmount#0"
      ]
    },
    "4316": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "record#0"
      ]
    },
    "4318": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "4321": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "4322": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "4324": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "\"accepted_collaterals\""
      ]
    },
    "4326": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0"
      ]
    },
    "4327": {
      "op": "concat",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%0#1"
      ]
    },
    "4328": {
      "op": "box_get",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%0#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "4329": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "maybe_exists%0#0",
        "acceptedCollateral#0"
      ]
    },
    "4330": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "maybe_exists%0#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)"
      ]
    },
    "4331": {
      "op": "cover 2",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0",
        "acceptedCollateral#0"
      ]
    },
    "4333": {
      "op": "cover 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%0#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "4335": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "4336": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "4338": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%5#0"
      ]
    },
    "4339": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "oraclePrice#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "4342": {
      "op": "mulw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "h#0",
        "l#0"
      ]
    },
    "4343": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "h#0",
        "l#0",
        "1"
      ]
    },
    "4344": {
      "op": "divw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "4345": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralUSD#0",
        "debtAmount#0"
      ]
    },
    "4346": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0"
      ]
    },
    "4347": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "0"
      ]
    },
    "4348": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "4350": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4351": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "4352": {
      "op": "<=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%6#0"
      ]
    },
    "4353": {
      "error": "loan is not liquidatable",
      "op": "assert // loan is not liquidatable",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4354": {
      "op": "frame_dig -1",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "paymentTxn#0 (copy)",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "paymentTxn#0 (copy)"
      ]
    },
    "4356": {
      "op": "gtxns Receiver",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "4358": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "4360": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%9#0"
      ]
    },
    "4361": {
      "op": "bz liquidateAlgo_bool_false@3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4364": {
      "op": "frame_dig -1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "paymentTxn#0 (copy)"
      ]
    },
    "4366": {
      "op": "gtxns Amount",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0"
      ]
    },
    "4368": {
      "op": "frame_dig 4",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%10#0",
        "debtAmount#0"
      ]
    },
    "4370": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%11#0"
      ]
    },
    "4371": {
      "op": "bz liquidateAlgo_bool_false@3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4374": {
      "op": "intc_1 // 1",
      "defined_out": [
        "acceptedCollateral#0",
        "and_result%0#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ]
    },
    "4375": {
      "block": "liquidateAlgo_bool_merge@4",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4376": {
      "op": "frame_dig 2",
      "defined_out": [
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "record#0"
      ]
    },
    "4378": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "record#0",
        "72"
      ]
    },
    "4380": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4381": {
      "op": "dup",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0",
        "loanRecordASAId#0"
      ]
    },
    "4382": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4384": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "loanRecordASAId#0",
        "record#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0",
        "tmp%13#0"
      ]
    },
    "4386": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%13#0",
        "loanRecordASAId#0"
      ]
    },
    "4387": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%14#0",
        "assetExists#0"
      ]
    },
    "4389": {
      "op": "bury 1",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "assetExists#0"
      ]
    },
    "4391": {
      "op": "bnz liquidateAlgo_after_if_else@7",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4394": {
      "op": "itxn_begin"
    },
    "4395": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4397": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "4398": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4400": {
      "op": "frame_dig 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0"
      ]
    },
    "4402": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4404": {
      "op": "frame_dig -2",
      "defined_out": [
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "4406": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4408": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4410": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "loanRecordASAId#0",
        "record#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "4"
      ]
    },
    "4411": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4413": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4414": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4416": {
      "op": "itxn_submit"
    },
    "4417": {
      "block": "liquidateAlgo_after_if_else@7",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ],
      "op": "itxn_begin"
    },
    "4418": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "4420": {
      "op": "itxn_field Sender",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4422": {
      "op": "frame_dig 0",
      "defined_out": [
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "loanRecordASAId#0"
      ]
    },
    "4424": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4426": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "3"
      ]
    },
    "4428": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4430": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4431": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4433": {
      "op": "itxn_submit"
    },
    "4434": {
      "op": "frame_dig 1",
      "defined_out": [
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%0#0"
      ]
    },
    "4436": {
      "op": "box_del",
      "defined_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "{box_del}"
      ]
    },
    "4437": {
      "op": "pop",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "4439": {
      "op": "bytec_1 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "4440": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecordASAId#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4441": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%3#0"
      ]
    },
    "4442": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecordASAId#0",
        "maybe_value%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "4443": {
      "op": "-",
      "defined_out": [
        "loanRecordASAId#0",
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "new_state_value%0#0"
      ]
    },
    "4444": {
      "op": "bytec_1 // \"active_loan_records\"",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "4445": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "4446": {
      "op": "app_global_put",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4447": {
      "op": "itxn_begin"
    },
    "4448": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4450": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "record#0"
      ]
    },
    "4452": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "record#0",
        "32"
      ]
    },
    "4454": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4455": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "4457": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "4458": {
      "op": "cover 3",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4460": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "4462": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "4464": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4466": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "4467": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4469": {
      "op": "intc_0 // 0",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "4470": {
      "op": "itxn_field Fee",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0"
      ]
    },
    "4472": {
      "op": "itxn_submit"
    },
    "4473": {
      "op": "frame_dig 6",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "4475": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "16"
      ]
    },
    "4477": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "record#0",
        "tmp%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "tmp%18#0"
      ]
    },
    "4478": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "tmp%18#0",
        "collateralAmount#0"
      ]
    },
    "4479": {
      "op": "-",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "loanRecordASAId#0",
        "newTotal#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "newTotal#0"
      ]
    },
    "4480": {
      "op": "frame_dig 5",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "loanRecordASAId#0",
        "newTotal#0",
        "record#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "newTotal#0",
        "collateralTokenId#0"
      ]
    },
    "4482": {
      "op": "swap",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "4483": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ]
    },
    "4486": {
      "retsub": true,
      "op": "retsub"
    },
    "4487": {
      "block": "liquidateAlgo_bool_false@3",
      "stack_in": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "loanRecordASAId#0",
        "tmp%0#0",
        "record#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "acceptedCollateral#0",
        "and_result%0#0"
      ]
    },
    "4488": {
      "op": "b liquidateAlgo_bool_merge@4"
    },
    "4491": {
      "subroutine": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getLoanStatus",
      "params": {
        "borrower#0": "bytes"
      },
      "block": "getLoanStatus",
      "stack_in": [],
      "op": "proto 1 7"
    },
    "4494": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "4495": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrower#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrower#0 (copy)"
      ]
    },
    "4497": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4498": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4499": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4500": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4502": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4503": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "maybe_exists%1#0"
      ]
    },
    "4504": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "record#0"
      ]
    },
    "4505": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "record#0",
        "record#1"
      ],
      "stack_out": [
        "record#0",
        "record#1"
      ]
    },
    "4508": {
      "op": "pop",
      "stack_out": [
        "record#0"
      ]
    },
    "4509": {
      "op": "dup",
      "defined_out": [
        "record#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "record#0",
        "record#0 (copy)"
      ]
    },
    "4510": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "record#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "record#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "4512": {
      "op": "extract_uint64",
      "defined_out": [
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0"
      ]
    },
    "4513": {
      "op": "dig 1",
      "stack_out": [
        "record#0",
        "debt#0",
        "record#0 (copy)"
      ]
    },
    "4515": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "debt#0",
        "record#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "record#0 (copy)",
        "40"
      ]
    },
    "4517": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0"
      ]
    },
    "4518": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "collateralAmount#0",
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "4519": {
      "op": "bytec 7 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "collateralAmount#0",
        "debt#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "4521": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "maybe_exists%2#0",
        "record#0"
      ],
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "maybe_exists%2#0"
      ]
    },
    "4522": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "record#0",
        "debt#0",
        "collateralAmount#0",
        "liqBps#0"
      ]
    },
    "4523": {
      "op": "uncover 3",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "record#0"
      ]
    },
    "4525": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralTokenId#0"
      ]
    },
    "4528": {
      "op": "bytec 8 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "collateralAmount#0",
        "collateralTokenId#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralTokenId#0",
        "\"accepted_collaterals\""
      ]
    },
    "4530": {
      "op": "swap",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "\"accepted_collaterals\"",
        "collateralTokenId#0"
      ]
    },
    "4531": {
      "op": "concat",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "tmp%0#0"
      ]
    },
    "4532": {
      "op": "box_get",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "acceptedCollateral#0",
        "maybe_exists%0#0"
      ]
    },
    "4533": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "acceptedCollateral#0"
      ]
    },
    "4534": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "4536": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "tmp%6#0"
      ]
    },
    "4537": {
      "callsub": "smart_contracts/orbital_lending/OrbitalLending.algo.ts::OrbitalLending.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "liqBps#0",
        "oraclePrice#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "oraclePrice#0"
      ]
    },
    "4540": {
      "op": "dig 2",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "debt#0",
        "liqBps#0",
        "oraclePrice#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "oraclePrice#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "4542": {
      "op": "mulw",
      "defined_out": [
        "collateralAmount#0",
        "debt#0",
        "hi#0",
        "liqBps#0",
        "lo#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "hi#0",
        "lo#0"
      ]
    },
    "4543": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralAmount#0",
        "debt#0",
        "hi#0",
        "liqBps#0",
        "lo#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "hi#0",
        "lo#0",
        "1"
      ]
    },
    "4544": {
      "op": "divw",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0"
      ]
    },
    "4545": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)"
      ]
    },
    "4546": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "collateralValueUSD#0 (copy)",
        "10000"
      ]
    },
    "4547": {
      "op": "*",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "tmp%7#0"
      ]
    },
    "4548": {
      "op": "dig 4",
      "defined_out": [
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "debt#0 (copy)",
        "liqBps#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "tmp%7#0",
        "debt#0 (copy)"
      ]
    },
    "4550": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0"
      ]
    },
    "4551": {
      "op": "dup",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "CR#0 (copy)"
      ]
    },
    "4552": {
      "op": "dig 3",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "liqBps#0",
        "liqBps#0 (copy)"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "CR#0 (copy)",
        "liqBps#0 (copy)"
      ]
    },
    "4554": {
      "op": "<",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "eligibleForLiquidation#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0"
      ]
    },
    "4555": {
      "op": "dig 1",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "CR#0 (copy)"
      ]
    },
    "4557": {
      "op": "dig 4",
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "CR#0 (copy)",
        "liqBps#0 (copy)"
      ]
    },
    "4559": {
      "op": ">",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralValueUSD#0",
        "debt#0",
        "eligibleForBuyout#0",
        "eligibleForLiquidation#0",
        "liqBps#0"
      ],
      "stack_out": [
        "debt#0",
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0"
      ]
    },
    "4560": {
      "op": "uncover 6",
      "stack_out": [
        "collateralAmount#0",
        "liqBps#0",
        "collateralValueUSD#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0"
      ]
    },
    "4562": {
      "op": "uncover 4",
      "stack_out": [
        "collateralAmount#0",
        "liqBps#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0"
      ]
    },
    "4564": {
      "op": "uncover 6",
      "stack_out": [
        "liqBps#0",
        "CR#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0"
      ]
    },
    "4566": {
      "op": "uncover 5",
      "stack_out": [
        "liqBps#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0"
      ]
    },
    "4568": {
      "op": "uncover 6",
      "stack_out": [
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0",
        "liqBps#0"
      ]
    },
    "4570": {
      "op": "uncover 6",
      "stack_out": [
        "eligibleForBuyout#0",
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0",
        "liqBps#0",
        "eligibleForLiquidation#0"
      ]
    },
    "4572": {
      "op": "uncover 6",
      "stack_out": [
        "debt#0",
        "collateralValueUSD#0",
        "collateralAmount#0",
        "CR#0",
        "liqBps#0",
        "eligibleForLiquidation#0",
        "eligibleForBuyout#0"
      ]
    },
    "4574": {
      "retsub": true,
      "op": "retsub"
    }
  }
}